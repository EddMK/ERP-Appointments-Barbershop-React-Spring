package com.example.backend.controller;

import com.example.backend.entity.Barbershop;
import com.example.backend.entity.User;
import com.example.backend.repository.BarbershopRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/barbershop") // This means URL's start with /demo (after Application path)
public class BarbershopController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private BarbershopRepository barbershopRepository;

  @CrossOrigin
  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewBarbershop (@RequestBody Barbershop barbershop){
     //Ã’ , @RequestBody Timestamp startDate, @RequestBody Timestamp endDate) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Barbershop b = new Barbershop();
    b.setName(barbershop.getName());
    b.setAddress(barbershop.getAddress());
    barbershopRepository.save(b);
    return "Saved";
  }

  @CrossOrigin
  @GetMapping(path="/all")
  public @ResponseBody Iterable<Barbershop> getAllBarbershops() {
    return barbershopRepository.findAll();
  }

}

