{"ast":null,"code":"var _jsxFileName = \"/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/src/components/Schedule.js\";\nimport * as React from \"react\";\nimport './Schedule.css';\nimport { Rendezvous } from '../model/Appointment';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { ViewState } from '@devexpress/dx-react-scheduler';\nimport { Scheduler, DayView, Appointments, CurrentTimeIndicator } from '@devexpress/dx-react-scheduler-material-ui';\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport TimePicker from '@mui/lab/TimePicker';\nimport moment from 'moment';\n/*\n-Il faut afficher l'horaire du coiffeur comme étant occupé \n- Afficher differentes couleurs\n-Il ne peut pas ajouter un rendez-vous si le coiffeur en a deja un\n-Essayer de combler les trous \n-barbe 5 min et coupe 15 min\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst top100Films = ['coupe', 'barbe'];\n\nconst Appointment = _ref => {\n  let {\n    children,\n    style,\n    isShaded,\n    ...restProps\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Appointments.Appointment, { ...restProps,\n    style: { ...style,\n      backgroundColor: '#939393',\n      borderRadius: '8px'\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Appointment;\n\nclass Schedule extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      schedulerData: [{\n        startDate: '2022-04-09T10:20',\n        endDate: '2022-04-09T11:00',\n        title: 'taken'\n      }, {\n        startDate: '2022-04-09T12:00',\n        endDate: '2022-04-09T13:30',\n        title: 'taken'\n      }],\n      date: this.props.date,\n      hairdresser: this.props.hairdresser,\n      service: null,\n      startAppointement: this.props.date,\n      endAppointement: null\n    };\n    this.handleTimePicker = this.handleTimePicker.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleConfirm = this.handleConfirm.bind(this);\n  }\n\n  handleTimePicker(value) {\n    this.setState({\n      startAppointement: value\n    }); //schedulerData.concat({startDate:\"2022-04-01T15:20\",endDate:\"2022-04-01T16:20\", title:\"token\"});\n\n    console.log(value.hours(), value.minutes());\n  }\n\n  handleConfirm() {\n    //schedulerData(...{startDate:\"2022-04-01T15:20\",endDate:\"2022-04-01T16:20\", title:\"token\"});\n    //if(this.state.startAppointement != null &&  this.state.service != null){\n    this.state.startAppointement.set('year', this.state.date.year());\n    this.state.startAppointement.set('month', this.state.date.month());\n    this.state.startAppointement.set('date', this.state.date.date());\n    this.state.startAppointement = moment(this.state.startAppointement);\n    this.setState({\n      startAppointement: moment(this.state.startAppointement)\n    });\n\n    if (this.state.startAppointement != null) {\n      console.log(this.valid());\n\n      if (this.valid()) {\n        var temps = moment(this.state.startAppointement);\n        var temps2 = moment(temps, \"hh:mm A\").add(30, 'minutes');\n        this.setState({\n          schedulerData: [...this.state.schedulerData, {\n            startDate: temps,\n            endDate: temps2,\n            title: \"token\"\n          }]\n        });\n      }\n    }\n  }\n  /*\n  Il manque la validation quand le rendez vous se termine alors que il y en a deja un qui va commencer\n  */\n\n\n  valid() {\n    this.state.schedulerData.forEach(element => {\n      //console.log(\"clique sur validation !\");\n      var tmpStart = moment(element.startDate);\n      var tmpEnd = moment(element.endDate); //console.log(tmpStart<this.state.startAppointement);\n      //console.log(tmpStart<this.state.startAppointement &&  tmpEnd>this.state.startAppointement);\n\n      if (tmpStart < this.state.startAppointement && tmpEnd > this.state.startAppointement) {\n        return false;\n      }\n    });\n  }\n\n  handleCancel() {\n    this.props.click();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Schedule\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [this.state.hairdresser, /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"combo-box-demo\",\n          options: top100Films,\n          style: {\n            width: 300\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Choose the service\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: DateAdapter,\n          children: /*#__PURE__*/_jsxDEV(TimePicker, {\n            label: \"Basic example\",\n            onChange: newValue => {\n              this.handleTimePicker(newValue);\n            },\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hour\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: 400,\n            height: 500\n          },\n          children: /*#__PURE__*/_jsxDEV(Scheduler, {\n            data: this.state.schedulerData,\n            children: [/*#__PURE__*/_jsxDEV(ViewState, {\n              currentDate: this.state.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(DayView, {\n              startDayHour: 10,\n              endDayHour: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Appointments, {\n              appointmentComponent: Appointment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(CurrentTimeIndicator, {\n              shadePreviousCells: true,\n              shadePreviousAppointments: true,\n              updateInterval: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: () => {\n            this.handleConfirm();\n          },\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          onClick: () => {\n            this.handleCancel();\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"sources":["/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/src/components/Schedule.js"],"names":["React","Rendezvous","TextField","Input","Button","Autocomplete","Paper","Box","ViewState","Scheduler","DayView","Appointments","CurrentTimeIndicator","DateAdapter","LocalizationProvider","TimePicker","moment","top100Films","Appointment","children","style","isShaded","restProps","backgroundColor","borderRadius","Schedule","Component","constructor","props","state","schedulerData","startDate","endDate","title","date","hairdresser","service","startAppointement","endAppointement","handleTimePicker","bind","handleCancel","handleConfirm","value","setState","console","log","hours","minutes","set","year","month","valid","temps","temps2","add","forEach","element","tmpStart","tmpEnd","click","render","width","params","newValue","height"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport './Schedule.css';\nimport { Rendezvous } from '../model/Appointment';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { ViewState } from '@devexpress/dx-react-scheduler';\nimport {\n  Scheduler,\n  DayView,\n  Appointments,\n  CurrentTimeIndicator\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport TimePicker from '@mui/lab/TimePicker';\nimport moment from 'moment';\n\n/*\n-Il faut afficher l'horaire du coiffeur comme étant occupé \n- Afficher differentes couleurs\n-Il ne peut pas ajouter un rendez-vous si le coiffeur en a deja un\n-Essayer de combler les trous \n-barbe 5 min et coupe 15 min\n*/\n\nconst top100Films = ['coupe','barbe'];\nconst Appointment = ({\n    children, style, isShaded, ...restProps\n  }) => (\n    <Appointments.Appointment\n      {...restProps}\n      \n      style={{\n        ...style,\n        backgroundColor: '#939393',\n        borderRadius: '8px',\n      }}\n    >\n      {children}\n    </Appointments.Appointment>\n  );\n\nclass Schedule extends React.Component{\n\n    constructor(props){\n      super(props);\n      this.state={\n        schedulerData : [\n          { startDate: '2022-04-09T10:20', endDate: '2022-04-09T11:00', title: 'taken' },\n          { startDate: '2022-04-09T12:00', endDate: '2022-04-09T13:30', title: 'taken' },\n        ],\n        date : this.props.date,\n        hairdresser : this.props.hairdresser,\n        service : null,\n        startAppointement : this.props.date,\n        endAppointement : null\n      }\n      this.handleTimePicker = this.handleTimePicker.bind(this);\n      this.handleCancel = this.handleCancel.bind(this);\n      this.handleConfirm = this.handleConfirm.bind(this);\n    }\n\n    handleTimePicker(value){\n      this.setState({\n        startAppointement : value\n      });\n      //schedulerData.concat({startDate:\"2022-04-01T15:20\",endDate:\"2022-04-01T16:20\", title:\"token\"});\n      console.log(value.hours(), value.minutes());\n    }\n\n    handleConfirm(){\n      //schedulerData(...{startDate:\"2022-04-01T15:20\",endDate:\"2022-04-01T16:20\", title:\"token\"});\n      //if(this.state.startAppointement != null &&  this.state.service != null){\n      this.state.startAppointement.set('year', this.state.date.year());\n      this.state.startAppointement.set('month', this.state.date.month());\n      this.state.startAppointement.set('date', this.state.date.date());\n      this.state.startAppointement = moment(this.state.startAppointement);\n      this.setState({\n        startAppointement : moment(this.state.startAppointement)\n      });\n\n      if(this.state.startAppointement != null){\n        console.log(this.valid());\n        if(this.valid()){\n          var temps = moment(this.state.startAppointement);\n          var temps2 = moment(temps, \"hh:mm A\").add(30, 'minutes');\n          this.setState({\n            schedulerData : [...this.state.schedulerData,{startDate: temps ,endDate: temps2 , title:\"token\"}]\n          });\n        }\n      }\n\n    }\n\n\n    /*\n    Il manque la validation quand le rendez vous se termine alors que il y en a deja un qui va commencer\n    */\n    valid(){\n      \n      this.state.schedulerData.forEach(element => {\n        //console.log(\"clique sur validation !\");\n        var tmpStart = moment(element.startDate)\n        var tmpEnd = moment(element.endDate)\n\n        //console.log(tmpStart<this.state.startAppointement);\n        //console.log(tmpStart<this.state.startAppointement &&  tmpEnd>this.state.startAppointement);\n        if(tmpStart<this.state.startAppointement &&  tmpEnd>this.state.startAppointement){\n          return false;\n        }\n      });\n      \n\n    }\n\n    handleCancel(){\n      this.props.click();\n    }\n\n    render(){\n        return(\n            <div className=\"Schedule\">\n              <h1>Schedule</h1>\n              <div className=\"form\">\n                  {this.state.hairdresser}\n                  <Autocomplete\n                    id=\"combo-box-demo\"\n                    options={top100Films}\n                    style={{ width: 300 }}\n                    renderInput={(params) => <TextField {...params} label=\"Choose the service\" variant=\"outlined\" />}\n                  />\n                  <LocalizationProvider dateAdapter={DateAdapter}>\n                    <TimePicker\n                      label=\"Basic example\"\n                      onChange={(newValue) => {\n                        this.handleTimePicker(newValue);\n                        }}\n                      renderInput={(params) => <TextField {...params} />}\n                    />\n                  </LocalizationProvider>\n                </div>\n                <div className=\"hour\">\n                <Box\n                  sx={{\n                    width: 400,\n                    height: 500,\n                  }}\n                >\n                  <Scheduler data={this.state.schedulerData} >\n                      <ViewState currentDate={this.state.date} />\n                      <DayView startDayHour={10} endDayHour={20} />\n                      <Appointments appointmentComponent={Appointment} />\n                      <CurrentTimeIndicator\n                        shadePreviousCells={true}\n                        shadePreviousAppointments={true}\n                        updateInterval={true}\n                      />\n                  </Scheduler>\n                </Box>\n                </div>\n                \n                <div className=\"buttons\">\n                  <Button variant=\"contained\" color=\"success\"  onClick={() => { this.handleConfirm() ;}} >Confirm</Button>\n                  <Button variant=\"contained\" color=\"error\"  onClick={() => { this.handleCancel() ;}}  >Cancel</Button>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Schedule;"]},"metadata":{},"sourceType":"module"}