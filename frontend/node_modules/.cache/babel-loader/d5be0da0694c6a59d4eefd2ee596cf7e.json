{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Frequency } from './types';\nimport { pymod, divmod, empty, includes } from './helpers';\nimport { dateutil } from './dateutil';\n\nvar Time =\n/** @class */\nfunction () {\n  function Time(hour, minute, second, millisecond) {\n    this.hour = hour;\n    this.minute = minute;\n    this.second = second;\n    this.millisecond = millisecond || 0;\n  }\n\n  Time.prototype.getHours = function () {\n    return this.hour;\n  };\n\n  Time.prototype.getMinutes = function () {\n    return this.minute;\n  };\n\n  Time.prototype.getSeconds = function () {\n    return this.second;\n  };\n\n  Time.prototype.getMilliseconds = function () {\n    return this.millisecond;\n  };\n\n  Time.prototype.getTime = function () {\n    return (this.hour * 60 * 60 + this.minute * 60 + this.second) * 1000 + this.millisecond;\n  };\n\n  return Time;\n}();\n\nexport { Time };\n\nvar DateTime =\n/** @class */\nfunction (_super) {\n  __extends(DateTime, _super);\n\n  function DateTime(year, month, day, hour, minute, second, millisecond) {\n    var _this = _super.call(this, hour, minute, second, millisecond) || this;\n\n    _this.year = year;\n    _this.month = month;\n    _this.day = day;\n    return _this;\n  }\n\n  DateTime.fromDate = function (date) {\n    return new this(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.valueOf() % 1000);\n  };\n\n  DateTime.prototype.getWeekday = function () {\n    return dateutil.getWeekday(new Date(this.getTime()));\n  };\n\n  DateTime.prototype.getTime = function () {\n    return new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)).getTime();\n  };\n\n  DateTime.prototype.getDay = function () {\n    return this.day;\n  };\n\n  DateTime.prototype.getMonth = function () {\n    return this.month;\n  };\n\n  DateTime.prototype.getYear = function () {\n    return this.year;\n  };\n\n  DateTime.prototype.addYears = function (years) {\n    this.year += years;\n  };\n\n  DateTime.prototype.addMonths = function (months) {\n    this.month += months;\n\n    if (this.month > 12) {\n      var yearDiv = Math.floor(this.month / 12);\n      var monthMod = pymod(this.month, 12);\n      this.month = monthMod;\n      this.year += yearDiv;\n\n      if (this.month === 0) {\n        this.month = 12;\n        --this.year;\n      }\n    }\n  };\n\n  DateTime.prototype.addWeekly = function (days, wkst) {\n    if (wkst > this.getWeekday()) {\n      this.day += -(this.getWeekday() + 1 + (6 - wkst)) + days * 7;\n    } else {\n      this.day += -(this.getWeekday() - wkst) + days * 7;\n    }\n\n    this.fixDay();\n  };\n\n  DateTime.prototype.addDaily = function (days) {\n    this.day += days;\n    this.fixDay();\n  };\n\n  DateTime.prototype.addHours = function (hours, filtered, byhour) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.hour += Math.floor((23 - this.hour) / hours) * hours;\n    }\n\n    while (true) {\n      this.hour += hours;\n\n      var _a = divmod(this.hour, 24),\n          dayDiv = _a.div,\n          hourMod = _a.mod;\n\n      if (dayDiv) {\n        this.hour = hourMod;\n        this.addDaily(dayDiv);\n      }\n\n      if (empty(byhour) || includes(byhour, this.hour)) break;\n    }\n  };\n\n  DateTime.prototype.addMinutes = function (minutes, filtered, byhour, byminute) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.minute += Math.floor((1439 - (this.hour * 60 + this.minute)) / minutes) * minutes;\n    }\n\n    while (true) {\n      this.minute += minutes;\n\n      var _a = divmod(this.minute, 60),\n          hourDiv = _a.div,\n          minuteMod = _a.mod;\n\n      if (hourDiv) {\n        this.minute = minuteMod;\n        this.addHours(hourDiv, false, byhour);\n      }\n\n      if ((empty(byhour) || includes(byhour, this.hour)) && (empty(byminute) || includes(byminute, this.minute))) {\n        break;\n      }\n    }\n  };\n\n  DateTime.prototype.addSeconds = function (seconds, filtered, byhour, byminute, bysecond) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.second += Math.floor((86399 - (this.hour * 3600 + this.minute * 60 + this.second)) / seconds) * seconds;\n    }\n\n    while (true) {\n      this.second += seconds;\n\n      var _a = divmod(this.second, 60),\n          minuteDiv = _a.div,\n          secondMod = _a.mod;\n\n      if (minuteDiv) {\n        this.second = secondMod;\n        this.addMinutes(minuteDiv, false, byhour, byminute);\n      }\n\n      if ((empty(byhour) || includes(byhour, this.hour)) && (empty(byminute) || includes(byminute, this.minute)) && (empty(bysecond) || includes(bysecond, this.second))) {\n        break;\n      }\n    }\n  };\n\n  DateTime.prototype.fixDay = function () {\n    if (this.day <= 28) {\n      return;\n    }\n\n    var daysinmonth = dateutil.monthRange(this.year, this.month - 1)[1];\n\n    if (this.day <= daysinmonth) {\n      return;\n    }\n\n    while (this.day > daysinmonth) {\n      this.day -= daysinmonth;\n      ++this.month;\n\n      if (this.month === 13) {\n        this.month = 1;\n        ++this.year;\n\n        if (this.year > dateutil.MAXYEAR) {\n          return;\n        }\n      }\n\n      daysinmonth = dateutil.monthRange(this.year, this.month - 1)[1];\n    }\n  };\n\n  DateTime.prototype.add = function (options, filtered) {\n    var freq = options.freq,\n        interval = options.interval,\n        wkst = options.wkst,\n        byhour = options.byhour,\n        byminute = options.byminute,\n        bysecond = options.bysecond;\n\n    switch (freq) {\n      case Frequency.YEARLY:\n        return this.addYears(interval);\n\n      case Frequency.MONTHLY:\n        return this.addMonths(interval);\n\n      case Frequency.WEEKLY:\n        return this.addWeekly(interval, wkst);\n\n      case Frequency.DAILY:\n        return this.addDaily(interval);\n\n      case Frequency.HOURLY:\n        return this.addHours(interval, filtered, byhour);\n\n      case Frequency.MINUTELY:\n        return this.addMinutes(interval, filtered, byhour, byminute);\n\n      case Frequency.SECONDLY:\n        return this.addSeconds(interval, filtered, byhour, byminute, bysecond);\n    }\n  };\n\n  return DateTime;\n}(Time);\n\nexport { DateTime };","map":{"version":3,"mappings":"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","names":["Frequency","pymod","divmod","empty","includes","dateutil","hour","minute","second","millisecond","Time","__extends","year","month","day","_super","_this","DateTime","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","valueOf","getWeekday","Date","getTime","UTC","years","months","yearDiv","Math","floor","monthMod","days","wkst","fixDay","hours","filtered","byhour","dayDiv","hourMod","addDaily","minutes","byminute","hourDiv","minuteMod","addHours","seconds","bysecond","minuteDiv","secondMod","addMinutes","daysinmonth","monthRange","MAXYEAR","options","interval","freq","YEARLY","addYears","MONTHLY","addMonths","WEEKLY","addWeekly","DAILY","HOURLY","MINUTELY","SECONDLY","addSeconds"],"sources":["../../../src/datetime.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}