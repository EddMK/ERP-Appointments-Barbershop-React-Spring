{"ast":null,"code":"import RRule from '../rrule';\nimport { empty, repeat, pymod } from '../helpers';\nexport function rebuildMonth(year, month, yearlen, mrange, wdaymask, options) {\n  var result = {\n    lastyear: year,\n    lastmonth: month,\n    nwdaymask: []\n  };\n  var ranges = [];\n\n  if (options.freq === RRule.YEARLY) {\n    if (empty(options.bymonth)) {\n      ranges = [[0, yearlen]];\n    } else {\n      for (var j = 0; j < options.bymonth.length; j++) {\n        month = options.bymonth[j];\n        ranges.push(mrange.slice(month - 1, month + 1));\n      }\n    }\n  } else if (options.freq === RRule.MONTHLY) {\n    ranges = [mrange.slice(month - 1, month + 1)];\n  }\n\n  if (empty(ranges)) {\n    return result;\n  } // Weekly frequency won't get here, so we may not\n  // care about cross-year weekly periods.\n\n\n  result.nwdaymask = repeat(0, yearlen);\n\n  for (var j = 0; j < ranges.length; j++) {\n    var rang = ranges[j];\n    var first = rang[0];\n    var last = rang[1] - 1;\n\n    for (var k = 0; k < options.bynweekday.length; k++) {\n      var i = void 0;\n      var _a = options.bynweekday[k],\n          wday = _a[0],\n          n = _a[1];\n\n      if (n < 0) {\n        i = last + (n + 1) * 7;\n        i -= pymod(wdaymask[i] - wday, 7);\n      } else {\n        i = first + (n - 1) * 7;\n        i += pymod(7 - wdaymask[i] + wday, 7);\n      }\n\n      if (first <= i && i <= last) result.nwdaymask[i] = 1;\n    }\n  }\n\n  return result;\n}","map":{"version":3,"mappings":"AACA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,QAAqC,YAArC;AAQA,OAAM,SAAUC,YAAV,CACJC,IADI,EAEJC,KAFI,EAGJC,OAHI,EAIJC,MAJI,EAKJC,QALI,EAMJC,OANI,EAMkB;AAEtB,MAAMC,MAAM,GAAc;AACxBC,YAAQ,EAAEP,IADc;AAExBQ,aAAS,EAAEP,KAFa;AAGxBQ,aAAS,EAAE;AAHa,GAA1B;AAMA,MAAIC,MAAM,GAAe,EAAzB;;AACA,MAAIL,OAAO,CAACM,IAAR,KAAiBhB,KAAK,CAACiB,MAA3B,EAAmC;AACjC,QAAIhB,KAAK,CAACS,OAAO,CAACQ,OAAT,CAAT,EAA4B;AAC1BH,YAAM,GAAG,CAAC,CAAC,CAAD,EAAIR,OAAJ,CAAD,CAAT;AACD,KAFD,MAEO;AACL,WAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,OAAO,CAACQ,OAAR,CAAgBE,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/Cb,aAAK,GAAGI,OAAO,CAACQ,OAAR,CAAgBC,CAAhB,CAAR;AACAJ,cAAM,CAACM,IAAP,CAAYb,MAAM,CAACc,KAAP,CAAahB,KAAK,GAAG,CAArB,EAAwBA,KAAK,GAAG,CAAhC,CAAZ;AACD;AACF;AACF,GATD,MASO,IAAII,OAAO,CAACM,IAAR,KAAiBhB,KAAK,CAACuB,OAA3B,EAAoC;AACzCR,UAAM,GAAG,CAACP,MAAM,CAACc,KAAP,CAAahB,KAAK,GAAG,CAArB,EAAwBA,KAAK,GAAG,CAAhC,CAAD,CAAT;AACD;;AAED,MAAIL,KAAK,CAACc,MAAD,CAAT,EAAmB;AACjB,WAAOJ,MAAP;AACD,GAxBqB,CA0BtB;AACA;;;AACAA,QAAM,CAACG,SAAP,GAAmBZ,MAAM,CAAC,CAAD,EAAIK,OAAJ,CAAzB;;AAEA,OAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,QAAMK,IAAI,GAAGT,MAAM,CAACI,CAAD,CAAnB;AACA,QAAMM,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAlB;AACA,QAAME,IAAI,GAAGF,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAvB;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,OAAO,CAACkB,UAAR,CAAoBR,MAAxC,EAAgDO,CAAC,EAAjD,EAAqD;AACnD,UAAIE,CAAC,SAAL;AACM;AAAA,UAAEC,YAAF;AAAA,UAAQC,SAAR;;AACN,UAAIA,CAAC,GAAG,CAAR,EAAW;AACTF,SAAC,GAAGH,IAAI,GAAG,CAACK,CAAC,GAAG,CAAL,IAAU,CAArB;AACAF,SAAC,IAAI1B,KAAK,CAACM,QAAQ,CAACoB,CAAD,CAAR,GAAcC,IAAf,EAAqB,CAArB,CAAV;AACD,OAHD,MAGO;AACLD,SAAC,GAAGJ,KAAK,GAAG,CAACM,CAAC,GAAG,CAAL,IAAU,CAAtB;AACAF,SAAC,IAAI1B,KAAK,CAAC,IAAIM,QAAQ,CAACoB,CAAD,CAAZ,GAAkBC,IAAnB,EAAyB,CAAzB,CAAV;AACD;;AACD,UAAIL,KAAK,IAAII,CAAT,IAAcA,CAAC,IAAIH,IAAvB,EAA6Bf,MAAM,CAACG,SAAP,CAAiBe,CAAjB,IAAsB,CAAtB;AAC9B;AACF;;AAED,SAAOlB,MAAP;AACD","names":["RRule","empty","repeat","pymod","rebuildMonth","year","month","yearlen","mrange","wdaymask","options","result","lastyear","lastmonth","nwdaymask","ranges","freq","YEARLY","bymonth","j","length","push","slice","MONTHLY","rang","first","last","k","bynweekday","i","wday","n"],"sources":["../../../../src/iterinfo/monthinfo.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}