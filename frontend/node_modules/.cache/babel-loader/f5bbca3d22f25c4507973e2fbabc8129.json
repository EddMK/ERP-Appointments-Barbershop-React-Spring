{"ast":null,"code":"var _jsxFileName = \"/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/src/components/Schedule.js\";\nimport * as React from \"react\";\nimport './Schedule.css';\nimport Rendezvous from '../model/Rendezvous';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { ViewState } from '@devexpress/dx-react-scheduler';\nimport { Scheduler, DayView, Appointments, CurrentTimeIndicator } from '@devexpress/dx-react-scheduler-material-ui';\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport TimePicker from '@mui/lab/TimePicker';\nimport moment from 'moment';\nimport { blue } from \"@mui/material/colors\";\n/*\n-Il faut afficher l'horaire du coiffeur comme étant occupé \n-Utiliser une classe pour mettre dans les tableaux de schedulerData\n-Afficher differentes couleurs\n-Essayer de combler les trous \n-Analyser les temps libres\n-barbe 5 min et coupe 15 min\n-CSS\n-Coiffeur Sans préférence.. regarder comment faire \n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst top100Films = ['coupe', 'barbe'];\n\nconst Appointment = _ref => {\n  let {\n    children,\n    style,\n    isShaded,\n    ...restProps\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Appointments.Appointment, { ...restProps,\n    style: { ...style,\n      backgroundColor: '#939393',\n      borderRadius: '8px'\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Appointment;\n\nclass Schedule extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      schedulerData: [{\n        startDate: '2022-04-09T10:20',\n        endDate: '2022-04-09T11:10',\n        title: 'taken'\n      }, {\n        startDate: '2022-04-09T12:00',\n        endDate: '2022-04-09T13:30',\n        title: 'taken'\n      }, new Rendezvous('2022-04-09T14:00', '2022-04-09T14:30', 'taken')],\n      date: this.props.date,\n      hairdresser: this.props.hairdresser,\n      service: null,\n      startAppointement: this.props.date,\n      endAppointement: null\n    };\n    this.handleTimePicker = this.handleTimePicker.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleConfirm = this.handleConfirm.bind(this);\n    this.valid = this.valid.bind(this);\n  }\n\n  handleTimePicker(value) {\n    this.setState({\n      startAppointement: value\n    });\n    console.log(value.hours(), value.minutes());\n  }\n\n  handleConfirm() {\n    this.state.startAppointement.set('year', this.state.date.year());\n    this.state.startAppointement.set('month', this.state.date.month());\n    this.state.startAppointement.set('date', this.state.date.date());\n    var temps = moment(this.state.startAppointement);\n    var temps2 = moment(this.state.startAppointement, \"hh:mm A\").add(30, 'minutes');\n    this.setState({\n      startAppointement: moment(this.state.startAppointement)\n    });\n\n    if (this.state.startAppointement != null) {\n      if (this.valid()) {\n        this.setState({\n          schedulerData: [...this.state.schedulerData, {\n            startDate: temps,\n            endDate: temps2,\n            title: \"token\"\n          }]\n        });\n      }\n    }\n  }\n  /*\n  Il manque la validation quand le rendez vous se termine alors que il y en a deja un qui va commencer\n  */\n\n\n  valid() {\n    var valid = true;\n    console.log(this.state.startAppointement);\n    var endingApp = moment(this.state.startAppointement, \"hh:mm A\").add(30, 'minutes');\n    console.log(\"end : \", endingApp);\n    this.state.schedulerData.forEach(element => {\n      var tmpStart = moment(element.startDate);\n      var tmpEnd = moment(element.endDate);\n\n      if (tmpStart < this.state.startAppointement && tmpEnd > this.state.startAppointement) {\n        valid = false;\n      }\n\n      if (tmpStart < endingApp && tmpEnd > endingApp) {\n        valid = false;\n      }\n\n      if (tmpStart.isSame(this.state.startAppointement)) {\n        valid = false;\n      }\n    });\n    return valid;\n  }\n\n  handleCancel() {\n    this.props.click();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Schedule\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Schedule for \", this.state.hairdresser, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        class: \"center\",\n        border: \"1\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {},\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"To make an appointment, complete the followings input:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n                id: \"combo-box-demo\",\n                options: top100Films,\n                style: {\n                  width: 300\n                },\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                  label: \"Choose the service\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 46\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                dateAdapter: DateAdapter,\n                children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                  onChange: newValue => {\n                    this.handleTimePicker(newValue);\n                  },\n                  renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                    style: {\n                      width: 300\n                    },\n                    ...params\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 48\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: 400,\n                height: 500\n              },\n              children: /*#__PURE__*/_jsxDEV(Scheduler, {\n                data: this.state.schedulerData,\n                children: [/*#__PURE__*/_jsxDEV(ViewState, {\n                  currentDate: this.state.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(DayView, {\n                  startDayHour: 10,\n                  endDayHour: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Appointments, {\n                  appointmentComponent: Appointment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CurrentTimeIndicator, {\n                  shadePreviousCells: true,\n                  shadePreviousAppointments: true,\n                  updateInterval: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          onClick: () => {\n            this.handleConfirm();\n          },\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          onClick: () => {\n            this.handleCancel();\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"sources":["/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/src/components/Schedule.js"],"names":["React","Rendezvous","TextField","Input","Button","Autocomplete","Paper","Box","ViewState","Scheduler","DayView","Appointments","CurrentTimeIndicator","DateAdapter","LocalizationProvider","TimePicker","moment","blue","top100Films","Appointment","children","style","isShaded","restProps","backgroundColor","borderRadius","Schedule","Component","constructor","props","state","schedulerData","startDate","endDate","title","date","hairdresser","service","startAppointement","endAppointement","handleTimePicker","bind","handleCancel","handleConfirm","valid","value","setState","console","log","hours","minutes","set","year","month","temps","temps2","add","endingApp","forEach","element","tmpStart","tmpEnd","isSame","click","render","width","params","newValue","height"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport './Schedule.css';\nimport Rendezvous  from '../model/Rendezvous';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/Input';\nimport Button from '@mui/material/Button';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport { ViewState } from '@devexpress/dx-react-scheduler';\nimport {\n  Scheduler,\n  DayView,\n  Appointments,\n  CurrentTimeIndicator\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport DateAdapter from '@mui/lab/AdapterMoment';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport TimePicker from '@mui/lab/TimePicker';\nimport moment from 'moment';\nimport { blue } from \"@mui/material/colors\";\n\n/*\n-Il faut afficher l'horaire du coiffeur comme étant occupé \n-Utiliser une classe pour mettre dans les tableaux de schedulerData\n-Afficher differentes couleurs\n-Essayer de combler les trous \n-Analyser les temps libres\n-barbe 5 min et coupe 15 min\n-CSS\n-Coiffeur Sans préférence.. regarder comment faire \n*/\n\nconst top100Films = ['coupe','barbe'];\nconst Appointment = ({\n    children, style, isShaded, ...restProps\n  }) => (\n    <Appointments.Appointment\n      {...restProps}\n      \n      style={{\n        ...style,\n        backgroundColor: '#939393',\n        borderRadius: '8px',\n      }}\n    >\n      {children}\n    </Appointments.Appointment>\n  );\n\nclass Schedule extends React.Component{\n\n    constructor(props){\n      super(props);\n      this.state={\n        schedulerData : [\n          { startDate: '2022-04-09T10:20', endDate: '2022-04-09T11:10', title: 'taken' },\n          { startDate: '2022-04-09T12:00', endDate: '2022-04-09T13:30', title: 'taken' },\n          new Rendezvous('2022-04-09T14:00','2022-04-09T14:30','taken')\n        ],\n        date : this.props.date,\n        hairdresser : this.props.hairdresser,\n        service : null,\n        startAppointement : this.props.date,\n        endAppointement : null\n      }\n      this.handleTimePicker = this.handleTimePicker.bind(this);\n      this.handleCancel = this.handleCancel.bind(this);\n      this.handleConfirm = this.handleConfirm.bind(this);\n      this.valid = this.valid.bind(this);\n    }\n\n    handleTimePicker(value){\n      this.setState({\n        startAppointement : value\n      });\n      console.log(value.hours(), value.minutes());\n    }\n\n    handleConfirm(){\n      this.state.startAppointement.set('year', this.state.date.year());\n      this.state.startAppointement.set('month', this.state.date.month());\n      this.state.startAppointement.set('date', this.state.date.date());\n      var temps = moment(this.state.startAppointement);\n      var temps2 = moment(this.state.startAppointement, \"hh:mm A\").add(30, 'minutes');\n      this.setState({\n        startAppointement : moment(this.state.startAppointement), \n      });\n      if(this.state.startAppointement != null){\n        if(this.valid()){\n          this.setState({\n            schedulerData : [...this.state.schedulerData,{startDate: temps ,endDate: temps2 , title:\"token\"}]\n          });\n        }\n      }\n\n    }\n\n\n    /*\n    Il manque la validation quand le rendez vous se termine alors que il y en a deja un qui va commencer\n    */\n    valid(){\n      var valid = true;\n      console.log(this.state.startAppointement);\n      var endingApp = moment(this.state.startAppointement, \"hh:mm A\").add(30, 'minutes');\n      console.log(\"end : \", endingApp);\n      this.state.schedulerData.forEach(element => {\n        var tmpStart = moment(element.startDate)\n        var tmpEnd = moment(element.endDate)\n        if(tmpStart<this.state.startAppointement &&  tmpEnd>this.state.startAppointement){\n          valid = false;\n        }\n        if(tmpStart<endingApp &&  tmpEnd>endingApp){\n          valid = false;\n        }\n        if(tmpStart.isSame(this.state.startAppointement)){\n          valid = false;\n        }\n      });\n      return valid;\n\n    }\n\n    handleCancel(){\n      this.props.click();\n    }\n\n    render(){\n        return(\n            <div className=\"Schedule\">\n              <h1>Schedule for {this.state.hairdresser} </h1>\n              <table class=\"center\"  border=\"1\">\n              <tr>\n                <td>\n              <Box sx={{ \n                \n              }}  >\n                  <p>To make an appointment, complete the followings input:</p>\n                  <Autocomplete\n                    id=\"combo-box-demo\"\n                    options={top100Films}\n                    style={{ width: 300 }}\n                    renderInput={(params) => <TextField {...params} label=\"Choose the service\" variant=\"outlined\" />}\n                  />\n                  <LocalizationProvider dateAdapter={DateAdapter}>\n                    <TimePicker\n                      onChange={(newValue) => {\n                        this.handleTimePicker(newValue);\n                        }}\n                      renderInput={(params) => <TextField style={{ width: 300 }} {...params} />}\n                    />\n                  </LocalizationProvider>\n                </Box>\n                </td>\n                <td>\n                <Box\n                  sx={{\n                    width: 400,\n                    height: 500,\n                  }}\n                >\n                  <Scheduler data={this.state.schedulerData} >\n                      <ViewState currentDate={this.state.date} />\n                      <DayView startDayHour={10} endDayHour={20} />\n                      <Appointments appointmentComponent={Appointment} />\n                      <CurrentTimeIndicator\n                        shadePreviousCells={true}\n                        shadePreviousAppointments={true}\n                        updateInterval={true}\n                      />\n                  </Scheduler>\n                </Box>\n                </td>\n                </tr>\n            </table>\n            <div>\n                  <Button variant=\"contained\" color=\"success\"  onClick={() => { this.handleConfirm() ;}} >Confirm</Button>\n                  <Button variant=\"contained\" color=\"error\"  onClick={() => { this.handleCancel() ;}}  >Cancel</Button>\n            </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Schedule;"]},"metadata":{},"sourceType":"module"}