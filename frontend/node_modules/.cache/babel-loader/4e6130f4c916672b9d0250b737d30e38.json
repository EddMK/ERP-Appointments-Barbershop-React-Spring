{"ast":null,"code":"import { __extends } from \"tslib\";\nimport RRule from './rrule';\nimport dateutil from './dateutil';\nimport { includes } from './helpers';\nimport { iterSet } from './iterset';\nimport { rrulestr } from './rrulestr';\nimport { optionsToString } from './optionstostring';\n\nfunction createGetterSetter(fieldName) {\n  var _this = this;\n\n  return function (field) {\n    if (field !== undefined) {\n      _this[\"_\" + fieldName] = field;\n    }\n\n    if (_this[\"_\" + fieldName] !== undefined) {\n      return _this[\"_\" + fieldName];\n    }\n\n    for (var i = 0; i < _this._rrule.length; i++) {\n      var field_1 = _this._rrule[i].origOptions[fieldName];\n\n      if (field_1) {\n        return field_1;\n      }\n    }\n  };\n}\n\nvar RRuleSet =\n/** @class */\nfunction (_super) {\n  __extends(RRuleSet, _super);\n  /**\n   *\n   * @param {Boolean?} noCache\n   *  The same stratagy as RRule on cache, default to false\n   * @constructor\n   */\n\n\n  function RRuleSet(noCache) {\n    if (noCache === void 0) {\n      noCache = false;\n    }\n\n    var _this = _super.call(this, {}, noCache) || this;\n\n    _this.dtstart = createGetterSetter.apply(_this, ['dtstart']);\n    _this.tzid = createGetterSetter.apply(_this, ['tzid']);\n    _this._rrule = [];\n    _this._rdate = [];\n    _this._exrule = [];\n    _this._exdate = [];\n    return _this;\n  }\n\n  RRuleSet.prototype._iter = function (iterResult) {\n    return iterSet(iterResult, this._rrule, this._exrule, this._rdate, this._exdate, this.tzid());\n  };\n  /**\n   * Adds an RRule to the set\n   *\n   * @param {RRule}\n   */\n\n\n  RRuleSet.prototype.rrule = function (rrule) {\n    _addRule(rrule, this._rrule);\n  };\n  /**\n   * Adds an EXRULE to the set\n   *\n   * @param {RRule}\n   */\n\n\n  RRuleSet.prototype.exrule = function (rrule) {\n    _addRule(rrule, this._exrule);\n  };\n  /**\n   * Adds an RDate to the set\n   *\n   * @param {Date}\n   */\n\n\n  RRuleSet.prototype.rdate = function (date) {\n    _addDate(date, this._rdate);\n  };\n  /**\n   * Adds an EXDATE to the set\n   *\n   * @param {Date}\n   */\n\n\n  RRuleSet.prototype.exdate = function (date) {\n    _addDate(date, this._exdate);\n  };\n  /**\n   * Get list of included rrules in this recurrence set.\n   *\n   * @return List of rrules\n   */\n\n\n  RRuleSet.prototype.rrules = function () {\n    return this._rrule.map(function (e) {\n      return rrulestr(e.toString());\n    });\n  };\n  /**\n   * Get list of excluded rrules in this recurrence set.\n   *\n   * @return List of exrules\n   */\n\n\n  RRuleSet.prototype.exrules = function () {\n    return this._exrule.map(function (e) {\n      return rrulestr(e.toString());\n    });\n  };\n  /**\n   * Get list of included datetimes in this recurrence set.\n   *\n   * @return List of rdates\n   */\n\n\n  RRuleSet.prototype.rdates = function () {\n    return this._rdate.map(function (e) {\n      return new Date(e.getTime());\n    });\n  };\n  /**\n   * Get list of included datetimes in this recurrence set.\n   *\n   * @return List of exdates\n   */\n\n\n  RRuleSet.prototype.exdates = function () {\n    return this._exdate.map(function (e) {\n      return new Date(e.getTime());\n    });\n  };\n\n  RRuleSet.prototype.valueOf = function () {\n    var result = [];\n\n    if (!this._rrule.length && this._dtstart) {\n      result = result.concat(optionsToString({\n        dtstart: this._dtstart\n      }));\n    }\n\n    this._rrule.forEach(function (rrule) {\n      result = result.concat(rrule.toString().split('\\n'));\n    });\n\n    this._exrule.forEach(function (exrule) {\n      result = result.concat(exrule.toString().split('\\n').map(function (line) {\n        return line.replace(/^RRULE:/, 'EXRULE:');\n      }).filter(function (line) {\n        return !/^DTSTART/.test(line);\n      }));\n    });\n\n    if (this._rdate.length) {\n      result.push(rdatesToString('RDATE', this._rdate, this.tzid()));\n    }\n\n    if (this._exdate.length) {\n      result.push(rdatesToString('EXDATE', this._exdate, this.tzid()));\n    }\n\n    return result;\n  };\n  /**\n   * to generate recurrence field such as:\n   *   DTSTART:19970902T010000Z\n   *   RRULE:FREQ=YEARLY;COUNT=2;BYDAY=TU\n   *   RRULE:FREQ=YEARLY;COUNT=1;BYDAY=TH\n   */\n\n\n  RRuleSet.prototype.toString = function () {\n    return this.valueOf().join('\\n');\n  };\n  /**\n   * Create a new RRuleSet Object completely base on current instance\n   */\n\n\n  RRuleSet.prototype.clone = function () {\n    var rrs = new RRuleSet(!!this._cache);\n\n    this._rrule.forEach(function (rule) {\n      return rrs.rrule(rule.clone());\n    });\n\n    this._exrule.forEach(function (rule) {\n      return rrs.exrule(rule.clone());\n    });\n\n    this._rdate.forEach(function (date) {\n      return rrs.rdate(new Date(date.getTime()));\n    });\n\n    this._exdate.forEach(function (date) {\n      return rrs.exdate(new Date(date.getTime()));\n    });\n\n    return rrs;\n  };\n\n  return RRuleSet;\n}(RRule);\n\nexport default RRuleSet;\n\nfunction _addRule(rrule, collection) {\n  if (!(rrule instanceof RRule)) {\n    throw new TypeError(String(rrule) + ' is not RRule instance');\n  }\n\n  if (!includes(collection.map(String), String(rrule))) {\n    collection.push(rrule);\n  }\n}\n\nfunction _addDate(date, collection) {\n  if (!(date instanceof Date)) {\n    throw new TypeError(String(date) + ' is not Date instance');\n  }\n\n  if (!includes(collection.map(Number), Number(date))) {\n    collection.push(date);\n    dateutil.sort(collection);\n  }\n}\n\nfunction rdatesToString(param, rdates, tzid) {\n  var isUTC = !tzid || tzid.toUpperCase() === 'UTC';\n  var header = isUTC ? param + \":\" : param + \";TZID=\" + tzid + \":\";\n  var dateString = rdates.map(function (rdate) {\n    return dateutil.timeToUntilString(rdate.valueOf(), isUTC);\n  }).join(',');\n  return \"\" + header + dateString;\n}","map":{"version":3,"mappings":"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","names":["RRule","dateutil","includes","iterSet","rrulestr","optionsToString","createGetterSetter","fieldName","field","undefined","_this","i","_rrule","length","field_1","origOptions","__extends","noCache","_super","apply","_rdate","_exrule","_exdate","RRuleSet","iterResult","tzid","rrule","_addRule","date","_addDate","map","e","toString","Date","getTime","result","_dtstart","concat","dtstart","forEach","split","exrule","replace","filter","test","line","push","rdatesToString","valueOf","join","rrs","_cache","rule","clone","rdate","exdate","collection","TypeError","String","Number","sort","param","rdates","isUTC","toUpperCase","header","dateString","timeToUntilString"],"sources":["../../../src/rruleset.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}