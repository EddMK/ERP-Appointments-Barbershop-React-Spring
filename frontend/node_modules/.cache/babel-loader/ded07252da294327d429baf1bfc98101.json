{"ast":null,"code":"/**\n * Bundle of @devexpress/dx-react-scheduler\n * Generated: 2022-02-24\n * Version: 3.0.2\n * License: https://js.devexpress.com/Licensing\n */\nimport { createElement, PureComponent, Fragment, createRef, memo, useRef, useState, useCallback, useEffect } from 'react';\nimport { Plugin, Getter, Template, TemplatePlaceholder, PluginHost, TemplateConnector, Action, createStateHelper, DragDropProvider as DragDropProvider$1, DropTarget, PlaceholderWithRef, DragSource } from '@devexpress/dx-react-core';\nimport { formatDateTimeGetter, appointments, computed, availableViews, VERTICAL_GROUP_ORIENTATION, HORIZONTAL_GROUP_ORIENTATION, startViewDate, endViewDate, timeCellsData, getTimeTableHeight, calculateWeekDateIntervals, VIEW_TYPES, viewCellsData, monthCellsData, calculateMonthDateIntervals, viewBoundText, POSITION_START, POSITION_END, isTimeTableElementsMetaActual, getGroupsLastRow, calculateRectByDateAndGroupIntervals, getAppointmentStyle, isAllDayElementsMetaActual, HORIZONTAL_TYPE, getHorizontalRectByAppointmentData, VERTICAL_TYPE, getVerticalRectByAppointmentData, allDayCells, calculateAllDayDateIntervals, changeCurrentDate, setCurrentViewName, preCommitChanges, addAppointment, changeAppointment, cancelAddedAppointment, startEditAppointment, stopEditAppointment, cancelChanges, RECURRENCE_EDIT_SCOPE, changedAppointmentById, TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY, getAppointmentResources, OPEN_COMMAND_BUTTON, CLOSE_COMMAND_BUTTON, DELETE_COMMAND_BUTTON, setAppointmentMeta, TOGGLE_APPOINTMENT_FORM_VISIBILITY, callActionIfExists, isAllDayCell, checkMultipleResourceFields, setAppointmentData, autoScroll, cellIndex, cellData, cellType, calculateInsidePart, intervalDuration, calculateAppointmentTimeBoundaries, calculateAppointmentGroups, appointmentDragged, calculateDraftAppointments, RESIZE_TOP, RESIZE_BOTTOM, SCROLL_SPEED_PX, validateResources, addResourcesToAppointments, convertResourcesToPlain, toggleExpandedGroups, HORIZONTAL_VIEW_LEFT_OFFSET, VERTICAL_VIEW_LEFT_OFFSET, isMonthCell, getCurrentTimeIndicatorTop, isCellShaded, isShadedAppointment, expandViewCellsDataWithGroups, getGroupsFromResources, sortFilteredResources, filterResourcesByGrouping, updateGroupingWithMainResource, expandGroups, updateTimeTableCellElementsMeta, updateAllDayCellElementsMeta, updateTimeCellsData } from '@devexpress/dx-scheduler-core';\nimport { memoize, createClickHandlers, getMessagesFormatter } from '@devexpress/dx-core';\nimport moment from 'moment';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\n\nvar SchedulerCoreBase = /*#__PURE__*/function (_super) {\n  __extends(SchedulerCoreBase, _super);\n\n  function SchedulerCoreBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.formatDateTimeGetter = memoize(function (locale) {\n      return formatDateTimeGetter(locale);\n    });\n    return _this;\n  }\n\n  SchedulerCoreBase.prototype.render = function () {\n    var _a = this.props,\n        data = _a.data,\n        Root = _a.rootComponent,\n        locale = _a.locale,\n        height = _a.height,\n        firstDayOfWeek = _a.firstDayOfWeek;\n    return createElement(Plugin, {\n      name: \"SchedulerCore\"\n    }, createElement(Getter, {\n      name: \"appointments\",\n      value: appointments(data)\n    }), createElement(Getter, {\n      name: \"formatDate\",\n      value: this.formatDateTimeGetter(locale)\n    }), createElement(Getter, {\n      name: \"firstDayOfWeek\",\n      value: firstDayOfWeek\n    }), createElement(Getter, {\n      name: \"locale\",\n      value: locale\n    }), createElement(Template, {\n      name: \"root\"\n    }, createElement(Root, {\n      height: height\n    }, createElement(TemplatePlaceholder, {\n      name: \"schedulerRoot\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"header\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"body\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"footer\"\n    }))));\n  };\n\n  return SchedulerCoreBase;\n}(PureComponent);\n/***\r\n * The Scheduler is a root container component designed to process\r\n * and display the specified data. The Scheduler's functionality\r\n * (data visualization and processing) is implemented in several plugins\r\n * specified as child components.\r\n * */\n\n\nvar SchedulerCore = SchedulerCoreBase;\n\nvar SchedulerBase = function (_a) {\n  var data = _a.data,\n      rootComponent = _a.rootComponent,\n      children = _a.children,\n      locale = _a.locale,\n      height = _a.height,\n      firstDayOfWeek = _a.firstDayOfWeek;\n  return createElement(PluginHost, null, createElement(SchedulerCore, {\n    data: data,\n    rootComponent: rootComponent,\n    locale: locale,\n    height: height,\n    firstDayOfWeek: firstDayOfWeek\n  }), children);\n};\n\nSchedulerBase.defaultProps = {\n  data: [],\n  locale: 'en-US',\n  height: 'auto',\n  firstDayOfWeek: 0\n}; // tslint:disable: max-line-length\n\n/***\r\n * The Scheduler is a root container component designed to process\r\n * and display the specified data. The Schedulerâ€™s functionality\r\n * (data visualization and processing) is implemented in several plugins specified as child components.\r\n * */\n\nvar Scheduler = SchedulerBase;\n\nvar CellPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"cell\",\n    params: params\n  });\n};\n\nvar TimeTableAppointmentLayer = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeTableAppointmentLayer\"\n  });\n};\n\nvar startViewDateBaseComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData;\n  return startViewDate(viewCellsData);\n};\n\nvar endViewDateBaseComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData;\n  return endViewDate(viewCellsData);\n};\n\nvar TimeTablePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeTable\"\n  });\n};\n\nvar DayScalePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"dayScale\"\n  });\n};\n\nvar DayScaleEmptyCellPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"dayScaleEmptyCell\"\n  });\n};\n\nvar GroupingPanelPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"groupingPanel\"\n  });\n};\n\nvar BasicViewBase = /*#__PURE__*/function (_super) {\n  __extends(BasicViewBase, _super);\n\n  function BasicViewBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      timeTableElementsMeta: {},\n      scrollingStrategy: {\n        topBoundary: 0,\n        bottomBoundary: 0,\n        leftBoundary: 0,\n        rightBoundary: 0,\n        changeVerticalScroll: function () {\n          return undefined;\n        },\n        changeHorizontalScroll: function () {\n          return undefined;\n        }\n      },\n      previousTimeTableCell: null,\n      // The key has to be generated every time the TimeTableCell is updated to rerender TimeTable\n      // and, consequently, update timeTableElementsMeta\n      timeTableLayoutKey: 0\n    };\n    _this.scrollingStrategyComputed = memoize(function (viewName, scrollingStrategy) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return scrollingStrategy;\n        }, getters.scrollingStrategy);\n      };\n    });\n    _this.timeTableElementsMetaComputed = memoize(function (viewName, timeTableElementsMeta) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return timeTableElementsMeta;\n        }, getters.timeTableElementsMeta);\n      };\n    });\n    _this.intervalCountComputed = memoize(function (viewName, intervalCount) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return intervalCount;\n        }, getters.intervalCount);\n      };\n    });\n    _this.cellDurationComputed = memoize(function (viewName, cellDuration) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return cellDuration;\n        }, getters.cellDuration);\n      };\n    });\n    _this.excludedDaysComputed = memoize(function (viewName, excludedDays) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return excludedDays;\n        }, getters.excludedDays);\n      };\n    });\n    _this.availableViewsComputed = memoize(function (viewName, viewDisplayName) {\n      return function (_a) {\n        var availableViews$1 = _a.availableViews;\n        return availableViews(availableViews$1, viewName, viewDisplayName);\n      };\n    });\n    _this.currentViewComputed = memoize(function (viewName, viewDisplayName, type) {\n      return function (_a) {\n        var currentView = _a.currentView;\n        return currentView && currentView.name !== viewName ? currentView : {\n          name: viewName,\n          type: type,\n          displayName: viewDisplayName\n        };\n      };\n    });\n\n    _this.endViewDateComputed = function (getters) {\n      var viewName = _this.props.name;\n      return computed(getters, viewName, endViewDateBaseComputed, getters.endViewDate);\n    };\n\n    _this.startViewDateComputed = function (getters) {\n      var viewName = _this.props.name;\n      return computed(getters, viewName, startViewDateBaseComputed, getters.startViewDate);\n    };\n\n    _this.viewCellsDataComputed = memoize(function (viewName, cellDuration, startDayHour, endDayHour, viewCellsDataBaseComputed) {\n      return function (getters) {\n        return computed(getters, viewName, viewCellsDataBaseComputed(cellDuration, startDayHour, endDayHour), getters.viewCellsData);\n      };\n    });\n    _this.timeTableAppointmentsComputed = memoize(function (viewName, cellDuration, calculateAppointmentsIntervals) {\n      return function (getters) {\n        return computed(getters, viewName, calculateAppointmentsIntervals(cellDuration), getters.timeTableAppointments);\n      };\n    });\n    _this.updateCellElementsMeta = memoize(function (cellElementsMeta) {\n      _this.setState({\n        timeTableElementsMeta: cellElementsMeta\n      });\n    });\n\n    _this.setScrollingStrategy = function (scrollingStrategy) {\n      _this.setState({\n        scrollingStrategy: scrollingStrategy\n      });\n    };\n\n    return _this;\n  }\n\n  BasicViewBase.getDerivedStateFromProps = function (props, state) {\n    if (props.timeTableCellComponent !== state.previousTimeTableCell) {\n      return __assign(__assign({}, state), {\n        previousTimeTableCell: props.timeTableCellComponent,\n        timeTableLayoutKey: Math.random()\n      });\n    }\n\n    return null;\n  };\n\n  BasicViewBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        viewName = _a.name,\n        intervalCount = _a.intervalCount,\n        displayName = _a.displayName,\n        type = _a.type,\n        excludedDays = _a.excludedDays,\n        cellDuration = _a.cellDuration,\n        startDayHour = _a.startDayHour,\n        endDayHour = _a.endDayHour,\n        viewCellsDataComputed = _a.viewCellsDataComputed,\n        calculateAppointmentsIntervals = _a.calculateAppointmentsIntervals,\n        dayScaleCellComponent = _a.dayScaleCellComponent,\n        dayScaleRowComponent = _a.dayScaleRowComponent,\n        DayScale = _a.dayScaleLayoutComponent,\n        TimeTableCell = _a.timeTableCellComponent,\n        TimeTableLayout = _a.timeTableLayoutComponent,\n        timeTableRowComponent = _a.timeTableRowComponent,\n        AppointmentLayer = _a.appointmentLayerComponent,\n        DayScaleEmptyCell = _a.dayScaleEmptyCellComponent,\n        layoutProps = _a.layoutProps,\n        Layout = _a.layoutComponent;\n    var _b = this.state,\n        timeTableElementsMeta = _b.timeTableElementsMeta,\n        scrollingStrategy = _b.scrollingStrategy,\n        timeTableLayoutKey = _b.timeTableLayoutKey;\n    var viewDisplayName = displayName || viewName;\n    return createElement(Plugin, {\n      name: \"basicView\"\n    }, createElement(Getter, {\n      name: \"availableViews\",\n      computed: this.availableViewsComputed(viewName, viewDisplayName)\n    }), createElement(Getter, {\n      name: \"currentView\",\n      computed: this.currentViewComputed(viewName, viewDisplayName, type)\n    }), createElement(Getter, {\n      name: \"intervalCount\",\n      computed: this.intervalCountComputed(viewName, intervalCount)\n    }), createElement(Getter, {\n      name: \"excludedDays\",\n      computed: this.excludedDaysComputed(viewName, excludedDays)\n    }), createElement(Getter, {\n      name: \"viewCellsData\",\n      computed: this.viewCellsDataComputed(viewName, cellDuration, startDayHour, endDayHour, viewCellsDataComputed)\n    }), createElement(Getter, {\n      name: \"startViewDate\",\n      computed: this.startViewDateComputed\n    }), createElement(Getter, {\n      name: \"endViewDate\",\n      computed: this.endViewDateComputed\n    }), createElement(Getter, {\n      name: \"cellDuration\",\n      computed: this.cellDurationComputed(viewName, cellDuration)\n    }), createElement(Getter, {\n      name: \"timeTableElementsMeta\",\n      computed: this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)\n    }), createElement(Getter, {\n      name: \"scrollingStrategy\",\n      computed: this.scrollingStrategyComputed(viewName, scrollingStrategy)\n    }), createElement(Getter, {\n      name: \"timeTableAppointments\",\n      computed: this.timeTableAppointmentsComputed(viewName, cellDuration, calculateAppointmentsIntervals)\n    }), createElement(Template, {\n      name: \"body\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n            groupOrientation = _a.groupOrientation,\n            groups = _a.groups;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n        var isVerticalGrouping = (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(viewName)) === VERTICAL_GROUP_ORIENTATION;\n        return createElement(Layout, __assign({\n          forwardedRef: params === null || params === void 0 ? void 0 : params.forwardedRef,\n          dayScaleComponent: DayScalePlaceholder,\n          timeTableComponent: TimeTablePlaceholder,\n          setScrollingStrategy: _this.setScrollingStrategy,\n          groupingPanelComponent: isVerticalGrouping ? GroupingPanelPlaceholder : undefined,\n          groupingPanelSize: isVerticalGrouping ? groups === null || groups === void 0 ? void 0 : groups.length : 0,\n          dayScaleEmptyCellComponent: DayScaleEmptyCellPlaceholder\n        }, layoutProps));\n      });\n    }), createElement(Template, {\n      name: \"dayScale\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          viewCellsData = _a.viewCellsData,\n          formatDate = _a.formatDate,\n          groupByDate = _a.groupByDate,\n          groupOrientation = _a.groupOrientation;\n      if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n      var groupByDateEnabled = groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(viewName);\n      var isHorizontalGrouping = (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(viewName)) === HORIZONTAL_GROUP_ORIENTATION;\n      return createElement(DayScale, {\n        cellComponent: dayScaleCellComponent,\n        rowComponent: dayScaleRowComponent,\n        groupingPanelComponent: isHorizontalGrouping ? GroupingPanelPlaceholder : undefined,\n        cellsData: viewCellsData,\n        formatDate: formatDate,\n        groupedByDate: groupByDateEnabled\n      });\n    })), createElement(Template, {\n      name: \"cell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, {\n          params: params\n        });\n        return createElement(TimeTableCell, __assign({}, params));\n      });\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate,\n            currentView = _a.currentView,\n            viewCellsData = _a.viewCellsData;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n        return createElement(Fragment, null, createElement(TimeTableLayout, __assign({\n          cellsData: viewCellsData,\n          rowComponent: timeTableRowComponent,\n          cellComponent: CellPlaceholder,\n          formatDate: formatDate,\n          setCellElementsMeta: _this.updateCellElementsMeta,\n          key: timeTableLayoutKey\n        }, params)), createElement(AppointmentLayer, null, createElement(TimeTableAppointmentLayer, null)));\n      });\n    }), createElement(Template, {\n      name: \"dayScaleEmptyCell\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView;\n\n      if (currentView.name !== viewName || !DayScaleEmptyCell) {\n        return createElement(TemplatePlaceholder, null);\n      }\n\n      return createElement(DayScaleEmptyCell, null);\n    })));\n  };\n\n  return BasicViewBase;\n}(PureComponent);\n\nvar BasicView = BasicViewBase;\n\nvar calculateAppointmentsIntervalsBaseComputed = function (cellDuration) {\n  return function (_a) {\n    var appointments = _a.appointments,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        excludedDays = _a.excludedDays;\n    return calculateWeekDateIntervals(appointments, startViewDate, endViewDate, excludedDays, cellDuration);\n  };\n};\n\nvar timeCellsDataComputed = function (startDayHour, endDayHour) {\n  return function (_a) {\n    var viewCellsData = _a.viewCellsData,\n        cellDuration = _a.cellDuration;\n    return timeCellsData(viewCellsData, startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\n\nvar TimeScalePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeScale\"\n  });\n};\n\nvar VericalViewBase = /*#__PURE__*/function (_super) {\n  __extends(VericalViewBase, _super);\n\n  function VericalViewBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.timeCellsDataComputed = memoize(function (viewName, startDayHour, endDayHour) {\n      return function (getters) {\n        return computed(getters, viewName, timeCellsDataComputed(startDayHour, endDayHour), getters.timeCellsData);\n      };\n    });\n    return _this;\n  }\n\n  VericalViewBase.prototype.render = function () {\n    var _a = this.props,\n        layoutComponent = _a.layoutComponent,\n        dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n        TimeScale = _a.timeScaleLayoutComponent,\n        TimeScaleLabel = _a.timeScaleLabelComponent,\n        timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n        timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n        dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n        dayScaleCellComponent = _a.dayScaleCellComponent,\n        dayScaleRowComponent = _a.dayScaleRowComponent,\n        timeTableLayoutComponent = _a.timeTableLayoutComponent,\n        timeTableRowComponent = _a.timeTableRowComponent,\n        timeTableCellComponent = _a.timeTableCellComponent,\n        cellDuration = _a.cellDuration,\n        excludedDays = _a.excludedDays,\n        viewName = _a.name,\n        appointmentLayerComponent = _a.appointmentLayerComponent,\n        intervalCount = _a.intervalCount,\n        displayName = _a.displayName,\n        startDayHour = _a.startDayHour,\n        endDayHour = _a.endDayHour,\n        viewCellsDataComputed = _a.viewCellsDataComputed,\n        type = _a.type;\n    return createElement(Plugin, {\n      name: \"WeekView\"\n    }, createElement(BasicView, {\n      viewCellsDataComputed: viewCellsDataComputed,\n      type: type,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      excludedDays: excludedDays,\n      calculateAppointmentsIntervals: calculateAppointmentsIntervalsBaseComputed,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      layoutProps: {\n        timeScaleComponent: TimeScalePlaceholder\n      }\n    }), createElement(Getter, {\n      name: \"timeCellsData\",\n      computed: this.timeCellsDataComputed(viewName, startDayHour, endDayHour)\n    }), createElement(Template, {\n      name: \"timeScale\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n            timeCellsData = _a.timeCellsData,\n            groups = _a.groups,\n            formatDate = _a.formatDate,\n            getGroupOrientation = _a.groupOrientation,\n            timeTableElementsMeta = _a.timeTableElementsMeta;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n        var groupOrientation = getGroupOrientation === null || getGroupOrientation === void 0 ? void 0 : getGroupOrientation(viewName);\n        return createElement(TimeScale, __assign({\n          labelComponent: TimeScaleLabel,\n          tickCellComponent: timeScaleTickCellComponent,\n          rowComponent: timeScaleTicksRowComponent,\n          cellsData: timeCellsData,\n          formatDate: formatDate,\n          groups: groups,\n          groupOrientation: groupOrientation,\n          height: getTimeTableHeight(timeTableElementsMeta)\n        }, params));\n      });\n    }));\n  };\n\n  return VericalViewBase;\n}(PureComponent);\n\nvar VerticalView = VericalViewBase;\n\nvar viewCellsDataBaseComputed = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var currentDate = _a.currentDate,\n        intervalCount = _a.intervalCount;\n    return viewCellsData(currentDate, undefined, intervalCount, [], startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\n\nvar DayViewBase = /*#__PURE__*/function (_super) {\n  __extends(DayViewBase, _super);\n\n  function DayViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DayViewBase.prototype.render = function () {\n    var _a = this.props,\n        layoutComponent = _a.layoutComponent,\n        DayScaleEmptyCell = _a.dayScaleEmptyCellComponent,\n        timeScaleLayoutComponent = _a.timeScaleLayoutComponent,\n        timeScaleLabelComponent = _a.timeScaleLabelComponent,\n        timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n        timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n        dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n        dayScaleCellComponent = _a.dayScaleCellComponent,\n        dayScaleRowComponent = _a.dayScaleRowComponent,\n        timeTableLayoutComponent = _a.timeTableLayoutComponent,\n        timeTableRowComponent = _a.timeTableRowComponent,\n        timeTableCellComponent = _a.timeTableCellComponent,\n        appointmentLayerComponent = _a.appointmentLayerComponent,\n        cellDuration = _a.cellDuration,\n        viewName = _a.name,\n        intervalCount = _a.intervalCount,\n        displayName = _a.displayName,\n        startDayHour = _a.startDayHour,\n        endDayHour = _a.endDayHour;\n    return createElement(Plugin, {\n      name: \"DayView\"\n    }, createElement(VerticalView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed,\n      type: VIEW_TYPES.DAY,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      timeScaleLayoutComponent: timeScaleLayoutComponent,\n      timeScaleLabelComponent: timeScaleLabelComponent,\n      timeScaleTickCellComponent: timeScaleTickCellComponent,\n      timeScaleTicksRowComponent: timeScaleTicksRowComponent\n    }));\n  };\n\n  DayViewBase.defaultProps = {\n    name: 'Day',\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1\n  };\n  DayViewBase.components = {\n    layoutComponent: 'Layout',\n    layoutContainer: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return DayViewBase;\n}(PureComponent); // tslint:disable-next-line: max-line-length\n\n/*** A plugin that renders Scheduler data for a day. This plugin arranges appointments from top to bottom.\r\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\r\n * */\n\n\nvar DayView = DayViewBase;\nvar DAYS_IN_WEEK = 7;\n\nvar viewCellsDataBaseComputed$1 = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var firstDayOfWeek = _a.firstDayOfWeek,\n        intervalCount = _a.intervalCount,\n        excludedDays = _a.excludedDays,\n        currentDate = _a.currentDate;\n    return viewCellsData(currentDate, firstDayOfWeek, intervalCount * DAYS_IN_WEEK, excludedDays, startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\n\nvar WeekViewBase = /*#__PURE__*/function (_super) {\n  __extends(WeekViewBase, _super);\n\n  function WeekViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WeekViewBase.prototype.render = function () {\n    var _a = this.props,\n        layoutComponent = _a.layoutComponent,\n        dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n        timeScaleLayoutComponent = _a.timeScaleLayoutComponent,\n        timeScaleLabelComponent = _a.timeScaleLabelComponent,\n        timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n        timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n        dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n        dayScaleCellComponent = _a.dayScaleCellComponent,\n        dayScaleRowComponent = _a.dayScaleRowComponent,\n        timeTableLayoutComponent = _a.timeTableLayoutComponent,\n        timeTableRowComponent = _a.timeTableRowComponent,\n        timeTableCellComponent = _a.timeTableCellComponent,\n        cellDuration = _a.cellDuration,\n        excludedDays = _a.excludedDays,\n        viewName = _a.name,\n        appointmentLayerComponent = _a.appointmentLayerComponent,\n        intervalCount = _a.intervalCount,\n        displayName = _a.displayName,\n        startDayHour = _a.startDayHour,\n        endDayHour = _a.endDayHour;\n    return createElement(Plugin, {\n      name: \"WeekView\"\n    }, createElement(VerticalView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed$1,\n      type: VIEW_TYPES.WEEK,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      excludedDays: excludedDays,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      timeScaleLayoutComponent: timeScaleLayoutComponent,\n      timeScaleLabelComponent: timeScaleLabelComponent,\n      timeScaleTickCellComponent: timeScaleTickCellComponent,\n      timeScaleTicksRowComponent: timeScaleTicksRowComponent\n    }));\n  };\n\n  WeekViewBase.defaultProps = {\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n    excludedDays: [],\n    name: 'Week'\n  };\n  WeekViewBase.components = {\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return WeekViewBase;\n}(PureComponent); // tslint:disable: max-line-length\n\n/***\r\n * A plugin that renders the Scheduler's week view. This plugin arranges appointments from top to bottom.\r\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\r\n * */\n\n\nvar WeekView = WeekViewBase;\n\nvar viewCellsDataBaseComputed$2 = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var currentDate = _a.currentDate,\n        firstDayOfWeek = _a.firstDayOfWeek,\n        intervalCount = _a.intervalCount;\n    return monthCellsData(currentDate, firstDayOfWeek, intervalCount, Date.now());\n  };\n};\n\nvar calculateAppointmentsIntervalsBaseComputed$1 = function (cellDuration) {\n  return function (_a) {\n    var appointments = _a.appointments,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        excludedDays = _a.excludedDays;\n    return calculateMonthDateIntervals(appointments, startViewDate, endViewDate);\n  };\n};\n\nvar MonthViewBase = /*#__PURE__*/function (_super) {\n  __extends(MonthViewBase, _super);\n\n  function MonthViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  MonthViewBase.prototype.render = function () {\n    var _a = this.props,\n        layoutComponent = _a.layoutComponent,\n        dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n        dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n        dayScaleCellComponent = _a.dayScaleCellComponent,\n        dayScaleRowComponent = _a.dayScaleRowComponent,\n        timeTableLayoutComponent = _a.timeTableLayoutComponent,\n        timeTableRowComponent = _a.timeTableRowComponent,\n        timeTableCellComponent = _a.timeTableCellComponent,\n        appointmentLayerComponent = _a.appointmentLayerComponent,\n        viewName = _a.name,\n        intervalCount = _a.intervalCount,\n        displayName = _a.displayName;\n    return createElement(Plugin, {\n      name: \"MonthView\"\n    }, createElement(BasicView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed$2,\n      type: VIEW_TYPES.MONTH,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      calculateAppointmentsIntervals: calculateAppointmentsIntervalsBaseComputed$1,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent\n    }));\n  };\n\n  MonthViewBase.defaultProps = {\n    intervalCount: 1,\n    name: 'Month'\n  };\n  MonthViewBase.components = {\n    layoutComponent: 'Layout',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return MonthViewBase;\n}(PureComponent); // tslint:disable: max-line-length\n\n/***\r\n * A plugin that renders Scheduler data for a month. This plugin arranges appointments from left to right.\r\n * An appointment's size depends on its duration in days.\r\n * However, it occupies the entire day cell if an appointment lasts only for several hours or minutes.\r\n * The time scale and all-day panel are not available in this view.\r\n * */\n\n\nvar MonthView = MonthViewBase;\n\nvar ToolbarBase = /*#__PURE__*/function (_super) {\n  __extends(ToolbarBase, _super);\n\n  function ToolbarBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ToolbarBase.prototype.render = function () {\n    var _a = this.props,\n        Root = _a.rootComponent,\n        FlexibleSpaceComponent = _a.flexibleSpaceComponent;\n    return createElement(Plugin, {\n      name: \"Toolbar\"\n    }, createElement(Template, {\n      name: \"header\"\n    }, createElement(Root, null, createElement(TemplatePlaceholder, {\n      name: \"toolbarContent\"\n    })), createElement(TemplatePlaceholder, null)), createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(FlexibleSpaceComponent, null)));\n  };\n\n  ToolbarBase.components = {\n    rootComponent: 'Root',\n    flexibleSpaceComponent: 'FlexibleSpace'\n  };\n  return ToolbarBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's toolbar. */\n\n\nvar Toolbar = ToolbarBase;\nvar pluginDependencies = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\n\nvar navigate = function (action, currentView, intervalCount) {\n  return function (direction, nextDate) {\n    return action({\n      direction: direction,\n      nextDate: nextDate,\n      amount: intervalCount,\n      step: currentView.type\n    });\n  };\n};\n\nvar DateNavigatorBase = /*#__PURE__*/function (_super) {\n  __extends(DateNavigatorBase, _super);\n\n  function DateNavigatorBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      visible: false\n    };\n\n    _this.setRootRef = function (target) {\n      _this.target = target;\n    };\n\n    _this.handleVisibilityToggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          visible: !prevState.visible\n        };\n      });\n    };\n\n    _this.handleHide = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.navigateAction = memoize(function (changeCurrentDate, currentView, intervalCount, navigateAction) {\n      return navigateAction(changeCurrentDate, currentView, intervalCount);\n    });\n    return _this;\n  }\n\n  DateNavigatorBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        Root = _a.rootComponent,\n        Overlay = _a.overlayComponent,\n        OpenButton = _a.openButtonComponent,\n        NavigationButton = _a.navigationButtonComponent,\n        Calendar = _a.calendarComponent,\n        CalendarRow = _a.calendarRowComponent,\n        CalendarCell = _a.calendarCellComponent,\n        CalendarHeaderRow = _a.calendarHeaderRowComponent,\n        CalendarHeaderCell = _a.calendarHeaderCellComponent,\n        CalendarText = _a.calendarTextComponent,\n        CalendarNavigationButton = _a.calendarNavigationButtonComponent,\n        CalendarNavigator = _a.calendarNavigatorComponent;\n    var visible = this.state.visible;\n    return createElement(Plugin, {\n      name: \"DateNavigator\",\n      dependencies: pluginDependencies\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var currentDate = _a.currentDate,\n          startViewDate = _a.startViewDate,\n          endViewDate = _a.endViewDate,\n          firstDayOfWeek = _a.firstDayOfWeek,\n          currentView = _a.currentView,\n          intervalCount = _a.intervalCount,\n          formatDate = _a.formatDate;\n      var changeCurrentDate = _b.changeCurrentDate;\n\n      var navigateAction = _this.navigateAction(changeCurrentDate, currentView, intervalCount, navigate);\n\n      var calendarDateChanged = function (nextDate) {\n        navigateAction(undefined, nextDate);\n\n        _this.handleHide();\n      };\n\n      var navigatorText = viewBoundText(startViewDate, endViewDate, currentView.type, currentDate, intervalCount, formatDate);\n      return createElement(Fragment, null, createElement(Root, {\n        navigationButtonComponent: NavigationButton,\n        openButtonComponent: OpenButton,\n        navigatorText: navigatorText,\n        rootRef: _this.setRootRef,\n        onVisibilityToggle: _this.handleVisibilityToggle,\n        onNavigate: navigateAction\n      }), createElement(Overlay, {\n        visible: visible,\n        target: _this.target,\n        onHide: _this.handleHide\n      }, createElement(Calendar, {\n        selectedDate: currentDate,\n        firstDayOfWeek: firstDayOfWeek,\n        getCells: monthCellsData,\n        textComponent: CalendarText,\n        navigationButtonComponent: CalendarNavigationButton,\n        rowComponent: CalendarRow,\n        cellComponent: CalendarCell,\n        headerRowComponent: CalendarHeaderRow,\n        headerCellComponent: CalendarHeaderCell,\n        navigatorComponent: CalendarNavigator,\n        onSelectedDateChange: calendarDateChanged,\n        formatDate: formatDate\n      })));\n    }), createElement(TemplatePlaceholder, null)));\n  };\n\n  DateNavigatorBase.components = {\n    rootComponent: 'Root',\n    overlayComponent: 'Overlay',\n    openButtonComponent: 'OpenButton',\n    navigationButtonComponent: 'NavigationButton',\n    calendarComponent: 'Calendar',\n    calendarRowComponent: 'CalendarRow',\n    calendarCellComponent: 'CalendarCell',\n    calendarHeaderRowComponent: 'CalendarHeaderRow',\n    calendarHeaderCellComponent: 'CalendarHeaderCell',\n    calendarTextComponent: 'CalendarText',\n    calendarNavigatorComponent: 'CalendarNavigator',\n    calendarNavigationButtonComponent: 'CalendarNavigationButton'\n  };\n  return DateNavigatorBase;\n}(PureComponent);\n/** A plugin that renders the Schedulerâ€™s date navigator. */\n\n\nvar DateNavigator = DateNavigatorBase;\nvar pluginDependencies$1 = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\n\nvar ViewSwitcherBase = /*#__PURE__*/function (_super) {\n  __extends(ViewSwitcherBase, _super);\n\n  function ViewSwitcherBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ViewSwitcherBase.prototype.render = function () {\n    var Switcher = this.props.switcherComponent;\n    return createElement(Plugin, {\n      name: \"ViewSwitcher\",\n      dependencies: pluginDependencies$1\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a, _b) {\n      var currentView = _a.currentView,\n          availableViews = _a.availableViews;\n      var setCurrentViewName = _b.setCurrentViewName;\n      return createElement(Switcher, {\n        currentView: currentView,\n        availableViews: availableViews,\n        onChange: setCurrentViewName\n      });\n    })));\n  };\n\n  ViewSwitcherBase.components = {\n    switcherComponent: 'Switcher'\n  };\n  return ViewSwitcherBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's view switcher. */\n\n\nvar ViewSwitcher = ViewSwitcherBase;\n\nvar AppointmentPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"appointment\",\n    params: params\n  });\n};\n\nvar renderAppointments = function (rects) {\n  return rects.map(function (_a) {\n    var dataItem = _a.dataItem,\n        rectType = _a.type,\n        fromPrev = _a.fromPrev,\n        toNext = _a.toNext,\n        durationType = _a.durationType,\n        resources = _a.resources,\n        key = _a.key,\n        geometry = __rest(_a, [\"dataItem\", \"type\", \"fromPrev\", \"toNext\", \"durationType\", \"resources\", \"key\"]);\n\n    return createElement(AppointmentPlaceholder, {\n      key: key,\n      type: rectType,\n      data: dataItem,\n      fromPrev: fromPrev,\n      toNext: toNext,\n      durationType: durationType,\n      resources: resources,\n      style: getAppointmentStyle(geometry)\n    });\n  });\n};\n\nvar pluginDependencies$2 = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}];\n\nvar AppointmentsBase = /*#__PURE__*/function (_super) {\n  __extends(AppointmentsBase, _super);\n\n  function AppointmentsBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.updateTimeTableAppointments = memoize(function (timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView, startViewDate, endViewDate, cellDuration, groups, getGroupOrientation, groupByDate, placeAppointmentsNextToEachOther) {\n      if (!isTimeTableElementsMetaActual(viewCellsData, timeTableElementsMeta)) return null;\n      var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION;\n      var groupCount = groups ? getGroupsLastRow(groups).length : 1;\n      var appointmentType = {\n        growDirection: VERTICAL_TYPE,\n        multiline: false\n      };\n      var getRects = getVerticalRectByAppointmentData;\n\n      if (currentView.type === VIEW_TYPES.MONTH) {\n        appointmentType = {\n          growDirection: HORIZONTAL_TYPE,\n          multiline: true\n        };\n        getRects = getHorizontalRectByAppointmentData;\n      }\n\n      return renderAppointments(calculateRectByDateAndGroupIntervals(appointmentType, timeTableAppointments, getRects, {\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        cellDuration: cellDuration,\n        viewCellsData: viewCellsData,\n        cellElementsMeta: timeTableElementsMeta,\n        placeAppointmentsNextToEachOther: placeAppointmentsNextToEachOther\n      }, {\n        groupOrientation: groupOrientation,\n        groupedByDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name),\n        groupCount: groupCount\n      }));\n    });\n    _this.updateAllDayAppointments = memoize(function (allDayAppointments, viewCellsData, allDayElementsMeta, currentView, startViewDate, endViewDate, groups, getGroupOrientation, groupByDate) {\n      var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION;\n      var groupCount = groups ? getGroupsLastRow(groups).length : 1;\n\n      if (!isAllDayElementsMetaActual(viewCellsData, allDayElementsMeta, groupOrientation, groupCount)) {\n        return null;\n      }\n\n      return renderAppointments(calculateRectByDateAndGroupIntervals({\n        growDirection: HORIZONTAL_TYPE,\n        multiline: false\n      }, allDayAppointments, getHorizontalRectByAppointmentData, {\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        viewCellsData: viewCellsData,\n        cellElementsMeta: allDayElementsMeta\n      }, {\n        groupOrientation: groupOrientation,\n        groupedByDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name),\n        groupCount: groupCount\n      }));\n    });\n    return _this;\n  }\n\n  AppointmentsBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        SplitIndicator = _a.splitIndicatorComponent,\n        Appointment = _a.appointmentComponent,\n        AppointmentContent = _a.appointmentContentComponent,\n        Container = _a.containerComponent,\n        recurringIconComponent = _a.recurringIconComponent,\n        placeAppointmentsNextToEachOther = _a.placeAppointmentsNextToEachOther;\n    return createElement(Plugin, {\n      name: \"Appointments\",\n      dependencies: pluginDependencies$2\n    }, createElement(Template, {\n      name: \"timeTableAppointmentLayer\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var timeTableAppointments = _a.timeTableAppointments,\n          viewCellsData = _a.viewCellsData,\n          timeTableElementsMeta = _a.timeTableElementsMeta,\n          currentView = _a.currentView,\n          startViewDate = _a.startViewDate,\n          endViewDate = _a.endViewDate,\n          cellDuration = _a.cellDuration,\n          groupOrientation = _a.groupOrientation,\n          groups = _a.groups,\n          groupByDate = _a.groupByDate;\n      return _this.updateTimeTableAppointments(timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView, startViewDate, endViewDate, cellDuration, groups, groupOrientation, groupByDate, placeAppointmentsNextToEachOther);\n    })), createElement(Template, {\n      name: \"allDayAppointmentLayer\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var allDayAppointments = _a.allDayAppointments,\n          viewCellsData = _a.viewCellsData,\n          allDayElementsMeta = _a.allDayElementsMeta,\n          startViewDate = _a.startViewDate,\n          endViewDate = _a.endViewDate,\n          groupOrientation = _a.groupOrientation,\n          currentView = _a.currentView,\n          groups = _a.groups,\n          groupByDate = _a.groupByDate;\n      return _this.updateAllDayAppointments(allDayAppointments, viewCellsData, allDayElementsMeta, currentView, startViewDate, endViewDate, groups, groupOrientation, groupByDate);\n    })), createElement(Template, {\n      name: \"appointment\"\n    }, function (_a) {\n      var style = _a.style,\n          params = __rest(_a, [\"style\"]);\n\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate;\n        return createElement(Container, {\n          style: style\n        }, createElement(TemplatePlaceholder, {\n          name: \"appointmentTop\",\n          params: {\n            data: params.data,\n            type: params.type,\n            slice: params.fromPrev\n          }\n        }), createElement(TemplatePlaceholder, {\n          name: \"appointmentContent\",\n          params: __assign(__assign({}, params), {\n            formatDate: formatDate\n          })\n        }), createElement(TemplatePlaceholder, {\n          name: \"appointmentBottom\",\n          params: {\n            data: params.data,\n            type: params.type,\n            slice: params.toNext\n          }\n        }));\n      });\n    }), createElement(Template, {\n      name: \"appointmentContent\"\n    }, function (_a) {\n      var onClick = _a.onClick,\n          onDoubleClick = _a.onDoubleClick,\n          formatDate = _a.formatDate,\n          data = _a.data,\n          type = _a.type,\n          fromPrev = _a.fromPrev,\n          toNext = _a.toNext,\n          durationType = _a.durationType,\n          resources = _a.resources,\n          forwardedRef = _a.forwardedRef,\n          restParams = __rest(_a, [\"onClick\", \"onDoubleClick\", \"formatDate\", \"data\", \"type\", \"fromPrev\", \"toNext\", \"durationType\", \"resources\", \"forwardedRef\"]);\n\n      return createElement(Appointment, __assign({\n        forwardedRef: forwardedRef,\n        data: data,\n        resources: resources\n      }, createClickHandlers(onClick, onDoubleClick), restParams), fromPrev && createElement(SplitIndicator, {\n        position: POSITION_START,\n        appointmentType: type\n      }), createElement(AppointmentContent, {\n        data: data,\n        type: type,\n        durationType: durationType,\n        recurringIconComponent: recurringIconComponent,\n        formatDate: formatDate,\n        resources: resources\n      }), toNext && createElement(SplitIndicator, {\n        position: POSITION_END,\n        appointmentType: type\n      }));\n    }));\n  };\n\n  AppointmentsBase.components = {\n    splitIndicatorComponent: 'SplitIndicator',\n    containerComponent: 'Container',\n    appointmentComponent: 'Appointment',\n    appointmentContentComponent: 'AppointmentContent',\n    recurringIconComponent: 'RecurringIcon'\n  };\n  AppointmentsBase.defaultProps = {\n    placeAppointmentsNextToEachOther: false\n  };\n  return AppointmentsBase;\n}(PureComponent);\n/** A plugin that renders appointments. */\n\n\nvar Appointments = AppointmentsBase;\n\nvar isMonthView = function (currentView) {\n  return currentView.type === VIEW_TYPES.MONTH;\n};\n\nvar isVerticalGrouping = function (currentView, groupOrientation) {\n  return (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) === VERTICAL_GROUP_ORIENTATION;\n};\n\nvar pluginDependencies$3 = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}];\nvar defaultMessages = {\n  allDay: 'All Day'\n};\n\nvar AllDayAppointmentLayerPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayAppointmentLayer\"\n  });\n};\n\nvar AllDayPanelPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayPanel\",\n    params: params\n  });\n};\n\nvar CellPlaceholder$1 = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayPanelCell\",\n    params: params\n  });\n};\n\nvar AllDayTitlePlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayTitle\",\n    params: params\n  });\n};\n\nvar AllDayPanelBase = /*#__PURE__*/function (_super) {\n  __extends(AllDayPanelBase, _super);\n\n  function AllDayPanelBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      elementsMeta: {},\n      previousCell: null,\n      // The key has to be generated every time the Cell component is updated to rerender the Layout\n      // and, consequently, update allDayElementsMeta\n      layoutKey: 0\n    };\n    _this.allDayCellsDataComputed = memoize(function (_a) {\n      var viewCellsData = _a.viewCellsData;\n      return allDayCells(viewCellsData);\n    });\n    _this.updateCellElementsMeta = memoize(function (cellElementsMeta) {\n      _this.setState({\n        elementsMeta: cellElementsMeta\n      });\n    });\n    _this.allDayAppointmentsComputed = memoize(function (_a) {\n      var appointments = _a.appointments,\n          startViewDate = _a.startViewDate,\n          endViewDate = _a.endViewDate,\n          excludedDays = _a.excludedDays;\n      var allDayLeftBound = moment(startViewDate).hours(0).minutes(0).toDate();\n      var allDayRightBound = moment(endViewDate).hours(23).minutes(59).toDate();\n      return calculateAllDayDateIntervals(appointments, allDayLeftBound, allDayRightBound, excludedDays);\n    });\n    _this.allDayPanelExistsComputed = memoize(function (_a) {\n      var currentView = _a.currentView;\n      return !isMonthView(currentView);\n    });\n    _this.getMessageFormatter = memoize(function (messages, allDayPanelDefaultMessages) {\n      return getMessagesFormatter(__assign(__assign({}, allDayPanelDefaultMessages), messages));\n    });\n    return _this;\n  }\n\n  AllDayPanelBase.getDerivedStateFromProps = function (props, state) {\n    if (props.cellComponent !== state.previousCell) {\n      return __assign(__assign({}, state), {\n        previousCell: props.cellComponent,\n        layoutKey: Math.random()\n      });\n    }\n\n    return null;\n  };\n\n  AllDayPanelBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        AppointmentLayer = _a.appointmentLayerComponent,\n        Layout = _a.layoutComponent,\n        Cell = _a.cellComponent,\n        rowComponent = _a.rowComponent,\n        TitleCell = _a.titleCellComponent,\n        Container = _a.containerComponent,\n        messages = _a.messages;\n    var _b = this.state,\n        elementsMeta = _b.elementsMeta,\n        layoutKey = _b.layoutKey;\n    var getMessage = this.getMessageFormatter(messages, defaultMessages);\n    return createElement(Plugin, {\n      name: \"AllDayPanel\",\n      dependencies: pluginDependencies$3\n    }, createElement(Getter, {\n      name: \"allDayElementsMeta\",\n      value: elementsMeta\n    }), createElement(Getter, {\n      name: \"allDayCellsData\",\n      computed: this.allDayCellsDataComputed\n    }), createElement(Getter, {\n      name: \"allDayPanelExists\",\n      computed: this.allDayPanelExistsComputed\n    }), createElement(Getter, {\n      name: \"allDayAppointments\",\n      computed: this.allDayAppointmentsComputed\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n            groupOrientation = _a.groupOrientation,\n            allDayCellsData = _a.allDayCellsData;\n\n        if (isMonthView(currentView) || !isVerticalGrouping(currentView, groupOrientation)) {\n          return createElement(TemplatePlaceholder, {\n            params: params\n          });\n        }\n\n        return createElement(Fragment, null, createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            allDayCellComponent: CellPlaceholder$1,\n            allDayRowComponent: rowComponent,\n            allDayCellsData: allDayCellsData\n          })\n        }), createElement(AppointmentLayer, null, createElement(AllDayAppointmentLayerPlaceholder, null)));\n      });\n    }), createElement(Template, {\n      name: \"dayScaleEmptyCell\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation;\n\n      if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n        return createElement(TemplatePlaceholder, null);\n      }\n\n      return createElement(AllDayTitlePlaceholder, null);\n    })), createElement(Template, {\n      name: \"timeScale\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n            groupOrientation = _a.groupOrientation;\n\n        if (isMonthView(currentView) || !isVerticalGrouping(currentView, groupOrientation)) {\n          return createElement(TemplatePlaceholder, {\n            params: params\n          });\n        }\n\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            allDayTitleComponent: AllDayTitlePlaceholder,\n            showAllDayTitle: true\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"dayScale\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation;\n\n      if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n        return null;\n      }\n\n      return createElement(Container, null, createElement(AllDayPanelPlaceholder, null));\n    })), createElement(Template, {\n      name: \"allDayPanel\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          formatDate = _a.formatDate,\n          allDayCellsData = _a.allDayCellsData;\n      if (currentView.type === VIEW_TYPES.MONTH) return null;\n      return createElement(Fragment, null, createElement(Layout, {\n        cellComponent: CellPlaceholder$1,\n        rowComponent: rowComponent,\n        cellsData: allDayCellsData[0],\n        setCellElementsMeta: _this.updateCellElementsMeta,\n        formatDate: formatDate,\n        key: layoutKey\n      }), createElement(AppointmentLayer, null, createElement(AllDayAppointmentLayerPlaceholder, null)));\n    })), createElement(Template, {\n      name: \"allDayTitle\"\n    }, function (params) {\n      return createElement(TitleCell, __assign({\n        getMessage: getMessage\n      }, params));\n    }), createElement(Template, {\n      name: \"allDayPanelCell\"\n    }, function (params) {\n      return createElement(Cell, __assign({}, params));\n    }));\n  };\n\n  AllDayPanelBase.defaultProps = {\n    messages: {}\n  };\n  AllDayPanelBase.components = {\n    appointmentLayerComponent: 'AppointmentLayer',\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    cellComponent: 'Cell',\n    rowComponent: 'Row',\n    titleCellComponent: 'TitleCell',\n    containerComponent: 'Container'\n  };\n  return AllDayPanelBase;\n}(PureComponent);\n/** A plugin that renders the All Day Panel. */\n\n\nvar AllDayPanel = AllDayPanelBase;\n\nvar ViewStateBase = /*#__PURE__*/function (_super) {\n  __extends(ViewStateBase, _super);\n\n  function ViewStateBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.getCurrentViewComputed = memoize(function (currentViewName) {\n      return function () {\n        return currentViewName ? {\n          name: currentViewName\n        } : undefined;\n      };\n    });\n    _this.state = {\n      currentDate: props.currentDate || props.defaultCurrentDate,\n      currentViewName: props.currentViewName || props.defaultCurrentViewName\n    };\n    var stateHelper = createStateHelper(_this, {\n      currentDate: function () {\n        var onCurrentDateChange = _this.props.onCurrentDateChange;\n        return onCurrentDateChange;\n      },\n      currentViewName: function () {\n        var onCurrentViewNameChange = _this.props.onCurrentViewNameChange;\n        return onCurrentViewNameChange;\n      }\n    });\n    _this.changeCurrentDate = stateHelper.applyFieldReducer.bind(stateHelper, 'currentDate', changeCurrentDate);\n    _this.setCurrentViewName = stateHelper.applyFieldReducer.bind(stateHelper, 'currentViewName', setCurrentViewName);\n    return _this;\n  }\n\n  ViewStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.currentDate,\n        currentDate = _a === void 0 ? prevState.currentDate : _a,\n        _b = nextProps.currentViewName,\n        currentViewName = _b === void 0 ? prevState.currentViewName : _b;\n    return {\n      currentDate: currentDate,\n      currentViewName: currentViewName\n    };\n  };\n\n  ViewStateBase.prototype.render = function () {\n    var _a = this.state,\n        currentDate = _a.currentDate,\n        stateCurrentViewName = _a.currentViewName;\n    return createElement(Plugin, {\n      name: \"ViewState\"\n    }, createElement(Getter, {\n      name: \"currentDate\",\n      value: currentDate\n    }), createElement(Getter, {\n      name: \"currentView\",\n      computed: this.getCurrentViewComputed(stateCurrentViewName)\n    }), createElement(Action, {\n      name: \"changeCurrentDate\",\n      action: this.changeCurrentDate\n    }), createElement(Action, {\n      name: \"setCurrentViewName\",\n      action: this.setCurrentViewName\n    }));\n  };\n\n  ViewStateBase.defaultProps = {\n    defaultCurrentDate: new Date()\n  };\n  return ViewStateBase;\n}(PureComponent);\n/** A plugin that manages the view state. It specifies the current date and the displayed view. */\n\n\nvar ViewState = ViewStateBase;\n\nvar EditingStateBase = /*#__PURE__*/function (_super) {\n  __extends(EditingStateBase, _super);\n\n  function EditingStateBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      editingAppointment: props.editingAppointment || props.defaultEditingAppointment,\n      addedAppointment: props.addedAppointment || props.defaultAddedAppointment,\n      appointmentChanges: props.appointmentChanges || props.defaultAppointmentChanges\n    };\n    var stateHelper = createStateHelper(_this, {\n      editingAppointment: function () {\n        var onEditingAppointmentChange = _this.props.onEditingAppointmentChange;\n        return onEditingAppointmentChange;\n      },\n      addedAppointment: function () {\n        var onAddedAppointmentChange = _this.props.onAddedAppointmentChange;\n        return onAddedAppointmentChange;\n      },\n      appointmentChanges: function () {\n        var onAppointmentChangesChange = _this.props.onAppointmentChangesChange;\n        return onAppointmentChangesChange;\n      }\n    });\n    _this.addAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', addAppointment);\n    _this.changeAddedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', changeAppointment);\n    _this.cancelAddedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', cancelAddedAppointment);\n    _this.startEditAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'editingAppointment', startEditAppointment);\n    _this.stopEditAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'editingAppointment', stopEditAppointment);\n    _this.changeAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentChanges', changeAppointment);\n    _this.cancelChangedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentChanges', cancelChanges);\n\n    _this.commitChangedAppointment = function (type) {\n      if (type === void 0) {\n        type = RECURRENCE_EDIT_SCOPE.CURRENT;\n      }\n\n      var _a = _this.state,\n          appointmentChanges = _a.appointmentChanges,\n          editingAppointment = _a.editingAppointment;\n      var _b = _this.props,\n          onCommitChanges = _b.onCommitChanges,\n          preCommitChanges = _b.preCommitChanges;\n\n      if (!editingAppointment) {\n        return;\n      }\n\n      var changes = !editingAppointment.rRule ? {\n        changed: changedAppointmentById(appointmentChanges, editingAppointment.id)\n      } : preCommitChanges(appointmentChanges, editingAppointment, type);\n      onCommitChanges(changes);\n\n      _this.cancelChangedAppointment();\n\n      _this.stopEditAppointment();\n    };\n\n    _this.commitAddedAppointment = function () {\n      var onCommitChanges = _this.props.onCommitChanges;\n      var stateAddedAppointment = _this.state.addedAppointment;\n      onCommitChanges({\n        added: stateAddedAppointment\n      });\n    };\n\n    _this.commitDeletedAppointment = function (_a) {\n      var deletedAppointmentData = _a.deletedAppointmentData,\n          _b = _a.type,\n          type = _b === void 0 ? 'current' : _b;\n      var _c = _this.props,\n          onCommitChanges = _c.onCommitChanges,\n          preCommitChanges = _c.preCommitChanges;\n      var changes = deletedAppointmentData.rRule ? preCommitChanges(null, deletedAppointmentData, type) : {\n        deleted: deletedAppointmentData.id\n      };\n      onCommitChanges(changes);\n    };\n\n    return _this;\n  }\n\n  EditingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.editingAppointment,\n        editingAppointment = _a === void 0 ? prevState.editingAppointment : _a,\n        _b = nextProps.appointmentChanges,\n        appointmentChanges = _b === void 0 ? prevState.appointmentChanges : _b,\n        _c = nextProps.addedAppointment,\n        addedAppointment = _c === void 0 ? prevState.addedAppointment : _c;\n    return {\n      editingAppointment: editingAppointment,\n      appointmentChanges: appointmentChanges,\n      addedAppointment: addedAppointment\n    };\n  };\n\n  EditingStateBase.prototype.render = function () {\n    var _a = this.state,\n        addedAppointment = _a.addedAppointment,\n        editingAppointment = _a.editingAppointment,\n        appointmentChanges = _a.appointmentChanges;\n    return createElement(Plugin, {\n      name: \"EditingState\"\n    }, createElement(Getter, {\n      name: \"editingAppointment\",\n      value: editingAppointment\n    }), createElement(Action, {\n      name: \"startEditAppointment\",\n      action: this.startEditAppointment\n    }), createElement(Action, {\n      name: \"stopEditAppointment\",\n      action: this.stopEditAppointment\n    }), createElement(Getter, {\n      name: \"appointmentChanges\",\n      value: appointmentChanges\n    }), createElement(Action, {\n      name: \"changeAppointment\",\n      action: this.changeAppointment\n    }), createElement(Action, {\n      name: \"cancelChangedAppointment\",\n      action: this.cancelChangedAppointment\n    }), createElement(Action, {\n      name: \"commitChangedAppointment\",\n      action: this.commitChangedAppointment\n    }), createElement(Getter, {\n      name: \"addedAppointment\",\n      value: addedAppointment\n    }), createElement(Action, {\n      name: \"addAppointment\",\n      action: this.addAppointment\n    }), createElement(Action, {\n      name: \"changeAddedAppointment\",\n      action: this.changeAddedAppointment\n    }), createElement(Action, {\n      name: \"cancelAddedAppointment\",\n      action: this.cancelAddedAppointment\n    }), createElement(Action, {\n      name: \"commitAddedAppointment\",\n      action: this.commitAddedAppointment\n    }), createElement(Action, {\n      name: \"commitDeletedAppointment\",\n      action: this.commitDeletedAppointment\n    }));\n  };\n\n  EditingStateBase.defaultProps = {\n    defaultEditingAppointment: undefined,\n    defaultAppointmentChanges: {},\n    defaultAddedAppointment: {},\n    preCommitChanges: preCommitChanges\n  };\n  return EditingStateBase;\n}(PureComponent);\n/** A plugin that manages the scheduler appointment editing state. */\n\n\nvar EditingState = EditingStateBase;\nvar pluginDependencies$4 = [{\n  name: 'Appointments'\n}, {\n  name: 'EditingState',\n  optional: true\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\nvar commandButtonIds = {\n  open: OPEN_COMMAND_BUTTON,\n  close: CLOSE_COMMAND_BUTTON,\n  delete: DELETE_COMMAND_BUTTON\n};\n\nvar AppointmentTooltipBase = /*#__PURE__*/function (_super) {\n  __extends(AppointmentTooltipBase, _super);\n\n  function AppointmentTooltipBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      visible: props.visible,\n      appointmentMeta: props.appointmentMeta\n    };\n    var stateHelper = createStateHelper(_this, {\n      visible: function () {\n        var onVisibilityChange = _this.props.onVisibilityChange;\n        return onVisibilityChange;\n      },\n      appointmentMeta: function () {\n        var onAppointmentMetaChange = _this.props.onAppointmentMetaChange;\n        return onAppointmentMetaChange;\n      }\n    });\n\n    var toggleVisibility = function () {\n      var isOpen = _this.state.visible;\n      return !isOpen;\n    };\n\n    _this.toggleVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'visible', toggleVisibility);\n    _this.setAppointmentMeta = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentMeta', setAppointmentMeta);\n\n    _this.onAppointmentClick = function (_a) {\n      var target = _a.target,\n          data = _a.data;\n\n      _this.setAppointmentMeta({\n        target: target,\n        data: data\n      });\n\n      _this.toggleVisibility();\n    };\n\n    return _this;\n  }\n\n  AppointmentTooltipBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.visible,\n        visible = _a === void 0 ? prevState.visible : _a,\n        _b = nextProps.appointmentMeta,\n        appointmentMeta = _b === void 0 ? prevState.appointmentMeta : _b;\n    return {\n      appointmentMeta: appointmentMeta,\n      visible: visible\n    };\n  };\n\n  AppointmentTooltipBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        showOpenButton = _a.showOpenButton,\n        showDeleteButton = _a.showDeleteButton,\n        showCloseButton = _a.showCloseButton,\n        Layout = _a.layoutComponent,\n        headerComponent = _a.headerComponent,\n        contentComponent = _a.contentComponent,\n        commandButtonComponent = _a.commandButtonComponent,\n        recurringIconComponent = _a.recurringIconComponent;\n    var _b = this.state,\n        visible = _b.visible,\n        appointmentMeta = _b.appointmentMeta;\n    return createElement(Plugin, {\n      name: \"AppointmentTooltip\",\n      dependencies: pluginDependencies$4\n    }, createElement(Action, {\n      name: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n      action: this.toggleVisibility\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a, _b) {\n      var formatDate = _a.formatDate,\n          resources = _a.resources,\n          plainResources = _a.plainResources;\n      var finishDeleteAppointment = _b.finishDeleteAppointment,\n          openDeleteConfirmationDialog = _b.openDeleteConfirmationDialog;\n\n      var onDeleteButtonClick = function () {\n        if (openDeleteConfirmationDialog) {\n          openDeleteConfirmationDialog({\n            hideActionName: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n            appointmentData: appointmentMeta.data\n          });\n        } else {\n          _this.toggleVisibility();\n\n          finishDeleteAppointment(appointmentMeta.data);\n        }\n      };\n\n      return createElement(TemplatePlaceholder, {\n        name: \"tooltip\",\n        params: __assign(__assign({\n          commandButtonComponent: commandButtonComponent,\n          recurringIconComponent: recurringIconComponent,\n          showOpenButton: showOpenButton,\n          showDeleteButton: showDeleteButton,\n          showCloseButton: showCloseButton,\n          headerComponent: headerComponent,\n          contentComponent: contentComponent,\n          appointmentMeta: appointmentMeta,\n          appointmentResources: appointmentMeta ? getAppointmentResources(appointmentMeta.data, resources, plainResources) : [],\n          visible: visible,\n          onHide: _this.toggleVisibility,\n          commandButtonIds: commandButtonIds\n        }, finishDeleteAppointment && {\n          onDeleteButtonClick: onDeleteButtonClick\n        }), {\n          formatDate: formatDate\n        })\n      });\n    })), createElement(Template, {\n      name: \"tooltip\"\n    }, function (params) {\n      return createElement(Layout, __assign({}, params));\n    }), createElement(Template, {\n      name: \"appointment\"\n    }, function (params) {\n      return createElement(TemplatePlaceholder, {\n        params: __assign(__assign({}, params), {\n          onClick: function (_a) {\n            var target = _a.target,\n                data = _a.data;\n            return _this.onAppointmentClick({\n              target: target,\n              data: data\n            });\n          }\n        })\n      });\n    }));\n  };\n\n  AppointmentTooltipBase.defaultProps = {\n    showOpenButton: false,\n    showDeleteButton: false,\n    showCloseButton: false\n  };\n  AppointmentTooltipBase.components = {\n    layoutComponent: 'Layout',\n    headerComponent: 'Header',\n    contentComponent: 'Content',\n    commandButtonComponent: 'CommandButton',\n    recurringIconComponent: 'RecurringIcon'\n  };\n  return AppointmentTooltipBase;\n}(PureComponent); // tslint:disable: max-line-length\n\n/** The AppointmentTooltip plugin allows you to display information about an appointment in a tooltip. */\n\n\nvar AppointmentTooltip = AppointmentTooltipBase;\n\nvar addDoubleClickToCell = function (title, startDate, endDate, groupingInfo, resources, allDay, openFormHandler, addAppointment, params) {\n  var resourceFields = !!groupingInfo ? groupingInfo.reduce(function (acc, currentGroup) {\n    var _a;\n\n    return __assign(__assign({}, acc), (_a = {}, _a[currentGroup.fieldName] = currentGroup.id, _a));\n  }, {}) : {};\n  var validResourceFields = resources ? checkMultipleResourceFields(resourceFields, resources) : resourceFields;\n\n  var newAppointmentData = __assign({\n    title: title,\n    startDate: startDate,\n    endDate: endDate,\n    allDay: allDay\n  }, validResourceFields);\n\n  return createElement(TemplatePlaceholder, {\n    params: __assign(__assign({}, params), {\n      onDoubleClick: function () {\n        openFormHandler(newAppointmentData);\n        callActionIfExists(addAppointment, {\n          appointmentData: newAppointmentData\n        });\n      }\n    })\n  });\n};\n\nvar defaultMessages$1 = {\n  allDayLabel: 'All Day',\n  titleLabel: 'Title',\n  commitCommand: 'Save',\n  detailsLabel: 'Details',\n  moreInformationLabel: 'More Information',\n  repeatLabel: 'Repeat',\n  notesLabel: 'Notes',\n  never: 'Never',\n  daily: 'Daily',\n  weekly: 'Weekly',\n  monthly: 'Monthly',\n  yearly: 'Yearly',\n  repeatEveryLabel: 'Repeat every',\n  daysLabel: 'day(s)',\n  endRepeatLabel: 'End repeat',\n  onLabel: 'On',\n  afterLabel: 'After',\n  occurrencesLabel: 'occurrence(s)',\n  weeksOnLabel: 'week(s) on:',\n  monthsLabel: 'month(s)',\n  ofEveryMonthLabel: 'of every month',\n  theLabel: 'The',\n  firstLabel: 'First',\n  secondLabel: 'Second',\n  thirdLabel: 'Third',\n  fourthLabel: 'Fourth',\n  lastLabel: 'Last',\n  yearsLabel: 'year(s)',\n  ofLabel: 'of ',\n  everyLabel: 'Every'\n};\n\nvar CommandLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"commandLayout\"\n  });\n};\n\nvar BasicLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"basicLayout\"\n  });\n};\n\nvar RecurrenceLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"recurrenceLayout\"\n  });\n};\n\nvar pluginDependencies$5 = [{\n  name: 'EditingState',\n  optional: true\n}, {\n  name: 'Appointments',\n  optional: true\n}, {\n  name: 'AppointmentTooltip',\n  optional: true\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\n\nvar prepareChanges = function (appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources) {\n  var isNew = !editingAppointment;\n\n  var changedAppointment = __assign(__assign(__assign({}, appointmentData), appointmentChanges), isNew && addedAppointment);\n\n  var appointmentResources = getAppointmentResources(changedAppointment, resources, plainResources);\n  var isFormEdited = isNew || Object.getOwnPropertyNames(appointmentChanges).length !== 0;\n  return {\n    changedAppointment: changedAppointment,\n    appointmentResources: appointmentResources,\n    isNew: isNew,\n    isFormEdited: isFormEdited\n  };\n};\n\nvar isFormFullSize = function (isFormVisible, changedAppointmentRRule, previousAppointmentRRule) {\n  return !!changedAppointmentRRule || !isFormVisible && !!previousAppointmentRRule;\n};\n\nvar AppointmentFormBase = /*#__PURE__*/function (_super) {\n  __extends(AppointmentFormBase, _super);\n\n  function AppointmentFormBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.container = createRef();\n    _this.commitChanges = memoize(function (finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment) {\n      return function () {\n        _this.toggleVisibility();\n\n        if (isNew) {\n          callActionIfExists(commitAddedAppointment, changedAppointment);\n        } else if (finishCommitAppointment) {\n          finishCommitAppointment();\n        }\n\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.cancelChanges = memoize(function (openCancelConfirmationDialog, isNew, stopEditAppointment, appointmentChanges, changedAppointment, cancelAddedAppointment, cancelChangedAppointment) {\n      return function () {\n        if (openCancelConfirmationDialog && Object.keys(appointmentChanges).length !== 0) {\n          openCancelConfirmationDialog(TOGGLE_APPOINTMENT_FORM_VISIBILITY);\n        } else {\n          if (isNew) {\n            callActionIfExists(cancelAddedAppointment, appointmentChanges);\n          } else {\n            callActionIfExists(stopEditAppointment, appointmentChanges);\n            callActionIfExists(cancelChangedAppointment, appointmentChanges);\n          }\n\n          _this.toggleVisibility();\n        }\n\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.deleteAppointment = memoize(function (finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog, changedAppointment, cancelAddedAppointment, cancelChangedAppointment, stopEditAppointment, isNew) {\n      return function () {\n        if (openDeleteConfirmationDialog) {\n          openDeleteConfirmationDialog({\n            hideActionName: TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n            appointmentData: changedAppointment\n          });\n        } else {\n          callActionIfExists(finishDeleteAppointment, appointmentData);\n\n          if (isNew) {\n            callActionIfExists(cancelAddedAppointment, appointmentData);\n          } else {\n            callActionIfExists(cancelChangedAppointment, appointmentData);\n            callActionIfExists(stopEditAppointment, appointmentData);\n          }\n\n          _this.toggleVisibility();\n        }\n\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.changeAppointmentField = memoize(function (isNew, changeAddedAppointment, changeAppointment) {\n      return function (change) {\n        if (change && change.rRule) {\n          _this.setState({\n            previousAppointment: __assign(__assign({}, _this.state.previousAppointment), {\n              rRule: change.rRule\n            })\n          });\n        }\n\n        if (isNew) {\n          callActionIfExists(changeAddedAppointment, {\n            change: change\n          });\n        } else {\n          callActionIfExists(changeAppointment, {\n            change: change\n          });\n        }\n      };\n    });\n    _this.getMessage = memoize(function (menuMessages, messages) {\n      return getMessagesFormatter(__assign(__assign({}, menuMessages), messages));\n    });\n    _this.state = {\n      visible: props.visible,\n      appointmentData: props.appointmentData || {},\n      previousAppointment: props.appointmentData || {}\n    };\n    var stateHelper = createStateHelper(_this, {\n      visible: function () {\n        var onVisibilityChange = _this.props.onVisibilityChange;\n        return onVisibilityChange;\n      },\n      appointmentData: function () {\n        var onAppointmentDataChange = _this.props.onAppointmentDataChange;\n        return onAppointmentDataChange;\n      }\n    });\n\n    var toggleVisibility = function () {\n      var isOpen = _this.state.visible;\n      return !isOpen;\n    };\n\n    _this.toggleVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'visible', toggleVisibility);\n    _this.setAppointmentData = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentData', setAppointmentData);\n\n    _this.openFormHandler = function (appointmentData) {\n      _this.setAppointmentData({\n        appointmentData: appointmentData\n      });\n\n      _this.toggleVisibility();\n    };\n\n    return _this;\n  }\n\n  AppointmentFormBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.visible,\n        visible = _a === void 0 ? prevState.visible : _a,\n        _b = nextProps.appointmentData,\n        appointmentData = _b === void 0 ? prevState.appointmentData : _b;\n    return {\n      appointmentData: appointmentData,\n      visible: visible\n    };\n  };\n\n  AppointmentFormBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        Container = _a.containerComponent,\n        Overlay = _a.overlayComponent,\n        Layout = _a.layoutComponent,\n        CommandLayout = _a.commandLayoutComponent,\n        BasicLayout = _a.basicLayoutComponent,\n        RecurrenceLayout = _a.recurrenceLayoutComponent,\n        commandButtonComponent = _a.commandButtonComponent,\n        textEditorComponent = _a.textEditorComponent,\n        labelComponent = _a.labelComponent,\n        dateEditorComponent = _a.dateEditorComponent,\n        booleanEditorComponent = _a.booleanEditorComponent,\n        selectComponent = _a.selectComponent,\n        radioGroupComponent = _a.radioGroupComponent,\n        weeklyRecurrenceSelectorComponent = _a.weeklyRecurrenceSelectorComponent,\n        resourceEditorComponent = _a.resourceEditorComponent,\n        readOnly = _a.readOnly,\n        messages = _a.messages;\n    var _b = this.state,\n        visible = _b.visible,\n        appointmentData = _b.appointmentData,\n        previousAppointment = _b.previousAppointment;\n    var getMessage = this.getMessage(defaultMessages$1, messages);\n    return createElement(Plugin, {\n      name: \"AppointmentForm\",\n      dependencies: pluginDependencies$5\n    }, createElement(Action, {\n      name: TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n      action: this.toggleVisibility\n    }), createElement(Template, {\n      name: \"schedulerRoot\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n          addedAppointment = _a.addedAppointment,\n          appointmentChanges = _a.appointmentChanges,\n          resources = _a.resources,\n          plainResources = _a.plainResources;\n      var openCancelConfirmationDialog = _b.openCancelConfirmationDialog,\n          stopEditAppointment = _b.stopEditAppointment,\n          cancelAddedAppointment = _b.cancelAddedAppointment,\n          cancelChangedAppointment = _b.cancelChangedAppointment;\n\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n          changedAppointment = _c.changedAppointment,\n          isNew = _c.isNew;\n\n      var fullSize = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n\n      var onHideAction = function () {\n        return visible && _this.cancelChanges(openCancelConfirmationDialog, isNew, stopEditAppointment, __assign(__assign({}, appointmentChanges), addedAppointment), changedAppointment, cancelAddedAppointment, cancelChangedAppointment)();\n      };\n\n      return createElement(Fragment, null, createElement(Container, {\n        ref: _this.container\n      }), createElement(Overlay, {\n        visible: visible,\n        onHide: onHideAction,\n        fullSize: fullSize,\n        target: _this.container\n      }, createElement(Layout, {\n        basicLayoutComponent: BasicLayoutPlaceholder,\n        commandLayoutComponent: CommandLayoutPlaceholder,\n        recurrenceLayoutComponent: RecurrenceLayoutPlaceholder,\n        isRecurrence: fullSize\n      })), createElement(TemplatePlaceholder, null));\n    })), createElement(Template, {\n      name: \"commandLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n          addedAppointment = _a.addedAppointment,\n          appointmentChanges = _a.appointmentChanges,\n          resources = _a.resources,\n          plainResources = _a.plainResources;\n      var commitAddedAppointment = _b.commitAddedAppointment,\n          finishCommitAppointment = _b.finishCommitAppointment,\n          finishDeleteAppointment = _b.finishDeleteAppointment,\n          stopEditAppointment = _b.stopEditAppointment,\n          cancelAddedAppointment = _b.cancelAddedAppointment,\n          cancelChangedAppointment = _b.cancelChangedAppointment,\n          openCancelConfirmationDialog = _b.openCancelConfirmationDialog,\n          openDeleteConfirmationDialog = _b.openDeleteConfirmationDialog;\n\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n          isNew = _c.isNew,\n          changedAppointment = _c.changedAppointment,\n          isFormEdited = _c.isFormEdited;\n\n      var isRecurrence = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n      return createElement(CommandLayout, {\n        commandButtonComponent: commandButtonComponent,\n        onCommitButtonClick: _this.commitChanges(finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment),\n        onCancelButtonClick: _this.cancelChanges(openCancelConfirmationDialog, isNew, stopEditAppointment, __assign(__assign({}, appointmentChanges), addedAppointment), changedAppointment, cancelAddedAppointment, cancelChangedAppointment),\n        onDeleteButtonClick: _this.deleteAppointment(finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog, changedAppointment, cancelAddedAppointment, cancelChangedAppointment, stopEditAppointment, isNew),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        fullSize: isRecurrence,\n        disableSaveButton: !isFormEdited,\n        hideDeleteButton: isNew\n      });\n    })), createElement(Template, {\n      name: \"basicLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n          addedAppointment = _a.addedAppointment,\n          appointmentChanges = _a.appointmentChanges,\n          locale = _a.locale,\n          resources = _a.resources,\n          plainResources = _a.plainResources;\n      var changeAppointment = _b.changeAppointment,\n          changeAddedAppointment = _b.changeAddedAppointment;\n\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n          isNew = _c.isNew,\n          changedAppointment = _c.changedAppointment,\n          appointmentResources = _c.appointmentResources;\n\n      return createElement(BasicLayout, {\n        locale: locale,\n        appointmentData: visible ? changedAppointment : previousAppointment,\n        onFieldChange: _this.changeAppointmentField(isNew, changeAddedAppointment, changeAppointment),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        textEditorComponent: textEditorComponent,\n        dateEditorComponent: dateEditorComponent,\n        booleanEditorComponent: booleanEditorComponent,\n        selectComponent: selectComponent,\n        labelComponent: labelComponent,\n        resourceEditorComponent: resourceEditorComponent,\n        fullSize: !changedAppointment.rRule,\n        resources: resources,\n        appointmentResources: appointmentResources\n      });\n    })), createElement(Template, {\n      name: \"recurrenceLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n          addedAppointment = _a.addedAppointment,\n          appointmentChanges = _a.appointmentChanges,\n          formatDate = _a.formatDate,\n          locale = _a.locale,\n          firstDayOfWeek = _a.firstDayOfWeek;\n      var changeAddedAppointment = _b.changeAddedAppointment,\n          changeAppointment = _b.changeAppointment;\n\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, undefined, undefined),\n          isNew = _c.isNew,\n          changedAppointment = _c.changedAppointment;\n\n      var isRecurrenceLayoutVisible = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n      var correctedAppointment = !changedAppointment.rRule ? __assign(__assign({}, changedAppointment), {\n        rRule: previousAppointment.rRule\n      }) : changedAppointment;\n      return createElement(RecurrenceLayout, {\n        locale: locale,\n        appointmentData: visible ? correctedAppointment : previousAppointment,\n        onFieldChange: _this.changeAppointmentField(isNew, changeAddedAppointment, changeAppointment),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        formatDate: formatDate,\n        textEditorComponent: textEditorComponent,\n        dateEditorComponent: dateEditorComponent,\n        radioGroupComponent: radioGroupComponent,\n        weeklyRecurrenceSelectorComponent: weeklyRecurrenceSelectorComponent,\n        labelComponent: labelComponent,\n        selectComponent: selectComponent,\n        visible: isRecurrenceLayoutVisible,\n        firstDayOfWeek: firstDayOfWeek\n      });\n    })), createElement(Template, {\n      name: \"tooltip\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (getters, _a) {\n        var startEditAppointment = _a.startEditAppointment;\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            onOpenButtonClick: function () {\n              _this.openFormHandler(params.appointmentMeta.data);\n\n              callActionIfExists(startEditAppointment, params.appointmentMeta.data);\n            }\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"appointment\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (getters, _a) {\n        var startEditAppointment = _a.startEditAppointment;\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            onDoubleClick: function () {\n              _this.openFormHandler(params.data);\n\n              callActionIfExists(startEditAppointment, params.data);\n            }\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"cell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a, _b) {\n        var resources = _a.resources;\n        var addAppointment = _b.addAppointment;\n        return addDoubleClickToCell(undefined, params.startDate, params.endDate, params.groupingInfo, resources, isAllDayCell(params.startDate, params.endDate), _this.openFormHandler, addAppointment, params);\n      });\n    }), createElement(Template, {\n      name: \"allDayPanelCell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a, _b) {\n        var resources = _a.resources;\n        var addAppointment = _b.addAppointment;\n        return addDoubleClickToCell(undefined, params.startDate, params.endDate, params.groupingInfo, resources, true, _this.openFormHandler, addAppointment, params);\n      });\n    }));\n  };\n\n  AppointmentFormBase.defaultProps = {\n    messages: {},\n    readOnly: false,\n    onVisibilityChange: function () {\n      return undefined;\n    },\n    onAppointmentDataChange: function () {\n      return undefined;\n    }\n  };\n  AppointmentFormBase.components = {\n    overlayComponent: 'Overlay',\n    layoutComponent: 'Layout',\n    commandLayoutComponent: 'CommandLayout',\n    commandButtonComponent: 'CommandButton',\n    basicLayoutComponent: 'BasicLayout',\n    textEditorComponent: 'TextEditor',\n    labelComponent: 'Label',\n    dateEditorComponent: 'DateEditor',\n    booleanEditorComponent: 'BooleanEditor',\n    selectComponent: 'Select',\n    recurrenceLayoutComponent: 'RecurrenceLayout',\n    radioGroupComponent: 'RadioGroup',\n    weeklyRecurrenceSelectorComponent: 'WeeklyRecurrenceSelector',\n    resourceEditorComponent: 'ResourceEditor',\n    containerComponent: 'Container'\n  };\n  return AppointmentFormBase;\n}(PureComponent); // tslint:disable-next-line: max-line-length\n\n/** The AppointmentForm plugin renders a form that visualizes appointmentâ€™s data and allows a user to modify this data. */\n\n\nvar AppointmentForm = AppointmentFormBase;\n\nvar renderAppointmentItems = function (items, Wrapper, draftData) {\n  return items.length > 0 ? createElement(Wrapper, null, items.map(function (draftAppointment, index) {\n    return createElement(TemplatePlaceholder, {\n      name: \"draftAppointment\",\n      key: index.toString(),\n      params: {\n        data: draftData,\n        draftAppointment: draftAppointment\n      }\n    });\n  })) : null;\n};\n\nvar pluginDependencies$6 = [{\n  name: 'EditingState'\n}, {\n  name: 'Appointments'\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'AllDayPanel',\n  optional: true\n}];\n\nvar DragDropProviderBase = /*#__PURE__*/function (_super) {\n  __extends(DragDropProviderBase, _super);\n\n  function DragDropProviderBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.timeTableDraftAppointments = [];\n    _this.allDayDraftAppointments = [];\n    _this.offsetTimeTop = null;\n    _this.appointmentStartTime = null;\n    _this.appointmentEndTime = null;\n    _this.appointmentGroupingInfo = {};\n    _this.state = {\n      startTime: null,\n      endTime: null,\n      appointmentGroupingInfo: null,\n      payload: null,\n      isOutside: false,\n      allowDrag: function () {\n        return true;\n      },\n      allowResize: function () {\n        return true;\n      },\n      appointmentContentTemplateKey: 0,\n      appointmentTopTemplateKey: 0,\n      appointmentBottomTemplateKey: 0\n    };\n\n    _this.handleDrop = function (_a) {\n      var finishCommitAppointment = _a.finishCommitAppointment;\n      return function () {\n        finishCommitAppointment();\n\n        _this.resetCache();\n      };\n    };\n\n    _this.handleLeave = function () {\n      _this.setState({\n        isOutside: true\n      });\n    };\n\n    return _this;\n  }\n\n  DragDropProviderBase.getDerivedStateFromProps = function (props, state) {\n    var isAllowDragSame = props.allowDrag === state.allowDrag;\n    var isAllowResizeSame = props.allowResize === state.allowResize;\n\n    if (isAllowDragSame && isAllowResizeSame) {\n      return null;\n    }\n\n    return __assign(__assign({}, state), {\n      appointmentContentTemplateKey: isAllowDragSame ? state.appointmentContentTemplateKey : Math.random(),\n      appointmentTopTemplateKey: isAllowResizeSame ? state.appointmentTopTemplateKey : Math.random(),\n      appointmentBottomTemplateKey: isAllowResizeSame ? state.appointmentBottomTemplateKey : Math.random(),\n      allowDrag: props.allowDrag,\n      allowResize: props.allowResize\n    });\n  };\n\n  DragDropProviderBase.prototype.onPayloadChange = function (actions) {\n    var _this = this;\n\n    return function (args) {\n      return _this.handlePayloadChange(args, actions);\n    };\n  };\n\n  DragDropProviderBase.prototype.calculateNextBoundaries = function (getters, actions, scrollSpeed) {\n    var _this = this;\n\n    return function (args) {\n      return _this.calculateBoundaries(args, getters, actions, scrollSpeed);\n    };\n  };\n\n  DragDropProviderBase.prototype.resetCache = function () {\n    this.timeTableDraftAppointments = [];\n    this.allDayDraftAppointments = [];\n    this.offsetTimeTop = null;\n    this.appointmentStartTime = null;\n    this.appointmentEndTime = null;\n    this.appointmentGroupingInfo = {};\n    this.setState({\n      payload: null,\n      startTime: null,\n      endTime: null,\n      isOutside: false\n    });\n  };\n\n  DragDropProviderBase.prototype.applyChanges = function (startTime, endTime, payload, startEditAppointment, changeAppointment, appointmentGroupingInfo) {\n    startEditAppointment(payload);\n    changeAppointment({\n      change: __assign(__assign({\n        startDate: startTime,\n        endDate: endTime\n      }, payload.allDay && {\n        allDay: undefined\n      }), this.appointmentGroupingInfo)\n    });\n    this.setState({\n      startTime: startTime,\n      endTime: endTime,\n      payload: payload,\n      isOutside: false,\n      appointmentGroupingInfo: appointmentGroupingInfo\n    });\n  };\n\n  DragDropProviderBase.prototype.handlePayloadChange = function (_a, _b) {\n    var payload = _a.payload;\n    var finishCommitAppointment = _b.finishCommitAppointment;\n    var isOutside = this.state.isOutside;\n    if (payload || !isOutside) return;\n    finishCommitAppointment();\n    this.resetCache();\n  };\n\n  DragDropProviderBase.prototype.calculateBoundaries = function (_a, _b, _c, scrollSpeed) {\n    var payload = _a.payload,\n        clientOffset = _a.clientOffset;\n    var viewCellsData = _b.viewCellsData,\n        allDayCellsData = _b.allDayCellsData,\n        startViewDate = _b.startViewDate,\n        endViewDate = _b.endViewDate,\n        excludedDays = _b.excludedDays,\n        currentView = _b.currentView,\n        timeTableElementsMeta = _b.timeTableElementsMeta,\n        allDayElementsMeta = _b.allDayElementsMeta,\n        scrollingStrategy = _b.scrollingStrategy,\n        grouping = _b.grouping,\n        resources = _b.resources,\n        groups = _b.groups,\n        getGroupOrientation = _b.groupOrientation,\n        groupByDate = _b.groupByDate;\n    var changeAppointment = _c.changeAppointment,\n        startEditAppointment = _c.startEditAppointment;\n\n    if (clientOffset) {\n      autoScroll(clientOffset, scrollingStrategy, scrollSpeed);\n    }\n\n    var tableCellElementsMeta = timeTableElementsMeta;\n    var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION; // AllDayPanel doesn't always exist\n\n    var allDayCellsElementsMeta = allDayElementsMeta && allDayElementsMeta.getCellRects ? allDayElementsMeta : {\n      getCellRects: []\n    };\n    var timeTableIndex = cellIndex(tableCellElementsMeta.getCellRects, clientOffset);\n    var allDayIndex = cellIndex(allDayCellsElementsMeta.getCellRects, clientOffset);\n    if (allDayIndex === -1 && timeTableIndex === -1) return;\n    var targetData = cellData(timeTableIndex, allDayIndex, viewCellsData, allDayCellsData);\n    var targetType = cellType(targetData);\n    var insidePart = calculateInsidePart(clientOffset.y, tableCellElementsMeta.getCellRects, timeTableIndex);\n    var cellDurationMinutes = intervalDuration(targetData, 'minutes');\n\n    var _d = calculateAppointmentTimeBoundaries(payload, targetData, targetType, cellDurationMinutes, insidePart, this.offsetTimeTop),\n        appointmentStartTime = _d.appointmentStartTime,\n        appointmentEndTime = _d.appointmentEndTime,\n        offsetTimeTop = _d.offsetTimeTop;\n\n    var appointmentGroups = calculateAppointmentGroups(targetData.groupingInfo, resources, payload);\n    this.appointmentStartTime = appointmentStartTime || this.appointmentStartTime;\n    this.appointmentEndTime = appointmentEndTime || this.appointmentEndTime;\n    this.appointmentGroupingInfo = appointmentGroups || this.appointmentGroupingInfo;\n    this.offsetTimeTop = offsetTimeTop;\n    var _e = this.state,\n        startTime = _e.startTime,\n        endTime = _e.endTime,\n        appointmentGroupingInfo = _e.appointmentGroupingInfo;\n\n    if (!appointmentDragged(this.appointmentStartTime, startTime, this.appointmentEndTime, endTime, this.appointmentGroupingInfo, appointmentGroupingInfo)) {\n      return;\n    }\n\n    var draftAppointments = [{\n      dataItem: __assign(__assign(__assign({}, payload), {\n        startDate: this.appointmentStartTime,\n        endDate: this.appointmentEndTime\n      }), this.appointmentGroupingInfo),\n      start: this.appointmentStartTime,\n      end: this.appointmentEndTime\n    }];\n\n    var _f = calculateDraftAppointments(allDayIndex, draftAppointments, startViewDate, endViewDate, excludedDays, viewCellsData, allDayCellsElementsMeta, targetType, cellDurationMinutes, tableCellElementsMeta, grouping, resources, groups, groupOrientation, groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name)),\n        allDayDraftAppointments = _f.allDayDraftAppointments,\n        timeTableDraftAppointments = _f.timeTableDraftAppointments;\n\n    this.allDayDraftAppointments = allDayDraftAppointments;\n    this.timeTableDraftAppointments = timeTableDraftAppointments;\n    this.applyChanges(this.appointmentStartTime, this.appointmentEndTime, payload, startEditAppointment, changeAppointment, this.appointmentGroupingInfo);\n  };\n\n  DragDropProviderBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.state,\n        payload = _a.payload,\n        appointmentContentTemplateKey = _a.appointmentContentTemplateKey,\n        appointmentBottomTemplateKey = _a.appointmentBottomTemplateKey,\n        appointmentTopTemplateKey = _a.appointmentTopTemplateKey;\n    var _b = this.props,\n        Container = _b.containerComponent,\n        DraftAppointment = _b.draftAppointmentComponent,\n        SourceAppointment = _b.sourceAppointmentComponent,\n        Resize = _b.resizeComponent,\n        allowDrag = _b.allowDrag,\n        allowResize = _b.allowResize,\n        scrollSpeed = _b.scrollSpeed;\n\n    var draftData = __assign(__assign({}, payload), {\n      startDate: this.appointmentStartTime,\n      endDate: this.appointmentEndTime\n    });\n\n    return createElement(Plugin, {\n      name: \"DragDropProvider\",\n      dependencies: pluginDependencies$6\n    }, createElement(Template, {\n      name: \"body\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var viewCellsData = _a.viewCellsData,\n          allDayCellsData = _a.allDayCellsData,\n          startViewDate = _a.startViewDate,\n          endViewDate = _a.endViewDate,\n          excludedDays = _a.excludedDays,\n          timeTableElementsMeta = _a.timeTableElementsMeta,\n          allDayElementsMeta = _a.allDayElementsMeta,\n          scrollingStrategy = _a.scrollingStrategy,\n          grouping = _a.grouping,\n          resources = _a.resources,\n          groups = _a.groups,\n          currentView = _a.currentView,\n          groupByDate = _a.groupByDate,\n          groupOrientation = _a.groupOrientation;\n      var changeAppointment = _b.changeAppointment,\n          startEditAppointment = _b.startEditAppointment,\n          finishCommitAppointment = _b.finishCommitAppointment;\n\n      var calculateBoundariesByMove = _this.calculateNextBoundaries({\n        viewCellsData: viewCellsData,\n        allDayCellsData: allDayCellsData,\n        currentView: currentView,\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        excludedDays: excludedDays,\n        timeTableElementsMeta: timeTableElementsMeta,\n        allDayElementsMeta: allDayElementsMeta,\n        scrollingStrategy: scrollingStrategy,\n        resources: resources,\n        grouping: grouping,\n        groups: groups,\n        groupByDate: groupByDate,\n        groupOrientation: groupOrientation\n      }, {\n        changeAppointment: changeAppointment,\n        startEditAppointment: startEditAppointment\n      }, scrollSpeed);\n\n      return createElement(DragDropProvider$1, {\n        onChange: _this.onPayloadChange({\n          finishCommitAppointment: finishCommitAppointment\n        })\n      }, createElement(DropTarget, {\n        onOver: calculateBoundariesByMove,\n        onEnter: calculateBoundariesByMove,\n        onDrop: _this.handleDrop({\n          finishCommitAppointment: finishCommitAppointment\n        }),\n        onLeave: _this.handleLeave\n      }, createElement(PlaceholderWithRef, null)));\n    })), createElement(Template, {\n      name: \"appointmentContent\",\n      predicate: function (_a) {\n        var data = _a.data;\n        return allowDrag(data);\n      },\n      key: appointmentContentTemplateKey\n    }, function (_a) {\n      var styles = _a.styles,\n          params = __rest(_a, [\"styles\"]);\n\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, params.data), {\n          type: params.type\n        })\n      }, payload && params.data.id === payload.id ? createElement(SourceAppointment, __assign({}, params)) : createElement(PlaceholderWithRef, {\n        params: __assign(__assign({}, params), {\n          draggable: true\n        })\n      }));\n    }), createElement(Template, {\n      name: \"appointmentTop\",\n      predicate: function (params) {\n        return !params.slice && allowResize(params.data);\n      },\n      key: appointmentTopTemplateKey\n    }, function (_a) {\n      var data = _a.data,\n          type = _a.type;\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, data), {\n          type: RESIZE_TOP,\n          appointmentType: type\n        })\n      }, createElement(Resize, {\n        position: POSITION_START,\n        appointmentType: type\n      }));\n    }), createElement(Template, {\n      name: \"appointmentBottom\",\n      predicate: function (params) {\n        return !params.slice && allowResize(params.data);\n      },\n      key: appointmentBottomTemplateKey\n    }, function (_a) {\n      var data = _a.data,\n          type = _a.type;\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, data), {\n          type: RESIZE_BOTTOM,\n          appointmentType: type\n        })\n      }, createElement(Resize, {\n        position: POSITION_END,\n        appointmentType: type\n      }));\n    }), createElement(Template, {\n      name: \"allDayPanel\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation;\n      return createElement(Fragment, null, createElement(TemplatePlaceholder, null), (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) !== VERTICAL_GROUP_ORIENTATION ? renderAppointmentItems(_this.allDayDraftAppointments, Container, draftData) : null);\n    })), createElement(Template, {\n      name: \"timeTable\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation;\n      return createElement(Fragment, null, createElement(TemplatePlaceholder, null), renderAppointmentItems(_this.timeTableDraftAppointments, Container, draftData), (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) === VERTICAL_GROUP_ORIENTATION ? renderAppointmentItems(_this.allDayDraftAppointments, Container, draftData) : null);\n    })), createElement(Template, {\n      name: \"draftAppointment\"\n    }, function (_a) {\n      var data = _a.data,\n          draftAppointment = _a.draftAppointment,\n          restParams = __rest(_a, [\"data\", \"draftAppointment\"]);\n\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate,\n            resources = _a.resources,\n            plainResources = _a.plainResources;\n\n        var dataItem = draftAppointment.dataItem,\n            type = draftAppointment.type,\n            fromPrev = draftAppointment.fromPrev,\n            toNext = draftAppointment.toNext,\n            durationType = draftAppointment.durationType,\n            geometry = __rest(draftAppointment, [\"dataItem\", \"type\", \"fromPrev\", \"toNext\", \"durationType\"]);\n\n        return createElement(DraftAppointment, __assign({\n          data: data,\n          resources: getAppointmentResources(dataItem, resources, plainResources),\n          durationType: durationType,\n          style: getAppointmentStyle(geometry),\n          type: type,\n          fromPrev: fromPrev,\n          toNext: toNext,\n          formatDate: formatDate\n        }, restParams));\n      });\n    }));\n  };\n\n  DragDropProviderBase.components = {\n    containerComponent: 'Container',\n    draftAppointmentComponent: 'DraftAppointment',\n    sourceAppointmentComponent: 'SourceAppointment',\n    resizeComponent: 'Resize'\n  };\n  DragDropProviderBase.defaultProps = {\n    allowDrag: function () {\n      return true;\n    },\n    allowResize: function () {\n      return true;\n    },\n    scrollSpeed: SCROLL_SPEED_PX\n  };\n  return DragDropProviderBase;\n}(PureComponent);\n/** A plugin that enables users to edit appointments via drag-and-drop. */\n\n\nvar DragDropProvider = DragDropProviderBase;\nvar pluginDependencies$7 = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\nvar defaultMessages$2 = {\n  today: 'Today'\n};\n\nvar TodayButtonBase = /*#__PURE__*/function (_super) {\n  __extends(TodayButtonBase, _super);\n\n  function TodayButtonBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TodayButtonBase.prototype.render = function () {\n    var _a = this.props,\n        Button = _a.buttonComponent,\n        messages = _a.messages;\n    var getMessage = getMessagesFormatter(__assign(__assign({}, defaultMessages$2), messages));\n    return createElement(Plugin, {\n      name: \"TodayButton\",\n      dependencies: pluginDependencies$7\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplateConnector, null, function (getters, _a) {\n      var changeCurrentDate = _a.changeCurrentDate;\n\n      var setCurrentDate = function (nextDate) {\n        return changeCurrentDate({\n          nextDate: nextDate\n        });\n      };\n\n      return createElement(Button, {\n        getMessage: getMessage,\n        setCurrentDate: setCurrentDate\n      });\n    }), createElement(TemplatePlaceholder, null)));\n  };\n\n  TodayButtonBase.components = {\n    buttonComponent: 'Button'\n  };\n  return TodayButtonBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's button which sets the current date to today's date. */\n\n\nvar TodayButton = TodayButtonBase;\n\nvar _a;\n\nvar pluginDependencies$8 = [{\n  name: 'EditingState'\n}];\nvar defaultAvailableOperations = [{\n  value: RECURRENCE_EDIT_SCOPE.CURRENT\n}, {\n  value: RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING\n}, {\n  value: RECURRENCE_EDIT_SCOPE.ALL\n}];\nvar defaultMessages$3 = (_a = {}, _a[RECURRENCE_EDIT_SCOPE.CURRENT] = 'This appointment', _a[RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING] = 'This and following appointments', _a[RECURRENCE_EDIT_SCOPE.ALL] = 'All appointments', _a.menuEditingTitle = 'Edit recurring appointment', _a.menuDeletingTitle = 'Delete recurring appointment', _a.cancelButton = 'Cancel', _a.commitButton = 'OK', _a);\n\nvar EditRecurrenceMenuBase = /*#__PURE__*/function (_super) {\n  __extends(EditRecurrenceMenuBase, _super);\n\n  function EditRecurrenceMenuBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.modalContainer = createRef();\n    _this.state = {\n      isOpen: false,\n      deletedAppointmentData: null\n    };\n\n    _this.finishCommitAppointment = function (payload, _a, _b) {\n      var editingAppointment = _a.editingAppointment;\n      var commitChangedAppointment = _b.commitChangedAppointment;\n\n      if (editingAppointment && !editingAppointment.rRule) {\n        commitChangedAppointment();\n      } else {\n        _this.setState({\n          isOpen: true,\n          deletedAppointmentData: null\n        });\n      }\n    };\n\n    _this.finishDeleteAppointment = function (payload, getters, _a) {\n      var commitDeletedAppointment = _a.commitDeletedAppointment;\n\n      if (payload && !payload.rRule) {\n        commitDeletedAppointment({\n          deletedAppointmentData: payload\n        });\n      } else {\n        _this.setState({\n          isOpen: true,\n          deletedAppointmentData: payload\n        });\n      }\n    };\n\n    _this.commit = memoize(function (editAction, deleteAction, payload) {\n      return function (type) {\n        if (payload) {\n          deleteAction({\n            deletedAppointmentData: payload,\n            type: type\n          });\n        } else {\n          editAction(type);\n        }\n\n        _this.closeMenu();\n      };\n    });\n\n    _this.closeMenu = function () {\n      _this.setState({\n        isOpen: false,\n        deletedAppointmentData: null\n      });\n    };\n\n    _this.cancelEditing = memoize(function (cancelAction, stopEditAction) {\n      return function () {\n        stopEditAction();\n        cancelAction();\n\n        _this.closeMenu();\n      };\n    });\n    _this.availableOperations = memoize(function (getMessage, menuAvailableOperations) {\n      return menuAvailableOperations.map(function (_a) {\n        var value = _a.value;\n        return {\n          value: value,\n          title: getMessage([value])\n        };\n      });\n    });\n    _this.getMessage = memoize(function (messages, menuMessages) {\n      return getMessagesFormatter(__assign(__assign({}, menuMessages), messages));\n    });\n    return _this;\n  }\n\n  EditRecurrenceMenuBase.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.state,\n        isOpen = _a.isOpen,\n        deletedAppointmentData = _a.deletedAppointmentData;\n    var _b = this.props,\n        Layout = _b.layoutComponent,\n        Overlay = _b.overlayComponent,\n        Container = _b.containerComponent,\n        buttonComponent = _b.buttonComponent,\n        messages = _b.messages;\n    var getMessage = this.getMessage(messages, defaultMessages$3);\n    var availableOperations = this.availableOperations(getMessage, defaultAvailableOperations);\n    return createElement(Plugin, {\n      name: \"EditRecurrenceMenu\",\n      dependencies: pluginDependencies$8\n    }, createElement(Action, {\n      name: \"finishCommitAppointment\",\n      action: this.finishCommitAppointment\n    }), createElement(Action, {\n      name: \"finishDeleteAppointment\",\n      action: this.finishDeleteAppointment\n    }), createElement(Template, {\n      name: \"schedulerRoot\"\n    }, createElement(TemplatePlaceholder, null), createElement(Container, {\n      ref: this.modalContainer\n    }), createElement(TemplatePlaceholder, {\n      name: \"overlay\"\n    })), createElement(Template, {\n      name: \"overlay\"\n    }, createElement(TemplateConnector, null, function (getters, _a) {\n      var commitChangedAppointment = _a.commitChangedAppointment,\n          commitDeletedAppointment = _a.commitDeletedAppointment,\n          cancelChangedAppointment = _a.cancelChangedAppointment,\n          stopEditAppointment = _a.stopEditAppointment;\n\n      var commit = _this.commit(commitChangedAppointment, commitDeletedAppointment, deletedAppointmentData);\n\n      var cancelEditing = _this.cancelEditing(cancelChangedAppointment, stopEditAppointment);\n\n      return createElement(Overlay, {\n        target: _this.modalContainer,\n        visible: isOpen,\n        onHide: _this.closeMenu\n      }, createElement(Layout, {\n        isDeleting: !!deletedAppointmentData,\n        buttonComponent: buttonComponent,\n        handleClose: cancelEditing,\n        commit: commit,\n        availableOperations: availableOperations,\n        getMessage: getMessage\n      }));\n    })));\n  };\n\n  EditRecurrenceMenuBase.components = {\n    layoutComponent: 'Layout',\n    overlayComponent: 'Overlay',\n    buttonComponent: 'Button',\n    containerComponent: 'Container'\n  };\n  return EditRecurrenceMenuBase;\n}(PureComponent);\n/**\r\n * A plugin that renders the Scheduler's edit menu.\r\n * Should not be used with the `IntegratedEditing` plugin.\r\n */\n\n\nvar EditRecurrenceMenu = EditRecurrenceMenuBase;\nvar pluginDependencies$9 = [{\n  name: 'EditingState'\n}];\n\nvar IntegratedEditingBase = /*#__PURE__*/function (_super) {\n  __extends(IntegratedEditingBase, _super);\n\n  function IntegratedEditingBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.finishCommitAppointment = function (payload, getters, _a) {\n      var commitChangedAppointment = _a.commitChangedAppointment;\n      commitChangedAppointment();\n    };\n\n    _this.finishDeleteAppointment = function (payload, getters, _a) {\n      var commitDeletedAppointment = _a.commitDeletedAppointment;\n      commitDeletedAppointment({\n        deletedAppointmentData: payload\n      });\n    };\n\n    return _this;\n  }\n\n  IntegratedEditingBase.prototype.render = function () {\n    return createElement(Plugin, {\n      name: \"IntegratedEditing\",\n      dependencies: pluginDependencies$9\n    }, createElement(Action, {\n      name: \"finishCommitAppointment\",\n      action: this.finishCommitAppointment\n    }), createElement(Action, {\n      name: \"finishDeleteAppointment\",\n      action: this.finishDeleteAppointment\n    }));\n  };\n\n  IntegratedEditingBase.defaultProps = {\n    totalCount: 0\n  };\n  return IntegratedEditingBase;\n}(PureComponent);\n/** A plugin that allows implementing a editing calculation logic. */\n\n\nvar IntegratedEditing = IntegratedEditingBase;\nvar pluginDependencies$a = [{\n  name: 'Appointments'\n}];\n\nvar addResourcesToTimeTableAppointments = function (_a) {\n  var timeTableAppointments = _a.timeTableAppointments,\n      resources = _a.resources,\n      plainResources = _a.plainResources;\n  return timeTableAppointments && addResourcesToAppointments(timeTableAppointments[0], resources, plainResources);\n};\n\nvar addResourcesToAllDayAppointments = function (_a) {\n  var allDayAppointments = _a.allDayAppointments,\n      resources = _a.resources,\n      plainResources = _a.plainResources;\n  return allDayAppointments && addResourcesToAppointments(allDayAppointments[0], resources, plainResources);\n};\n\nvar ResourcesBase = memo(function (_a) {\n  var data = _a.data,\n      mainResourceName = _a.mainResourceName,\n      palette = _a.palette;\n\n  var convertResources = function (_a) {\n    var resources = _a.resources;\n    return convertResourcesToPlain(resources);\n  };\n\n  return createElement(Plugin, {\n    name: \"Resources\",\n    dependencies: pluginDependencies$a\n  }, createElement(Getter, {\n    name: \"resources\",\n    value: validateResources(data, mainResourceName, palette)\n  }), createElement(Getter, {\n    name: \"plainResources\",\n    computed: convertResources\n  }), createElement(Getter, {\n    name: \"timeTableAppointments\",\n    computed: addResourcesToTimeTableAppointments\n  }), createElement(Getter, {\n    name: \"allDayAppointments\",\n    computed: addResourcesToAllDayAppointments\n  }));\n});\n/** A plugin that manages schedule's resources. */\n\nvar Resources = ResourcesBase;\nvar defaultMessages$4 = {\n  discardButton: 'Discard',\n  deleteButton: 'Delete',\n  cancelButton: 'Cancel',\n  confirmDeleteMessage: 'Are you sure you want to delete this appointment?',\n  confirmCancelMessage: 'Discard unsaved changes?'\n};\nvar pluginDependencies$b = [{\n  name: 'EditingState'\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\nvar ACTION_TYPES = {\n  CANCEL: 'cancel',\n  DELETE: 'delete'\n};\n\nvar ConfirmationDialogBase = function (_a) {\n  var messages = _a.messages,\n      Overlay = _a.overlayComponent,\n      Layout = _a.layoutComponent,\n      Container = _a.containerComponent,\n      buttonComponent = _a.buttonComponent,\n      ignoreDelete = _a.ignoreDelete,\n      ignoreCancel = _a.ignoreCancel;\n  var getMessage = getMessagesFormatter(__assign(__assign({}, defaultMessages$4), messages));\n  var modalContainer = useRef();\n\n  var _b = __read(useState(false), 2),\n      visible = _b[0],\n      setVisible = _b[1];\n\n  var _c = __read(useState(''), 2),\n      actionType = _c[0],\n      setActionType = _c[1];\n\n  var _d = __read(useState(''), 2),\n      hideActionName = _d[0],\n      setHideActionName = _d[1];\n\n  var _e = __read(useState({}), 2),\n      appointmentData = _e[0],\n      setAppointmentData = _e[1];\n\n  var toggleVisibility = useCallback(function () {\n    setVisible(!visible);\n  }, [visible, setVisible]);\n  var confirmCancelChanges = useCallback(function (hideAction) {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.CANCEL);\n  }, [toggleVisibility, setHideActionName, setActionType]);\n  var confirmDelete = useCallback(function (_a) {\n    var hideAction = _a.hideActionName,\n        changedAppointment = _a.appointmentData;\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.DELETE);\n    setAppointmentData(changedAppointment);\n  }, [toggleVisibility, setHideActionName, setActionType, setAppointmentData]);\n  var confirmAction = useCallback(function (isNewAppointment, hideEditor, stopEditAppointment, finishDeleteAppointment, cancelAddedAppointment, cancelChangedAppointment) {\n    return function () {\n      hideEditor();\n      toggleVisibility();\n\n      if (isNewAppointment) {\n        cancelAddedAppointment();\n      } else {\n        stopEditAppointment();\n        cancelChangedAppointment();\n      }\n\n      if (actionType === ACTION_TYPES.DELETE) {\n        finishDeleteAppointment(appointmentData);\n      }\n    };\n  }, [toggleVisibility, actionType, appointmentData]);\n  return createElement(Plugin, {\n    name: \"ConfirmationDialog\",\n    dependencies: pluginDependencies$b\n  }, !ignoreCancel && createElement(Action, {\n    name: \"openCancelConfirmationDialog\",\n    action: confirmCancelChanges\n  }), !ignoreDelete && createElement(Action, {\n    name: \"openDeleteConfirmationDialog\",\n    action: confirmDelete\n  }), createElement(Template, {\n    name: \"schedulerRoot\"\n  }, createElement(TemplatePlaceholder, null), createElement(Container, {\n    ref: modalContainer\n  }), createElement(TemplatePlaceholder, {\n    name: \"confirmationDialogOverlay\"\n  })), createElement(Template, {\n    name: \"confirmationDialogOverlay\"\n  }, createElement(TemplateConnector, null, function (_a, actions) {\n    var editingAppointment = _a.editingAppointment;\n    var handleConfirm = confirmAction(!editingAppointment, actions[hideActionName], actions.stopEditAppointment, actions.finishDeleteAppointment, actions.cancelAddedAppointment, actions.cancelChangedAppointment);\n    return createElement(Overlay, {\n      target: modalContainer,\n      visible: visible,\n      onHide: toggleVisibility\n    }, createElement(Layout, {\n      buttonComponent: buttonComponent,\n      handleCancel: toggleVisibility,\n      handleConfirm: handleConfirm,\n      getMessage: getMessage,\n      isDeleting: actionType === ACTION_TYPES.DELETE,\n      appointmentData: appointmentData\n    }));\n  })));\n};\n\nConfirmationDialogBase.components = {\n  overlayComponent: 'Overlay',\n  containerComponent: 'Container',\n  layoutComponent: 'Layout',\n  buttonComponent: 'Button'\n};\nConfirmationDialogBase.defaultProps = {\n  ignoreCancel: false,\n  ignoreDelete: false\n}; // tslint:disable-next-line: max-line-length\n\n/** A plugin that renders the dialog which allows users to confirm or to discard delete and cancel appointment actions. */\n\nvar ConfirmationDialog = ConfirmationDialogBase;\n\nvar GroupingStateBase = /*#__PURE__*/function (_super) {\n  __extends(GroupingStateBase, _super);\n\n  function GroupingStateBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.state = {\n      grouping: props.grouping,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups\n    };\n    _this.stateHelper = createStateHelper(_this, {\n      expandedGroups: function () {\n        var onExpandedGroupsChange = _this.props.onExpandedGroupsChange;\n        return onExpandedGroupsChange;\n      }\n    });\n    _this.toggleGroupExpanded = _this.stateHelper.applyReducer.bind(_this.stateHelper, toggleExpandedGroups);\n    return _this;\n  }\n\n  GroupingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.grouping,\n        grouping = _a === void 0 ? prevState.grouping : _a,\n        _b = nextProps.expandedGroups,\n        expandedGroups = _b === void 0 ? prevState.expandedGroups : _b;\n    return {\n      grouping: grouping,\n      expandedGroups: expandedGroups\n    };\n  };\n\n  GroupingStateBase.prototype.render = function () {\n    var _a = this.state,\n        grouping = _a.grouping,\n        expandedGroups = _a.expandedGroups;\n    var _b = this.props,\n        groupByDate = _b.groupByDate,\n        groupOrientation = _b.groupOrientation;\n    return createElement(Plugin, {\n      name: \"GroupingState\"\n    }, createElement(Getter, {\n      name: \"grouping\",\n      value: grouping\n    }), createElement(Getter, {\n      name: \"groupByDate\",\n      value: groupByDate\n    }), createElement(Getter, {\n      name: \"groupOrientation\",\n      value: groupOrientation\n    }), createElement(Getter, {\n      name: \"expandedGroups\",\n      value: expandedGroups\n    }), createElement(Action, {\n      name: \"toggleGroupExpanded\",\n      action: this.toggleGroupExpanded\n    }));\n  };\n\n  GroupingStateBase.defaultProps = {\n    defaultExpandedGroups: [],\n    groupByDate: function () {\n      return false;\n    },\n    groupOrientation: function () {\n      return HORIZONTAL_GROUP_ORIENTATION;\n    }\n  };\n  return GroupingStateBase;\n}(PureComponent);\n/** A plugin that manages the grouping state. */\n\n\nvar GroupingState = GroupingStateBase;\nvar pluginDependencies$c = [{\n  name: 'GroupingState'\n}, {\n  name: 'IntegratedGrouping'\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'ViewState',\n  optional: true\n}];\n\nvar GroupingPanelBase = /*#__PURE__*/function (_super) {\n  __extends(GroupingPanelBase, _super);\n\n  function GroupingPanelBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GroupingPanelBase.prototype.render = function () {\n    var _a = this.props,\n        HorizontalLayout = _a.horizontalLayoutComponent,\n        VerticalLayout = _a.verticalLayoutComponent,\n        rowComponent = _a.rowComponent,\n        cellComponent = _a.cellComponent;\n    return createElement(Plugin, {\n      name: \"GroupingPanel\",\n      dependencies: pluginDependencies$c\n    }, createElement(Template, {\n      name: \"groupingPanel\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var viewCellsData = _a.viewCellsData,\n          currentView = _a.currentView,\n          scrollingStrategy = _a.scrollingStrategy,\n          allDayPanelExists = _a.allDayPanelExists,\n          groupByDate = _a.groupByDate,\n          getGroupOrientation = _a.groupOrientation,\n          groups = _a.groups;\n      var groupOrientation = getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name);\n      return groupOrientation === HORIZONTAL_GROUP_ORIENTATION ? createElement(HorizontalLayout, {\n        rowComponent: rowComponent,\n        cellComponent: cellComponent,\n        groups: groups,\n        colSpan: viewCellsData[0].length,\n        cellStyle: {\n          left: scrollingStrategy.fixedLeftWidth ? scrollingStrategy.fixedLeftWidth : (currentView === null || currentView === void 0 ? void 0 : currentView.type) === VIEW_TYPES.MONTH ? HORIZONTAL_VIEW_LEFT_OFFSET : VERTICAL_VIEW_LEFT_OFFSET\n        },\n        showHeaderForEveryDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView && currentView.name)\n      }) : createElement(VerticalLayout, {\n        rowComponent: rowComponent,\n        cellComponent: cellComponent,\n        groups: groups,\n        rowSpan: viewCellsData.length,\n        viewType: currentView === null || currentView === void 0 ? void 0 : currentView.type,\n        cellTextTopOffset: scrollingStrategy === null || scrollingStrategy === void 0 ? void 0 : scrollingStrategy.fixedTopHeight,\n        alignWithAllDayRow: allDayPanelExists\n      });\n    })));\n  };\n\n  GroupingPanelBase.components = {\n    horizontalLayoutComponent: 'HorizontalLayout',\n    verticalLayoutComponent: 'VerticalLayout',\n    rowComponent: 'Row',\n    cellComponent: 'Cell'\n  };\n  return GroupingPanelBase;\n}(PureComponent);\n/** A plugin that renders the grouping panel used to display group names. */\n\n\nvar GroupingPanel = GroupingPanelBase;\nvar pluginDependencies$d = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'DragDropProvider',\n  optional: true\n}, {\n  name: 'Appointments',\n  optional: true\n}];\n\nvar CurrentTimeIndicatorBase = function (_a) {\n  var indicatorComponent = _a.indicatorComponent,\n      shadePreviousAppointments = _a.shadePreviousAppointments,\n      shadePreviousCells = _a.shadePreviousCells,\n      updateInterval = _a.updateInterval;\n\n  var _b = __read(useState(Date.now), 2),\n      currentTime = _b[0],\n      setCurrentTime = _b[1];\n\n  useEffect(function () {\n    var tick = function () {\n      return setCurrentTime(Date.now());\n    };\n\n    var intervalId = updateInterval ? window.setInterval(tick, updateInterval) : undefined;\n    return function () {\n      return window.clearInterval(intervalId);\n    };\n  }, [updateInterval]);\n  return createElement(Plugin, {\n    name: \"CurrentTimeIndicator\",\n    dependencies: pluginDependencies$d\n  }, createElement(Template, {\n    name: \"cell\",\n    predicate: function (_a) {\n      var otherMonth = _a.otherMonth;\n      return !isMonthCell(otherMonth);\n    }\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        currentTimeIndicatorPosition: getCurrentTimeIndicatorTop(params, currentTime),\n        currentTimeIndicatorComponent: indicatorComponent\n      })\n    });\n  }), createElement(Template, {\n    name: \"cell\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isCellShaded(params, currentTime, shadePreviousCells)\n      })\n    });\n  }), createElement(Template, {\n    name: \"appointmentContent\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isShadedAppointment(params, currentTime, shadePreviousAppointments)\n      })\n    });\n  }), createElement(Template, {\n    name: \"draftAppointment\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isShadedAppointment(params, currentTime, shadePreviousAppointments)\n      })\n    });\n  }));\n};\n\nCurrentTimeIndicatorBase.defaultProps = {\n  updateInterval: 60000,\n  shadePreviousCells: false,\n  shadePreviousAppointments: false\n};\nCurrentTimeIndicatorBase.components = {\n  indicatorComponent: 'Indicator'\n}; // tslint:disable-next-line: max-line-length\n\n/** A plugin that renders the current time indicator and the shading that covers appointments and timetable cells up to the current time. */\n\nvar CurrentTimeIndicator = CurrentTimeIndicatorBase;\nvar pluginDependencies$e = [{\n  name: 'Resources'\n}, {\n  name: 'GroupingState'\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}];\n\nvar getViewCellsDataComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData,\n      groups = _a.groups,\n      resourcesToGroupBy = _a.resourcesToGroupBy,\n      groupByDate = _a.groupByDate,\n      currentView = _a.currentView,\n      groupOrientation = _a.groupOrientation;\n  return expandViewCellsDataWithGroups(viewCellsData, groups, resourcesToGroupBy, groupByDate(currentView.name), groupOrientation(currentView.name));\n};\n\nvar getAllDayCellsDataComputed = function (_a) {\n  var allDayCellsData = _a.allDayCellsData,\n      groups = _a.groups,\n      resourcesToGroupBy = _a.resourcesToGroupBy,\n      groupByDate = _a.groupByDate,\n      currentView = _a.currentView,\n      groupOrientation = _a.groupOrientation;\n  return allDayCellsData && expandViewCellsDataWithGroups(allDayCellsData, groups, resourcesToGroupBy, groupByDate(currentView.name), groupOrientation(currentView.name));\n};\n\nvar getGroupsComputed = function (_a) {\n  var resourcesToGroupBy = _a.resourcesToGroupBy;\n  return getGroupsFromResources(resourcesToGroupBy);\n};\n\nvar getResourcesToGroupByComputed = function (_a) {\n  var resources = _a.resources,\n      grouping = _a.grouping;\n  return sortFilteredResources(filterResourcesByGrouping(resources, grouping), grouping);\n};\n\nvar getGroupingComputed = function (_a) {\n  var grouping = _a.grouping,\n      resources = _a.resources;\n  return updateGroupingWithMainResource(grouping, resources);\n};\n\nvar getTimeTableAppointmentsComputed = function (_a) {\n  var timeTableAppointments = _a.timeTableAppointments,\n      grouping = _a.grouping,\n      resourcesToGroupBy = _a.resourcesToGroupBy,\n      groups = _a.groups,\n      groupByDate = _a.groupByDate,\n      currentView = _a.currentView,\n      excludedDays = _a.excludedDays;\n  return timeTableAppointments && expandGroups(timeTableAppointments, grouping, resourcesToGroupBy, groups, excludedDays, groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name) && (currentView === null || currentView === void 0 ? void 0 : currentView.type) === VIEW_TYPES.MONTH);\n};\n\nvar getAllDayAppointmentsComputed = function (_a) {\n  var allDayAppointments = _a.allDayAppointments,\n      grouping = _a.grouping,\n      resourcesToGroupBy = _a.resourcesToGroupBy,\n      groups = _a.groups,\n      groupByDate = _a.groupByDate,\n      currentView = _a.currentView,\n      excludedDays = _a.excludedDays;\n  return allDayAppointments && expandGroups(allDayAppointments, grouping, resourcesToGroupBy, groups, excludedDays, groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name));\n};\n\nvar getGroupByDateComputed = function (_a) {\n  var currentView = _a.currentView,\n      groupByDate = _a.groupByDate,\n      groupOrientation = _a.groupOrientation;\n  return groupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) === VERTICAL_GROUP_ORIENTATION ? function () {\n    return false;\n  } : groupByDate;\n};\n\nvar getTimeTableElementsMetaComputed = function (_a) {\n  var timeTableElementsMeta = _a.timeTableElementsMeta,\n      groupOrientation = _a.groupOrientation,\n      groups = _a.groups,\n      allDayPanelExists = _a.allDayPanelExists,\n      viewCellsData = _a.viewCellsData,\n      currentView = _a.currentView;\n  return updateTimeTableCellElementsMeta(timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView);\n};\n\nvar getAllDayElementsMetaComputed = function (_a) {\n  var allDayElementsMeta = _a.allDayElementsMeta,\n      timeTableElementsMeta = _a.timeTableElementsMeta,\n      groupOrientation = _a.groupOrientation,\n      groups = _a.groups,\n      allDayPanelExists = _a.allDayPanelExists,\n      viewCellsData = _a.viewCellsData,\n      currentView = _a.currentView;\n  return updateAllDayCellElementsMeta(allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView);\n};\n\nvar getTimeCellsDataComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData,\n      timeCellsData = _a.timeCellsData,\n      currentView = _a.currentView,\n      groups = _a.groups,\n      resourcesToGroupBy = _a.resourcesToGroupBy,\n      groupOrientation = _a.groupOrientation;\n  return timeCellsData && updateTimeCellsData(viewCellsData, timeCellsData, groups, resourcesToGroupBy, groupOrientation(currentView.name));\n};\n\nvar IntegratedGroupingBase = memo(function () {\n  return createElement(Plugin, {\n    name: \"IntegratedGrouping\",\n    dependencies: pluginDependencies$e\n  }, createElement(Getter, {\n    name: \"groupByDate\",\n    computed: getGroupByDateComputed\n  }), createElement(Getter, {\n    name: \"grouping\",\n    computed: getGroupingComputed\n  }), createElement(Getter, {\n    name: \"resourcesToGroupBy\",\n    computed: getResourcesToGroupByComputed\n  }), createElement(Getter, {\n    name: \"groups\",\n    computed: getGroupsComputed\n  }), createElement(Getter, {\n    name: \"viewCellsData\",\n    computed: getViewCellsDataComputed\n  }), createElement(Getter, {\n    name: \"allDayCellsData\",\n    computed: getAllDayCellsDataComputed\n  }), createElement(Getter, {\n    name: \"timeCellsData\",\n    computed: getTimeCellsDataComputed\n  }), createElement(Getter, {\n    name: \"timeTableAppointments\",\n    computed: getTimeTableAppointmentsComputed\n  }), createElement(Getter, {\n    name: \"allDayAppointments\",\n    computed: getAllDayAppointmentsComputed\n  }), createElement(Getter, {\n    name: \"allDayElementsMeta\",\n    computed: getAllDayElementsMetaComputed\n  }), createElement(Getter, {\n    name: \"timeTableElementsMeta\",\n    computed: getTimeTableElementsMetaComputed\n  }));\n});\n/** A plugin that implements grouping. */\n\nvar IntegratedGrouping = IntegratedGroupingBase;\nexport { AllDayPanel, AppointmentForm, AppointmentTooltip, Appointments, ConfirmationDialog, CurrentTimeIndicator, DateNavigator, DayView, DragDropProvider, EditRecurrenceMenu, EditingState, GroupingPanel, GroupingState, IntegratedEditing, IntegratedGrouping, MonthView, Resources, Scheduler, TodayButton, Toolbar, ViewState, ViewSwitcher, WeekView };","map":{"version":3,"mappings":"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","names":["__extends","_this","memoize","locale","SchedulerCoreBase","props","data","Root","height","firstDayOfWeek","React.createElement","Plugin","name","Getter","value","appointments","formatDateTimeGetter","Template","TemplatePlaceholder","React.PureComponent","SchedulerCore","SchedulerBase","_a","rootComponent","children","PluginHost","defaultProps","Scheduler","CellPlaceholder","params","TimeTableAppointmentLayer","startViewDateBaseComputed","viewCellsData","endViewDateBaseComputed","TimeTablePlaceholder","DayScalePlaceholder","DayScaleEmptyCellPlaceholder","GroupingPanelPlaceholder","timeTableElementsMeta","scrollingStrategy","topBoundary","bottomBoundary","leftBoundary","rightBoundary","changeVerticalScroll","changeHorizontalScroll","previousTimeTableCell","timeTableLayoutKey","viewName","getters","intervalCount","cellDuration","excludedDays","viewDisplayName","availableViews","type","currentView","displayName","computed","endViewDate","startViewDate","startDayHour","endDayHour","viewCellsDataBaseComputed","calculateAppointmentsIntervals","timeTableAppointments","cellElementsMeta","setState","BasicViewBase","state","timeTableCellComponent","Math","random","viewCellsDataComputed","dayScaleCellComponent","dayScaleRowComponent","DayScale","TimeTableCell","TimeTableLayout","timeTableRowComponent","AppointmentLayer","DayScaleEmptyCell","layoutProps","Layout","availableViewsComputed","currentViewComputed","intervalCountComputed","excludedDaysComputed","startViewDateComputed","endViewDateComputed","cellDurationComputed","timeTableElementsMetaComputed","scrollingStrategyComputed","timeTableAppointmentsComputed","TemplateConnector","groupOrientation","groups","isVerticalGrouping","VERTICAL_GROUP_ORIENTATION","__assign","forwardedRef","dayScaleComponent","timeTableComponent","setScrollingStrategy","groupingPanelComponent","undefined","groupingPanelSize","length","dayScaleEmptyCellComponent","formatDate","groupByDate","groupByDateEnabled","isHorizontalGrouping","HORIZONTAL_GROUP_ORIENTATION","cellComponent","rowComponent","cellsData","groupedByDate","setCellElementsMeta","updateCellElementsMeta","key","BasicView","calculateAppointmentsIntervalsBaseComputed","timeCellsDataComputed","Date","now","TimeScalePlaceholder","timeCellsData","VericalViewBase","layoutComponent","TimeScale","TimeScaleLabel","timeScaleTickCellComponent","timeScaleTicksRowComponent","dayScaleLayoutComponent","timeTableLayoutComponent","appointmentLayerComponent","timeScaleComponent","getGroupOrientation","labelComponent","tickCellComponent","getTimeTableHeight","VerticalView","currentDate","viewCellsDataCore","DayViewBase","timeScaleLayoutComponent","timeScaleLabelComponent","VIEW_TYPES","DAY","layoutContainer","timeTableContainerComponent","DayView","DAYS_IN_WEEK","WeekViewBase","WEEK","layoutContainerComponent","WeekView","MonthViewBase","MONTH","MonthView","ToolbarBase","FlexibleSpaceComponent","flexibleSpaceComponent","Toolbar","pluginDependencies","navigate","action","direction","nextDate","amount","step","visible","target","prevState","changeCurrentDate","navigateAction","DateNavigatorBase","Overlay","OpenButton","NavigationButton","Calendar","CalendarRow","CalendarCell","CalendarHeaderRow","CalendarHeaderCell","CalendarText","CalendarNavigationButton","CalendarNavigator","dependencies","_b","calendarDateChanged","handleHide","navigatorText","viewBoundText","React.Fragment","navigationButtonComponent","openButtonComponent","rootRef","setRootRef","onVisibilityToggle","handleVisibilityToggle","onNavigate","onHide","selectedDate","getCells","monthCellsData","textComponent","headerRowComponent","headerCellComponent","navigatorComponent","onSelectedDateChange","overlayComponent","calendarComponent","calendarRowComponent","calendarCellComponent","calendarHeaderRowComponent","calendarHeaderCellComponent","calendarTextComponent","calendarNavigatorComponent","calendarNavigationButtonComponent","DateNavigator","ViewSwitcherBase","Switcher","switcherComponent","setCurrentViewName","onChange","ViewSwitcher","AppointmentPlaceholder","renderAppointments","map","rectType","fromPrev","toNext","durationType","resources","geometry","dataItem","style","getAppointmentStyle","optional","placeAppointmentsNextToEachOther","isTimeTableElementsMetaActual","groupCount","getGroupsLastRow","appointmentType","growDirection","VERTICAL_TYPE","multiline","getRects","getVerticalRectByAppointmentData","HORIZONTAL_TYPE","getHorizontalRectByAppointmentData","calculateRectByDateAndGroupIntervals","allDayAppointments","allDayElementsMeta","isAllDayElementsMetaActual","AppointmentsBase","SplitIndicator","Appointment","AppointmentContent","Container","recurringIconComponent","updateTimeTableAppointments","updateAllDayAppointments","slice","onDoubleClick","restParams","createClickHandlers","onClick","position","POSITION_START","POSITION_END","splitIndicatorComponent","containerComponent","appointmentComponent","appointmentContentComponent","Appointments","isMonthView","defaultMessages","allDay","AllDayAppointmentLayerPlaceholder","AllDayPanelPlaceholder","AllDayTitlePlaceholder","elementsMeta","previousCell","layoutKey","allDayLeftBound","moment","hours","minutes","toDate","allDayRightBound","calculateAllDayDateIntervals","messages","allDayPanelDefaultMessages","AllDayPanelBase","Cell","TitleCell","getMessage","getMessageFormatter","allDayCellsDataComputed","allDayPanelExistsComputed","allDayAppointmentsComputed","allDayCellsData","allDayCellComponent","allDayRowComponent","allDayTitleComponent","showAllDayTitle","titleCellComponent","AllDayPanel","_super","currentViewName","defaultCurrentDate","defaultCurrentViewName","stateHelper","createStateHelper","onCurrentDateChange","onCurrentViewNameChange","applyFieldReducer","bind","ViewStateBase","nextProps","stateCurrentViewName","getCurrentViewComputed","Action","ViewState","editingAppointment","defaultEditingAppointment","addedAppointment","defaultAddedAppointment","appointmentChanges","defaultAppointmentChanges","onEditingAppointmentChange","onAddedAppointmentChange","onAppointmentChangesChange","addAppointment","changeAddedAppointment","changeAppointment","cancelAddedAppointment","startEditAppointment","stopEditAppointment","cancelChangedAppointment","cancelChanges","commitChangedAppointment","RECURRENCE_EDIT_SCOPE","CURRENT","onCommitChanges","preCommitChanges","changes","rRule","changed","changedAppointmentById","id","commitAddedAppointment","stateAddedAppointment","added","commitDeletedAppointment","deletedAppointmentData","deleted","EditingStateBase","_c","preCommitChangesBase","EditingState","commandButtonIds","open","OPEN_COMMAND_BUTTON","close","CLOSE_COMMAND_BUTTON","delete","DELETE_COMMAND_BUTTON","appointmentMeta","onVisibilityChange","onAppointmentMetaChange","toggleVisibility","isOpen","setAppointmentMeta","onAppointmentClick","AppointmentTooltipBase","showOpenButton","showDeleteButton","showCloseButton","headerComponent","contentComponent","commandButtonComponent","TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY","plainResources","finishDeleteAppointment","openDeleteConfirmationDialog","onDeleteButtonClick","hideActionName","appointmentData","appointmentResources","getAppointmentResources","AppointmentTooltip","addDoubleClickToCell","title","startDate","endDate","groupingInfo","openFormHandler","resourceFields","reduce","acc","currentGroup","fieldName","validResourceFields","checkMultipleResourceFields","newAppointmentData","callActionIfExists","allDayLabel","titleLabel","commitCommand","detailsLabel","moreInformationLabel","repeatLabel","notesLabel","never","daily","weekly","monthly","yearly","repeatEveryLabel","daysLabel","endRepeatLabel","onLabel","afterLabel","occurrencesLabel","weeksOnLabel","monthsLabel","ofEveryMonthLabel","theLabel","firstLabel","secondLabel","thirdLabel","fourthLabel","lastLabel","yearsLabel","ofLabel","everyLabel","CommandLayoutPlaceholder","BasicLayoutPlaceholder","RecurrenceLayoutPlaceholder","prepareChanges","isNew","changedAppointment","isFormEdited","Object","getOwnPropertyNames","isFormFullSize","isFormVisible","changedAppointmentRRule","previousAppointmentRRule","React.createRef","finishCommitAppointment","previousAppointment","openCancelConfirmationDialog","keys","TOGGLE_APPOINTMENT_FORM_VISIBILITY","change","menuMessages","onAppointmentDataChange","setAppointmentData","AppointmentFormBase","CommandLayout","BasicLayout","RecurrenceLayout","textEditorComponent","dateEditorComponent","booleanEditorComponent","selectComponent","radioGroupComponent","weeklyRecurrenceSelectorComponent","resourceEditorComponent","readOnly","fullSize","onHideAction","ref","container","basicLayoutComponent","commandLayoutComponent","recurrenceLayoutComponent","isRecurrence","onCommitButtonClick","commitChanges","onCancelButtonClick","deleteAppointment","disableSaveButton","hideDeleteButton","onFieldChange","changeAppointmentField","isRecurrenceLayoutVisible","correctedAppointment","onOpenButtonClick","isAllDayCell","AppointmentForm","renderAppointmentItems","items","Wrapper","draftData","draftAppointment","index","toString","startTime","endTime","appointmentGroupingInfo","payload","isOutside","allowDrag","allowResize","appointmentContentTemplateKey","appointmentTopTemplateKey","appointmentBottomTemplateKey","resetCache","DragDropProviderBase","isAllowDragSame","isAllowResizeSame","actions","handlePayloadChange","args","scrollSpeed","calculateBoundaries","timeTableDraftAppointments","allDayDraftAppointments","offsetTimeTop","appointmentStartTime","appointmentEndTime","clientOffset","grouping","autoScroll","tableCellElementsMeta","allDayCellsElementsMeta","getCellRects","timeTableIndex","cellIndex","allDayIndex","targetData","cellData","targetType","cellType","insidePart","calculateInsidePart","y","cellDurationMinutes","intervalDuration","calculateAppointmentTimeBoundaries","appointmentGroups","calculateAppointmentGroups","appointmentDragged","draftAppointments","start","end","calculateDraftAppointments","applyChanges","DraftAppointment","SourceAppointment","Resize","calculateBoundariesByMove","calculateNextBoundaries","DragDropProviderCore","onPayloadChange","DropTarget","onOver","onEnter","onDrop","handleDrop","onLeave","handleLeave","PlaceholderWithRef","predicate","DragSource","draggable","RESIZE_TOP","RESIZE_BOTTOM","draftAppointmentComponent","sourceAppointmentComponent","resizeComponent","SCROLL_SPEED_PX","DragDropProvider","today","TodayButtonBase","Button","getMessagesFormatter","setCurrentDate","buttonComponent","TodayButton","defaultAvailableOperations","CURRENT_AND_FOLLOWING","ALL","editAction","deleteAction","closeMenu","cancelAction","stopEditAction","menuAvailableOperations","EditRecurrenceMenuBase","availableOperations","modalContainer","commit","cancelEditing","isDeleting","handleClose","EditRecurrenceMenu","IntegratedEditingBase","totalCount","IntegratedEditing","addResourcesToTimeTableAppointments","addResourcesToAppointments","addResourcesToAllDayAppointments","ResourcesBase","React.memo","mainResourceName","palette","convertResources","validateResources","Resources","discardButton","deleteButton","cancelButton","confirmDeleteMessage","confirmCancelMessage","ACTION_TYPES","CANCEL","DELETE","ConfirmationDialogBase","ignoreDelete","ignoreCancel","React.useRef","React.useState","setVisible","actionType","setActionType","setHideActionName","React.useCallback","confirmCancelChanges","hideAction","confirmDelete","confirmAction","isNewAppointment","hideEditor","handleConfirm","handleCancel","components","ConfirmationDialog","expandedGroups","defaultExpandedGroups","onExpandedGroupsChange","toggleGroupExpanded","applyReducer","toggleExpandedGroups","GroupingStateBase","GroupingState","GroupingPanelBase","HorizontalLayout","VerticalLayout","allDayPanelExists","colSpan","cellStyle","left","fixedLeftWidth","HORIZONTAL_VIEW_LEFT_OFFSET","VERTICAL_VIEW_LEFT_OFFSET","showHeaderForEveryDate","rowSpan","viewType","cellTextTopOffset","fixedTopHeight","alignWithAllDayRow","horizontalLayoutComponent","verticalLayoutComponent","GroupingPanel","CurrentTimeIndicatorBase","indicatorComponent","shadePreviousAppointments","shadePreviousCells","updateInterval","currentTime","setCurrentTime","React.useEffect","tick","intervalId","window","setInterval","clearInterval","otherMonth","isMonthCell","currentTimeIndicatorPosition","getCurrentTimeIndicatorTop","currentTimeIndicatorComponent","isShaded","isCellShaded","isShadedAppointment","CurrentTimeIndicator","getViewCellsDataComputed","resourcesToGroupBy","getAllDayCellsDataComputed","expandViewCellsDataWithGroups","getGroupsComputed","getResourcesToGroupByComputed","filterResourcesByGrouping","getGroupingComputed","getTimeTableAppointmentsComputed","expandGroups","getAllDayAppointmentsComputed","getGroupByDateComputed","getTimeTableElementsMetaComputed","getAllDayElementsMetaComputed","getTimeCellsDataComputed","updateTimeCellsData","IntegratedGroupingBase","IntegratedGrouping"],"sources":["/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/scheduler-core.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/scheduler.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/basic-view.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/vertical-view.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/day-view.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/week-view.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/month-view.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/toolbar.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/date-navigator.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/view-switcher.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/appointments.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/all-day-panel.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/view-state.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/editing-state.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/appointment-tooltip.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/appointment-form.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/drag-drop-provider.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/today-button.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/edit-recurrence-menu.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/integrated-editing.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/resources.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/confirmation-dialog.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/grouping-state.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/grouping-panel.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/current-time-indicator.tsx","/Users/gabikourieh/Desktop/ERP-Appointments-Barbershop-React-Spring/frontend/node_modules/@devexpress/dx-react-scheduler/src/plugins/integrated-grouping.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { appointments, formatDateTimeGetter } from '@devexpress/dx-scheduler-core';\nimport { SchedulerProps } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass SchedulerCoreBase extends React.PureComponent<SchedulerProps> {\n  formatDateTimeGetter = memoize(locale => formatDateTimeGetter(locale));\n\n  render() {\n    const {\n      data,\n      rootComponent: Root,\n      locale,\n      height,\n      firstDayOfWeek,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"SchedulerCore\"\n      >\n        <Getter name=\"appointments\" value={appointments(data)} />\n        <Getter name=\"formatDate\" value={this.formatDateTimeGetter(locale)} />\n        <Getter name=\"firstDayOfWeek\" value={firstDayOfWeek} />\n        <Getter name=\"locale\" value={locale} />\n        <Template name=\"root\">\n          <Root height={height}>\n            <TemplatePlaceholder name=\"schedulerRoot\" />\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Scheduler's functionality\n * (data visualization and processing) is implemented in several plugins\n * specified as child components.\n * */\nexport const SchedulerCore: React.ComponentType<SchedulerProps> = SchedulerCoreBase;\n","import * as React from 'react';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { SchedulerCore } from './plugins/scheduler-core';\nimport { SchedulerProps } from './types';\n\nconst SchedulerBase: React.SFC<SchedulerProps> = ({\n  data,\n  rootComponent,\n  children,\n  locale,\n  height,\n  firstDayOfWeek,\n}) => (\n  <PluginHost>\n    <SchedulerCore\n      data={data}\n      rootComponent={rootComponent}\n      locale={locale}\n      height={height}\n      firstDayOfWeek={firstDayOfWeek}\n    />\n    {children}\n  </PluginHost>\n);\n\nSchedulerBase.defaultProps = {\n  data: [],\n  locale: 'en-US',\n  height: 'auto',\n  firstDayOfWeek: 0,\n};\n\n// tslint:disable: max-line-length\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Schedulerâ€™s functionality\n * (data visualization and processing) is implemented in several plugins specified as child components.\n * */\nexport const Scheduler: React.ComponentType<SchedulerProps> = SchedulerBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplateConnector,\n  TemplatePlaceholder,\n  ComputedFn,\n} from '@devexpress/dx-react-core';\nimport {\n  computed,\n  startViewDate as startViewDateCore,\n  endViewDate as endViewDateCore,\n  availableViews as availableViewsCore,\n  HORIZONTAL_GROUP_ORIENTATION,\n  VERTICAL_GROUP_ORIENTATION,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\nimport { BasicViewProps, BasicViewState, ScrollingStrategy } from '../types';\n\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"cell\" params={params} />;\nconst TimeTableAppointmentLayer = () => <TemplatePlaceholder name=\"timeTableAppointmentLayer\" />;\n\nconst startViewDateBaseComputed = ({ viewCellsData }) => startViewDateCore(viewCellsData);\nconst endViewDateBaseComputed = ({ viewCellsData }) => endViewDateCore(viewCellsData);\n\nconst TimeTablePlaceholder = () => <TemplatePlaceholder name=\"timeTable\" />;\nconst DayScalePlaceholder = () => <TemplatePlaceholder name=\"dayScale\" />;\nconst DayScaleEmptyCellPlaceholder = () => <TemplatePlaceholder name=\"dayScaleEmptyCell\" />;\n\nconst GroupingPanelPlaceholder = () => <TemplatePlaceholder name=\"groupingPanel\" />;\n\nclass BasicViewBase extends React.PureComponent<BasicViewProps, BasicViewState> {\n  state = {\n    timeTableElementsMeta: {},\n    scrollingStrategy: {\n      topBoundary: 0,\n      bottomBoundary: 0,\n      leftBoundary: 0,\n      rightBoundary: 0,\n      changeVerticalScroll: () => undefined,\n      changeHorizontalScroll: () => undefined,\n    },\n    previousTimeTableCell: null,\n    // The key has to be generated every time the TimeTableCell is updated to rerender TimeTable\n    // and, consequently, update timeTableElementsMeta\n    timeTableLayoutKey: 0,\n  };\n\n  static getDerivedStateFromProps(\n    props: BasicViewProps, state: BasicViewState,\n  ): BasicViewState | null {\n\n    if (props.timeTableCellComponent !== state.previousTimeTableCell) {\n      return {\n        ...state,\n        previousTimeTableCell: props.timeTableCellComponent,\n        timeTableLayoutKey: Math.random(),\n      };\n    }\n    return null;\n  }\n\n  scrollingStrategyComputed = memoize((viewName, scrollingStrategy) => getters =>\n    computed(getters, viewName!, () => scrollingStrategy, getters.scrollingStrategy));\n\n  timeTableElementsMetaComputed = memoize((viewName, timeTableElementsMeta) => getters =>\n    computed(getters, viewName!, () => timeTableElementsMeta, getters.timeTableElementsMeta));\n\n  intervalCountComputed = memoize((viewName, intervalCount) => getters =>\n    computed(getters, viewName!, () => intervalCount, getters.intervalCount));\n\n  cellDurationComputed = memoize((viewName, cellDuration) => getters =>\n    computed(getters, viewName, () => cellDuration, getters.cellDuration));\n\n  excludedDaysComputed = memoize((viewName, excludedDays) => getters => computed(\n    getters, viewName!, () => excludedDays, getters.excludedDays,\n  ));\n\n  availableViewsComputed = memoize((viewName, viewDisplayName) => ({ availableViews }) =>\n    availableViewsCore(availableViews, viewName!, viewDisplayName));\n\n  currentViewComputed = memoize((viewName, viewDisplayName, type) => ({ currentView }) => (\n    currentView && currentView.name !== viewName\n      ? currentView\n      : { name: viewName, type, displayName: viewDisplayName }\n  ));\n\n  endViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, endViewDateBaseComputed, getters.endViewDate,\n    );\n  }\n\n  startViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, startViewDateBaseComputed, getters.startViewDate,\n    );\n  }\n\n  viewCellsDataComputed = memoize((\n    viewName, cellDuration, startDayHour, endDayHour, viewCellsDataBaseComputed,\n  ) => getters => computed(\n    getters,\n    viewName,\n    viewCellsDataBaseComputed(cellDuration, startDayHour, endDayHour),\n    getters.viewCellsData,\n  ));\n\n  timeTableAppointmentsComputed = memoize((\n    viewName, cellDuration, calculateAppointmentsIntervals,\n  ) => getters => computed(\n      getters,\n      viewName,\n      calculateAppointmentsIntervals(cellDuration),\n      getters.timeTableAppointments,\n    ));\n\n  updateCellElementsMeta = memoize((cellElementsMeta) => {\n    this.setState({ timeTableElementsMeta: cellElementsMeta });\n  });\n\n  setScrollingStrategy = (scrollingStrategy: ScrollingStrategy) => {\n    this.setState({ scrollingStrategy });\n  }\n\n  render() {\n    const {\n      name: viewName,\n      intervalCount,\n      displayName,\n      type,\n      excludedDays,\n      cellDuration,\n      startDayHour,\n      endDayHour,\n      viewCellsDataComputed,\n      calculateAppointmentsIntervals,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      dayScaleLayoutComponent: DayScale,\n      timeTableCellComponent: TimeTableCell,\n      timeTableLayoutComponent: TimeTableLayout,\n      timeTableRowComponent,\n      appointmentLayerComponent: AppointmentLayer,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      layoutProps,\n      layoutComponent: Layout,\n    } = this.props;\n    const { timeTableElementsMeta, scrollingStrategy, timeTableLayoutKey } = this.state;\n    const viewDisplayName = displayName || viewName;\n\n    return (\n      <Plugin name=\"basicView\">\n        <Getter\n          name=\"availableViews\"\n          computed={this.availableViewsComputed(viewName, viewDisplayName)}\n        />\n        <Getter\n          name=\"currentView\"\n          computed={this.currentViewComputed(viewName, viewDisplayName, type)}\n        />\n        <Getter\n          name=\"intervalCount\"\n          computed={this.intervalCountComputed(viewName, intervalCount)}\n        />\n        <Getter name=\"excludedDays\" computed={this.excludedDaysComputed(viewName, excludedDays)} />\n        <Getter\n          name=\"viewCellsData\"\n          computed={this.viewCellsDataComputed(\n            viewName, cellDuration, startDayHour, endDayHour, viewCellsDataComputed,\n          )}\n        />\n        <Getter name=\"startViewDate\" computed={this.startViewDateComputed} />\n        <Getter name=\"endViewDate\" computed={this.endViewDateComputed} />\n        <Getter\n          name=\"cellDuration\"\n          computed={this.cellDurationComputed(viewName, cellDuration)}\n        />\n\n        <Getter\n          name=\"timeTableElementsMeta\"\n          computed={this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)}\n        />\n        <Getter\n          name=\"scrollingStrategy\"\n          computed={this.scrollingStrategyComputed(viewName, scrollingStrategy)}\n        />\n\n        <Getter\n          name=\"timeTableAppointments\"\n          computed={this.timeTableAppointmentsComputed(\n            viewName, cellDuration, calculateAppointmentsIntervals,\n          )}\n        />\n\n        <Template name=\"body\">\n          { (params: any) =>\n            <TemplateConnector>\n              {({ currentView, groupOrientation, groups }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder />;\n                const isVerticalGrouping = groupOrientation?.(viewName)\n                  === VERTICAL_GROUP_ORIENTATION;\n                return (\n                  <Layout\n                    forwardedRef={params?.forwardedRef}\n                    dayScaleComponent={DayScalePlaceholder}\n                    timeTableComponent={TimeTablePlaceholder}\n                    setScrollingStrategy={this.setScrollingStrategy}\n                    groupingPanelComponent={\n                      isVerticalGrouping ? GroupingPanelPlaceholder : undefined\n                    }\n                    groupingPanelSize={isVerticalGrouping ? groups?.length : 0}\n                    dayScaleEmptyCellComponent={DayScaleEmptyCellPlaceholder}\n                    {...layoutProps}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          }\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate, groupByDate, groupOrientation }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              const groupByDateEnabled = groupByDate?.(viewName);\n              const isHorizontalGrouping = groupOrientation?.(viewName)\n                === HORIZONTAL_GROUP_ORIENTATION;\n              return (\n                <DayScale\n                  cellComponent={dayScaleCellComponent}\n                  rowComponent={dayScaleRowComponent}\n                  groupingPanelComponent={\n                    isHorizontalGrouping ? GroupingPanelPlaceholder : undefined\n                  }\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                  groupedByDate={groupByDateEnabled}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"cell\">\n          {params => (\n            <TemplateConnector>\n              {({ currentView }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder params={params} />;\n                return (\n                  <TimeTableCell {...params} />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"timeTable\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ formatDate, currentView, viewCellsData }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder />;\n                return (\n                  <>\n                    <TimeTableLayout\n                      cellsData={viewCellsData}\n                      rowComponent={timeTableRowComponent}\n                      cellComponent={CellPlaceholder}\n                      formatDate={formatDate}\n                      setCellElementsMeta={this.updateCellElementsMeta}\n                      key={timeTableLayoutKey}\n                      {...params}\n                    />\n                    <AppointmentLayer>\n                      <TimeTableAppointmentLayer />\n                    </AppointmentLayer>\n                  </>\n                );\n              }}\n          </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName || !DayScaleEmptyCell) {\n                return <TemplatePlaceholder />;\n              }\n              return (\n                <DayScaleEmptyCell />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\nexport const BasicView: React.ComponentType<BasicViewProps> = BasicViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplateConnector,\n  TemplatePlaceholder,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport {\n  calculateWeekDateIntervals,\n  getTimeTableHeight,\n  timeCellsData as timeCellsDataCore,\n  computed,\n} from '@devexpress/dx-scheduler-core';\nimport { BasicView } from './basic-view';\nimport { CommonVerticalViewProps } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nconst calculateAppointmentsIntervalsBaseComputed = cellDuration => ({\n  appointments, startViewDate, endViewDate, excludedDays,\n}) => calculateWeekDateIntervals(\n  appointments, startViewDate, endViewDate, excludedDays, cellDuration,\n);\nconst timeCellsDataComputed = (startDayHour, endDayHour) => ({\n  viewCellsData, cellDuration,\n}) => timeCellsDataCore(viewCellsData, startDayHour, endDayHour, cellDuration, Date.now());\n\nconst TimeScalePlaceholder = () => <TemplatePlaceholder name=\"timeScale\" />;\n\nclass VericalViewBase extends React.PureComponent<CommonVerticalViewProps> {\n  timeCellsDataComputed = memoize((viewName, startDayHour, endDayHour) => getters => computed(\n    getters,\n    viewName,\n    timeCellsDataComputed(startDayHour, endDayHour),\n    getters.timeCellsData,\n  ));\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent: TimeScale,\n      timeScaleLabelComponent: TimeScaleLabel,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      cellDuration,\n      excludedDays,\n      name: viewName,\n      appointmentLayerComponent,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n      viewCellsDataComputed,\n      type,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"WeekView\"\n      >\n        <BasicView\n          viewCellsDataComputed={viewCellsDataComputed}\n          type={type}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          excludedDays={excludedDays}\n          calculateAppointmentsIntervals={calculateAppointmentsIntervalsBaseComputed}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          layoutProps={{\n            timeScaleComponent: TimeScalePlaceholder,\n          }}\n        />\n\n        <Getter\n          name=\"timeCellsData\"\n          computed={this.timeCellsDataComputed(viewName, startDayHour, endDayHour)}\n        />\n\n        <Template name=\"timeScale\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({\n                currentView, timeCellsData, groups, formatDate,\n                groupOrientation: getGroupOrientation,\n                timeTableElementsMeta,\n              }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder />;\n                const groupOrientation = getGroupOrientation?.(viewName);\n\n                return (\n                  <TimeScale\n                    labelComponent={TimeScaleLabel}\n                    tickCellComponent={timeScaleTickCellComponent}\n                    rowComponent={timeScaleTicksRowComponent}\n                    cellsData={timeCellsData}\n                    formatDate={formatDate}\n                    groups={groups}\n                    groupOrientation={groupOrientation}\n                    height={getTimeTableHeight(timeTableElementsMeta)}\n                    {...params}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const VerticalView: React.ComponentType<CommonVerticalViewProps> = VericalViewBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  viewCellsData as viewCellsDataCore,\n  VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport { VerticalViewProps } from '../types';\nimport { VerticalView } from './vertical-view';\n\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ currentDate, intervalCount }) => {\n  return viewCellsDataCore(\n    currentDate, undefined,\n    intervalCount, [],\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\n\nclass DayViewBase extends React.PureComponent<VerticalViewProps> {\n  static defaultProps: Partial<VerticalViewProps> = {\n    name: 'Day',\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainer: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      timeScaleLayoutComponent,\n      timeScaleLabelComponent,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      appointmentLayerComponent,\n      cellDuration,\n      name: viewName,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"DayView\"\n      >\n        <VerticalView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.DAY}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          dayScaleEmptyCellComponent={DayScaleEmptyCell}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          timeScaleLayoutComponent={timeScaleLayoutComponent}\n          timeScaleLabelComponent={timeScaleLabelComponent}\n          timeScaleTickCellComponent={timeScaleTickCellComponent}\n          timeScaleTicksRowComponent={timeScaleTicksRowComponent}\n        />\n      </Plugin >\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/*** A plugin that renders Scheduler data for a day. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const DayView: React.ComponentType<VerticalViewProps> = DayViewBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  viewCellsData as viewCellsDataCore,\n  VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport { WeekViewProps } from '../types';\nimport { VerticalView } from './vertical-view';\n\nconst DAYS_IN_WEEK = 7;\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ firstDayOfWeek, intervalCount, excludedDays, currentDate }) => {\n  return viewCellsDataCore(\n    currentDate, firstDayOfWeek,\n    intervalCount! * DAYS_IN_WEEK, excludedDays!,\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\n\nclass WeekViewBase extends React.PureComponent<WeekViewProps> {\n  static defaultProps: Partial<WeekViewProps> = {\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n    excludedDays: [],\n    name: 'Week',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent,\n      timeScaleLabelComponent,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      cellDuration,\n      excludedDays,\n      name: viewName,\n      appointmentLayerComponent,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"WeekView\"\n      >\n        <VerticalView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.WEEK}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          excludedDays={excludedDays}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          timeScaleLayoutComponent={timeScaleLayoutComponent}\n          timeScaleLabelComponent={timeScaleLabelComponent}\n          timeScaleTickCellComponent={timeScaleTickCellComponent}\n          timeScaleTicksRowComponent={timeScaleTicksRowComponent}\n        />\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders the Scheduler's week view. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const WeekView: React.ComponentType<WeekViewProps> = WeekViewBase;\n","import * as React from 'react';\nimport { Plugin, PluginComponents } from '@devexpress/dx-react-core';\nimport { monthCellsData, calculateMonthDateIntervals, VIEW_TYPES } from '@devexpress/dx-scheduler-core';\nimport { BasicView } from './basic-view';\nimport { MonthViewProps } from '../types';\n\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ currentDate, firstDayOfWeek, intervalCount }) => monthCellsData(\n  currentDate, firstDayOfWeek, intervalCount!, Date.now(),\n);\nconst calculateAppointmentsIntervalsBaseComputed = cellDuration => ({\n  appointments, startViewDate, endViewDate, excludedDays,\n}) => calculateMonthDateIntervals(\n  appointments, startViewDate, endViewDate,\n);\n\nclass MonthViewBase extends React.PureComponent<MonthViewProps> {\n  static defaultProps: Partial<MonthViewProps> = {\n    intervalCount: 1,\n    name: 'Month',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      appointmentLayerComponent,\n      name: viewName,\n      intervalCount,\n      displayName,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"MonthView\"\n      >\n        <BasicView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.MONTH}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          calculateAppointmentsIntervals={calculateAppointmentsIntervalsBaseComputed}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n        />\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders Scheduler data for a month. This plugin arranges appointments from left to right.\n * An appointment's size depends on its duration in days.\n * However, it occupies the entire day cell if an appointment lasts only for several hours or minutes.\n * The time scale and all-day panel are not available in this view.\n * */\nexport const MonthView: React.ComponentType<MonthViewProps> = MonthViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ToolbarProps } from '../types';\n\nclass ToolbarBase extends React.PureComponent<ToolbarProps> {\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    flexibleSpaceComponent: 'FlexibleSpace',\n  };\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's toolbar. */\nexport const Toolbar: React.ComponentType<ToolbarProps> = ToolbarBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  monthCellsData,\n  viewBoundText,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\n\nimport { DateNavigatorProps, DateNavigatorState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst navigate = (action, currentView, intervalCount) => (direction, nextDate) => action({\n  direction,\n  nextDate,\n  amount: intervalCount,\n  step: currentView.type,\n});\n\nclass DateNavigatorBase extends React.PureComponent<DateNavigatorProps, DateNavigatorState> {\n  target!: React.ReactInstance;\n\n  state = {\n    visible: false,\n  };\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    overlayComponent: 'Overlay',\n    openButtonComponent: 'OpenButton',\n    navigationButtonComponent: 'NavigationButton',\n    calendarComponent: 'Calendar',\n    calendarRowComponent: 'CalendarRow',\n    calendarCellComponent: 'CalendarCell',\n    calendarHeaderRowComponent: 'CalendarHeaderRow',\n    calendarHeaderCellComponent: 'CalendarHeaderCell',\n    calendarTextComponent: 'CalendarText',\n    calendarNavigatorComponent: 'CalendarNavigator',\n    calendarNavigationButtonComponent: 'CalendarNavigationButton',\n  };\n\n  setRootRef = (target: React.ReactInstance) => {\n    this.target = target;\n  }\n\n  handleVisibilityToggle = () => {\n    this.setState(prevState => ({ visible: !prevState.visible }));\n  }\n\n  handleHide = () => {\n    this.setState({ visible: false });\n  }\n\n  navigateAction = memoize((changeCurrentDate, currentView, intervalCount, navigateAction) =>\n    navigateAction(changeCurrentDate, currentView, intervalCount));\n\n  render() {\n    const {\n      rootComponent: Root,\n      overlayComponent: Overlay,\n      openButtonComponent: OpenButton,\n      navigationButtonComponent: NavigationButton,\n      calendarComponent: Calendar,\n      calendarRowComponent: CalendarRow,\n      calendarCellComponent: CalendarCell,\n      calendarHeaderRowComponent: CalendarHeaderRow,\n      calendarHeaderCellComponent: CalendarHeaderCell,\n      calendarTextComponent: CalendarText,\n      calendarNavigationButtonComponent: CalendarNavigationButton,\n      calendarNavigatorComponent: CalendarNavigator,\n    } = this.props;\n\n    const { visible } = this.state;\n    return (\n      <Plugin\n        name=\"DateNavigator\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              currentDate,\n              startViewDate,\n              endViewDate,\n              firstDayOfWeek,\n              currentView,\n              intervalCount,\n              formatDate,\n            }, {\n              changeCurrentDate,\n            }) => {\n              const navigateAction = this.navigateAction(\n                changeCurrentDate, currentView, intervalCount, navigate,\n              );\n              const calendarDateChanged = (nextDate) => {\n                navigateAction(undefined, nextDate);\n                this.handleHide();\n              };\n              const navigatorText = viewBoundText(\n                startViewDate,\n                endViewDate,\n                currentView.type,\n                currentDate,\n                intervalCount,\n                formatDate,\n              );\n              return (\n                <React.Fragment>\n                  <Root\n                    navigationButtonComponent={NavigationButton}\n                    openButtonComponent={OpenButton}\n                    navigatorText={navigatorText}\n                    rootRef={this.setRootRef}\n                    onVisibilityToggle={this.handleVisibilityToggle}\n                    onNavigate={navigateAction}\n                  />\n                  <Overlay\n                    visible={visible}\n                    target={this.target}\n                    onHide={this.handleHide}\n                  >\n                    <Calendar\n                      selectedDate={currentDate}\n                      firstDayOfWeek={firstDayOfWeek}\n                      getCells={monthCellsData}\n                      textComponent={CalendarText}\n                      navigationButtonComponent={CalendarNavigationButton}\n                      rowComponent={CalendarRow}\n                      cellComponent={CalendarCell}\n                      headerRowComponent={CalendarHeaderRow}\n                      headerCellComponent={CalendarHeaderCell}\n                      navigatorComponent={CalendarNavigator}\n                      onSelectedDateChange={calendarDateChanged}\n                      formatDate={formatDate}\n                    />\n                  </Overlay>\n                </React.Fragment>\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Schedulerâ€™s date navigator. */\nexport const DateNavigator: React.ComponentType<DateNavigatorProps> = DateNavigatorBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ViewSwitcherProps } from '../types/view-switcher';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nclass ViewSwitcherBase extends React.PureComponent<ViewSwitcherProps> {\n  static components: PluginComponents = {\n    switcherComponent: 'Switcher',\n  };\n\n  render() {\n    const { switcherComponent: Switcher } = this.props;\n\n    return (\n      <Plugin\n        name=\"ViewSwitcher\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView,\n              availableViews,\n            }, {\n              setCurrentViewName,\n            }) => (\n              <Switcher\n                currentView={currentView}\n                availableViews={availableViews}\n                onChange={setCurrentViewName}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's view switcher. */\nexport const ViewSwitcher: React.ComponentType<ViewSwitcherProps> = ViewSwitcherBase;\n","import * as React from 'react';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { createClickHandlers, memoize } from '@devexpress/dx-core';\nimport {\n  POSITION_START, POSITION_END, VERTICAL_TYPE,\n  getVerticalRectByAppointmentData, calculateRectByDateAndGroupIntervals,\n  getAppointmentStyle, HORIZONTAL_TYPE, getHorizontalRectByAppointmentData,\n  isAllDayElementsMetaActual, isTimeTableElementsMetaActual,\n  HORIZONTAL_GROUP_ORIENTATION, VIEW_TYPES, getGroupsLastRow, Rect,\n} from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentsProps } from '../types';\n\nconst AppointmentPlaceholder = params => <TemplatePlaceholder name=\"appointment\" params={params} />;\n\nconst renderAppointments = rects => rects.map(({\n  dataItem, type: rectType, fromPrev, toNext,\n  durationType, resources, key, ...geometry\n}) => (\n  <AppointmentPlaceholder\n    key={key}\n    type={rectType}\n    data={dataItem}\n    fromPrev={fromPrev}\n    toNext={toNext}\n    durationType={durationType}\n    resources={resources}\n    style={getAppointmentStyle(geometry as Rect)}\n  />\n));\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n];\n\nclass AppointmentsBase extends React.PureComponent<AppointmentsProps> {\n  static components: PluginComponents = {\n    splitIndicatorComponent: 'SplitIndicator',\n    containerComponent: 'Container',\n    appointmentComponent: 'Appointment',\n    appointmentContentComponent: 'AppointmentContent',\n    recurringIconComponent: 'RecurringIcon',\n  };\n  static defaultProps: Partial<AppointmentsProps> = {\n    placeAppointmentsNextToEachOther: false,\n  };\n\n  updateTimeTableAppointments = memoize((\n    timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n    startViewDate, endViewDate, cellDuration, groups, getGroupOrientation, groupByDate,\n    placeAppointmentsNextToEachOther,\n  ) => {\n    if (!isTimeTableElementsMetaActual(viewCellsData, timeTableElementsMeta)) return null;\n\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n    const groupCount = groups ? getGroupsLastRow(groups).length : 1;\n\n    let appointmentType = { growDirection: VERTICAL_TYPE, multiline: false };\n    let getRects = getVerticalRectByAppointmentData as any;\n    if (currentView.type === VIEW_TYPES.MONTH) {\n      appointmentType = { growDirection: HORIZONTAL_TYPE, multiline: true };\n      getRects = getHorizontalRectByAppointmentData;\n    }\n\n    return renderAppointments(calculateRectByDateAndGroupIntervals(\n      appointmentType, timeTableAppointments, getRects,\n      {\n        startViewDate, endViewDate, cellDuration,\n        viewCellsData, cellElementsMeta: timeTableElementsMeta,\n        placeAppointmentsNextToEachOther,\n      },\n      {\n        groupOrientation,\n        groupedByDate: groupByDate?.(currentView?.name),\n        groupCount,\n      },\n    ));\n  });\n\n  updateAllDayAppointments = memoize((\n    allDayAppointments, viewCellsData, allDayElementsMeta, currentView,\n    startViewDate, endViewDate, groups, getGroupOrientation, groupByDate,\n  ) => {\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n    const groupCount = groups ? getGroupsLastRow(groups).length : 1;\n\n    if (!isAllDayElementsMetaActual(\n      viewCellsData, allDayElementsMeta, groupOrientation, groupCount,\n    )) {\n      return null;\n    }\n\n    return renderAppointments(calculateRectByDateAndGroupIntervals(\n      { growDirection: HORIZONTAL_TYPE,  multiline: false },\n      allDayAppointments,\n      getHorizontalRectByAppointmentData,\n      {\n        startViewDate, endViewDate,\n        viewCellsData, cellElementsMeta: allDayElementsMeta,\n      },\n      {\n        groupOrientation,\n        groupedByDate: groupByDate?.(currentView?.name),\n        groupCount,\n      },\n    ));\n  });\n\n  render() {\n    const {\n      splitIndicatorComponent: SplitIndicator,\n      appointmentComponent: Appointment,\n      appointmentContentComponent: AppointmentContent,\n      containerComponent: Container,\n      recurringIconComponent,\n      placeAppointmentsNextToEachOther,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"Appointments\"\n        dependencies={pluginDependencies}\n      >\n        <Template\n          name=\"timeTableAppointmentLayer\"\n        >\n          <TemplateConnector>\n            {({\n              timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n              startViewDate, endViewDate, cellDuration, groupOrientation,  groups, groupByDate,\n            }) => this.updateTimeTableAppointments(\n              timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n              startViewDate, endViewDate, cellDuration, groups, groupOrientation, groupByDate,\n              placeAppointmentsNextToEachOther,\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template\n          name=\"allDayAppointmentLayer\"\n        >\n          <TemplateConnector>\n            {({\n              allDayAppointments, viewCellsData, allDayElementsMeta,\n              startViewDate, endViewDate, groupOrientation, currentView, groups, groupByDate,\n            }) => this.updateAllDayAppointments(\n              allDayAppointments, viewCellsData, allDayElementsMeta, currentView,\n              startViewDate, endViewDate, groups, groupOrientation, groupByDate,\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template\n          name=\"appointment\"\n        >\n          {({ style, ...params }: any) => (\n            <TemplateConnector>\n              {({ formatDate }) => (\n                <Container style={style}>\n                  <TemplatePlaceholder\n                    name=\"appointmentTop\"\n                    params={{ data: params.data, type: params.type, slice: params.fromPrev }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentContent\"\n                    params={{ ...params, formatDate }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentBottom\"\n                    params={{ data: params.data, type: params.type, slice: params.toNext }}\n                  />\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointmentContent\">\n          {({\n            onClick, onDoubleClick, formatDate,\n            data, type, fromPrev, toNext,\n            durationType, resources, forwardedRef,\n            ...restParams\n          }: any) => (\n            <Appointment\n              forwardedRef={forwardedRef}\n              data={data}\n              resources={resources}\n              {...createClickHandlers(onClick, onDoubleClick)}\n              {...restParams}\n            >\n              {fromPrev && <SplitIndicator position={POSITION_START} appointmentType={type} />}\n              <AppointmentContent\n                data={data}\n                type={type}\n                durationType={durationType}\n                recurringIconComponent={recurringIconComponent}\n                formatDate={formatDate}\n                resources={resources}\n              />\n              {toNext && <SplitIndicator position={POSITION_END} appointmentType={type} />}\n            </Appointment>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders appointments. */\nexport const Appointments: React.ComponentType<AppointmentsProps> = AppointmentsBase;\n","import * as React from 'react';\nimport { getMessagesFormatter, memoize } from '@devexpress/dx-core';\nimport {\n  Getter,\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  allDayCells, calculateAllDayDateIntervals,\n  VERTICAL_GROUP_ORIENTATION, VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport moment from 'moment';\n\nimport { AllDayPanelProps, AllDayPanelState } from '../types';\n\nconst isMonthView = currentView => currentView.type === VIEW_TYPES.MONTH;\nconst isVerticalGrouping = (\n  currentView, groupOrientation,\n) => groupOrientation?.(currentView.name) === VERTICAL_GROUP_ORIENTATION;\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n];\nconst defaultMessages = {\n  allDay: 'All Day',\n};\nconst AllDayAppointmentLayerPlaceholder = () =>\n  <TemplatePlaceholder name=\"allDayAppointmentLayer\" />;\nconst AllDayPanelPlaceholder = params => <TemplatePlaceholder name=\"allDayPanel\" params={params} />;\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"allDayPanelCell\" params={params} />;\nconst AllDayTitlePlaceholder = params => <TemplatePlaceholder name=\"allDayTitle\" params={params} />;\n\nclass AllDayPanelBase extends React.PureComponent<AllDayPanelProps, AllDayPanelState> {\n  state: AllDayPanelState = {\n    elementsMeta: {},\n    previousCell: null,\n    // The key has to be generated every time the Cell component is updated to rerender the Layout\n    // and, consequently, update allDayElementsMeta\n    layoutKey: 0,\n  };\n  static defaultProps: Partial<AllDayPanelProps> = {\n    messages: {},\n  };\n  static components: PluginComponents = {\n    appointmentLayerComponent: 'AppointmentLayer',\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    cellComponent: 'Cell',\n    rowComponent: 'Row',\n    titleCellComponent: 'TitleCell',\n    containerComponent: 'Container',\n  };\n\n  static getDerivedStateFromProps(\n    props: AllDayPanelProps, state: AllDayPanelState,\n  ): AllDayPanelState | null {\n    if (props.cellComponent !== state.previousCell) {\n      return {\n        ...state,\n        previousCell: props.cellComponent,\n        layoutKey: Math.random(),\n      };\n    }\n    return null;\n  }\n\n  allDayCellsDataComputed = memoize(({ viewCellsData }) => allDayCells(viewCellsData));\n\n  updateCellElementsMeta = memoize((cellElementsMeta) => {\n    this.setState({ elementsMeta: cellElementsMeta });\n  });\n\n  allDayAppointmentsComputed = memoize(({\n    appointments, startViewDate, endViewDate, excludedDays,\n  }) => {\n    const allDayLeftBound = moment(startViewDate).hours(0).minutes(0).toDate();\n    const allDayRightBound = moment(endViewDate).hours(23).minutes(59).toDate();\n    return calculateAllDayDateIntervals(\n      appointments, allDayLeftBound, allDayRightBound, excludedDays,\n    );\n  });\n\n  allDayPanelExistsComputed = memoize(({\n    currentView,\n  }) => !isMonthView(currentView));\n\n  getMessageFormatter = memoize((messages, allDayPanelDefaultMessages) =>\n    getMessagesFormatter({ ...allDayPanelDefaultMessages, ...messages }));\n\n  render() {\n    const {\n      appointmentLayerComponent: AppointmentLayer,\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent,\n      titleCellComponent: TitleCell,\n      containerComponent: Container,\n      messages,\n    } = this.props;\n    const { elementsMeta, layoutKey } = this.state;\n    const getMessage = this.getMessageFormatter(messages, defaultMessages);\n\n    return (\n      <Plugin\n        name=\"AllDayPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"allDayElementsMeta\" value={elementsMeta} />\n        <Getter name=\"allDayCellsData\" computed={this.allDayCellsDataComputed} />\n        <Getter name=\"allDayPanelExists\" computed={this.allDayPanelExistsComputed} />\n        <Getter\n          name=\"allDayAppointments\"\n          computed={this.allDayAppointmentsComputed}\n        />\n\n        <Template name=\"timeTable\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ currentView, groupOrientation, allDayCellsData }) => {\n                if (isMonthView(currentView)\n                  || !isVerticalGrouping(currentView, groupOrientation)) {\n                  return <TemplatePlaceholder params={...params} />;\n                }\n                return (\n                  <>\n                    <TemplatePlaceholder\n                      params={{\n                        ...params,\n                        allDayCellComponent: CellPlaceholder,\n                        allDayRowComponent: rowComponent,\n                        allDayCellsData,\n                      }}\n                    />\n                    <AppointmentLayer>\n                      <AllDayAppointmentLayerPlaceholder />\n                    </AppointmentLayer>\n                  </>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => {\n              if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n                return <TemplatePlaceholder />;\n              }\n\n              return (\n                <AllDayTitlePlaceholder />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeScale\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ currentView, groupOrientation }) => {\n                if (isMonthView(currentView)\n                  || !isVerticalGrouping(currentView, groupOrientation)) {\n                  return <TemplatePlaceholder params={...params} />;\n                }\n\n                return (\n                  <TemplatePlaceholder\n                    params={{\n                      ...params,\n                      allDayTitleComponent: AllDayTitlePlaceholder,\n                      showAllDayTitle: true,\n                    }}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => {\n              if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n                return null;\n              }\n\n              return (\n                <Container>\n                  <AllDayPanelPlaceholder />\n                </Container>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView, formatDate, allDayCellsData,\n            }) => {\n              if (currentView.type === VIEW_TYPES.MONTH) return null;\n\n              return (\n                <React.Fragment>\n                  <Layout\n                    cellComponent={CellPlaceholder}\n                    rowComponent={rowComponent}\n                    cellsData={allDayCellsData[0]}\n                    setCellElementsMeta={this.updateCellElementsMeta}\n                    formatDate={formatDate}\n                    key={layoutKey}\n                  />\n                  <AppointmentLayer>\n                    <AllDayAppointmentLayerPlaceholder />\n                  </AppointmentLayer>\n                </React.Fragment>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayTitle\">\n          {(params: any) => <TitleCell getMessage={getMessage} {...params}/>}\n        </Template>\n        <Template name=\"allDayPanelCell\">\n          {(params: any) => <Cell {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the All Day Panel. */\nexport const AllDayPanel: React.ComponentType<AllDayPanelProps> = AllDayPanelBase;\n","import * as React from 'react';\nimport {\n  Getter,\n  Action,\n  Plugin,\n  createStateHelper,\n  StateHelper,\n  ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  changeCurrentDate,\n  setCurrentViewName,\n  ChangeCurrentDatePayload,\n} from '@devexpress/dx-scheduler-core';\nimport { ViewStateProps, ViewStateState } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass ViewStateBase extends React.PureComponent<ViewStateProps, ViewStateState> {\n  changeCurrentDate: ActionFn<ChangeCurrentDatePayload>;\n  setCurrentViewName: ActionFn<string>;\n\n  static defaultProps: Partial<ViewStateProps> = {\n    defaultCurrentDate: new Date(),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentDate: props.currentDate || props.defaultCurrentDate,\n      currentViewName: props.currentViewName || props.defaultCurrentViewName,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        currentDate: () => {\n          const { onCurrentDateChange } = this.props;\n          return onCurrentDateChange;\n        },\n        currentViewName: () => {\n          const { onCurrentViewNameChange } = this.props;\n          return onCurrentViewNameChange;\n        },\n      },\n    );\n\n    this.changeCurrentDate = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentDate', changeCurrentDate);\n    this.setCurrentViewName = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentViewName', setCurrentViewName);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentDate = prevState.currentDate,\n      currentViewName = prevState.currentViewName,\n    } = nextProps;\n\n    return {\n      currentDate,\n      currentViewName,\n    };\n  }\n\n  getCurrentViewComputed =  memoize(currentViewName => () => (\n    currentViewName\n    ? { name: currentViewName }\n    : undefined\n  ));\n\n  render() {\n    const { currentDate, currentViewName: stateCurrentViewName } = this.state;\n    return (\n      <Plugin\n        name=\"ViewState\"\n      >\n        <Getter name=\"currentDate\" value={currentDate} />\n        <Getter name=\"currentView\" computed={this.getCurrentViewComputed(stateCurrentViewName)} />\n        <Action name=\"changeCurrentDate\" action={this.changeCurrentDate} />\n        <Action name=\"setCurrentViewName\" action={this.setCurrentViewName} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the view state. It specifies the current date and the displayed view. */\nexport const ViewState: React.ComponentType<ViewStateProps> = ViewStateBase;\n","import * as React from 'react';\nimport {\n  Action, Plugin, Getter, createStateHelper, StateHelper, ComputedFn, ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  addAppointment,\n  cancelAddedAppointment,\n  startEditAppointment,\n  stopEditAppointment,\n  changeAppointment,\n  cancelChanges,\n  changedAppointmentById,\n  RECURRENCE_EDIT_SCOPE,\n  preCommitChanges as preCommitChangesBase,\n} from '@devexpress/dx-scheduler-core';\nimport { EditingStateProps, EditingStateState } from '../types';\n\nclass EditingStateBase extends React.PureComponent<EditingStateProps, EditingStateState> {\n  startEditAppointment: ComputedFn;\n  stopEditAppointment: (payload?: any) => void;\n  changeAppointment: ComputedFn;\n  cancelChangedAppointment: (payload?: any) => void;\n  commitChangedAppointment: ActionFn<any>;\n  addAppointment: ComputedFn;\n  changeAddedAppointment: ComputedFn;\n  cancelAddedAppointment: (payload?: any) => void;\n  commitAddedAppointment: ComputedFn;\n  commitDeletedAppointment: ActionFn<any>;\n\n  static defaultProps: Partial<EditingStateProps> = {\n    defaultEditingAppointment: undefined,\n    defaultAppointmentChanges: {},\n    defaultAddedAppointment: {},\n    preCommitChanges: preCommitChangesBase,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingAppointment: props.editingAppointment || props.defaultEditingAppointment,\n      addedAppointment: props.addedAppointment || props.defaultAddedAppointment,\n      appointmentChanges: props.appointmentChanges || props.defaultAppointmentChanges,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        editingAppointment: () => {\n          const { onEditingAppointmentChange } = this.props;\n          return onEditingAppointmentChange;\n        },\n        addedAppointment: () => {\n          const { onAddedAppointmentChange } = this.props;\n          return onAddedAppointmentChange;\n        },\n        appointmentChanges: () => {\n          const { onAppointmentChangesChange } = this.props;\n          return onAppointmentChangesChange;\n        },\n      },\n    );\n\n    this.addAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', addAppointment);\n    this.changeAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', changeAppointment);\n    this.cancelAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', cancelAddedAppointment);\n\n    this.startEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', startEditAppointment);\n    this.stopEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', stopEditAppointment);\n\n    this.changeAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', changeAppointment);\n    this.cancelChangedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', cancelChanges);\n\n    this.commitChangedAppointment = (type = RECURRENCE_EDIT_SCOPE.CURRENT) => {\n      const { appointmentChanges, editingAppointment } = this.state;\n      const { onCommitChanges, preCommitChanges } = this.props;\n      if (!editingAppointment) {\n        return;\n      }\n      const changes = !editingAppointment.rRule\n        ? { changed: changedAppointmentById(appointmentChanges, editingAppointment.id!) }\n        : preCommitChanges!(appointmentChanges, editingAppointment, type);\n\n      onCommitChanges(changes);\n      this.cancelChangedAppointment();\n      this.stopEditAppointment();\n    };\n\n    this.commitAddedAppointment = () => {\n      const { onCommitChanges } = this.props;\n      const { addedAppointment: stateAddedAppointment } = this.state;\n      onCommitChanges({\n        added: stateAddedAppointment,\n      });\n    };\n\n    this.commitDeletedAppointment = ({ deletedAppointmentData, type = 'current' }) => {\n      const { onCommitChanges, preCommitChanges } = this.props;\n\n      const changes = deletedAppointmentData.rRule\n        ? preCommitChanges!(null, deletedAppointmentData, type)\n        : { deleted: deletedAppointmentData.id };\n      onCommitChanges(changes);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      editingAppointment = prevState.editingAppointment,\n      appointmentChanges = prevState.appointmentChanges,\n      addedAppointment = prevState.addedAppointment,\n    } = nextProps;\n\n    return {\n      editingAppointment,\n      appointmentChanges,\n      addedAppointment,\n    };\n  }\n\n  render() {\n    const { addedAppointment, editingAppointment, appointmentChanges } = this.state;\n\n    return (\n      <Plugin\n        name=\"EditingState\"\n      >\n        <Getter name=\"editingAppointment\" value={editingAppointment} />\n        <Action name=\"startEditAppointment\" action={this.startEditAppointment} />\n        <Action name=\"stopEditAppointment\" action={this.stopEditAppointment} />\n\n        <Getter name=\"appointmentChanges\" value={appointmentChanges} />\n        <Action name=\"changeAppointment\" action={this.changeAppointment} />\n        <Action name=\"cancelChangedAppointment\" action={this.cancelChangedAppointment} />\n        <Action name=\"commitChangedAppointment\" action={this.commitChangedAppointment} />\n\n        <Getter name=\"addedAppointment\" value={addedAppointment} />\n        <Action name=\"addAppointment\" action={this.addAppointment} />\n        <Action name=\"changeAddedAppointment\" action={this.changeAddedAppointment} />\n        <Action name=\"cancelAddedAppointment\" action={this.cancelAddedAppointment} />\n        <Action name=\"commitAddedAppointment\" action={this.commitAddedAppointment} />\n\n        <Action name=\"commitDeletedAppointment\" action={this.commitDeletedAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the scheduler appointment editing state. */\nexport const EditingState: React.ComponentType<EditingStateProps> = EditingStateBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  createStateHelper,\n  StateHelper,\n  PluginComponents,\n  Action,\n} from '@devexpress/dx-react-core';\nimport {\n  OPEN_COMMAND_BUTTON,\n  CLOSE_COMMAND_BUTTON,\n  DELETE_COMMAND_BUTTON,\n  setAppointmentMeta,\n  AppointmentMeta,\n  TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n  getAppointmentResources,\n} from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentTooltipProps, AppointmentTooltipState, Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Appointments' },\n  { name: 'EditingState', optional: true },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst commandButtonIds = {\n  open: OPEN_COMMAND_BUTTON,\n  close: CLOSE_COMMAND_BUTTON,\n  delete: DELETE_COMMAND_BUTTON,\n};\n\nclass AppointmentTooltipBase extends React.PureComponent<\n  AppointmentTooltipProps, AppointmentTooltipState\n> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentMeta: (appointmentMeta: AppointmentMeta) => void;\n  onAppointmentClick: (appointmentMeta: AppointmentMeta) => void;\n\n  static defaultProps: Partial<AppointmentTooltipProps> = {\n    showOpenButton: false,\n    showDeleteButton: false,\n    showCloseButton: false,\n  };\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    headerComponent: 'Header',\n    contentComponent: 'Content',\n    commandButtonComponent: 'CommandButton',\n    recurringIconComponent: 'RecurringIcon',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentMeta: props.appointmentMeta,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentMeta: () => {\n          const { onAppointmentMetaChange } = this.props;\n          return onAppointmentMetaChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentMeta = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentMeta', setAppointmentMeta);\n    this.onAppointmentClick = ({ target, data }) => {\n      this.setAppointmentMeta({ target, data });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentMeta = prevState.appointmentMeta,\n    } = nextProps;\n    return {\n      appointmentMeta,\n      visible,\n    };\n  }\n\n  render() {\n    const {\n      showOpenButton,\n      showDeleteButton,\n      showCloseButton,\n      layoutComponent: Layout,\n      headerComponent,\n      contentComponent,\n      commandButtonComponent,\n      recurringIconComponent,\n    } = this.props;\n    const { visible, appointmentMeta } = this.state;\n\n    return (\n      <Plugin\n        name=\"AppointmentTooltip\"\n        dependencies={pluginDependencies}\n      >\n        <Action name={TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY} action={this.toggleVisibility} />\n\n        <Template name=\"timeTable\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              formatDate, resources, plainResources,\n            }, {\n              finishDeleteAppointment, openDeleteConfirmationDialog,\n            }) => {\n              const onDeleteButtonClick = () => {\n                if (openDeleteConfirmationDialog) {\n                  openDeleteConfirmationDialog({\n                    hideActionName: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n                    appointmentData: appointmentMeta.data,\n                  });\n                } else {\n                  this.toggleVisibility();\n                  finishDeleteAppointment(appointmentMeta.data);\n                }\n              };\n              return (\n                <TemplatePlaceholder\n                  name=\"tooltip\"\n                  params={{\n                    commandButtonComponent,\n                    recurringIconComponent,\n                    showOpenButton,\n                    showDeleteButton,\n                    showCloseButton,\n                    headerComponent,\n                    contentComponent,\n                    appointmentMeta,\n                    appointmentResources: appointmentMeta ? getAppointmentResources(\n                      appointmentMeta.data as any, resources, plainResources,\n                    ) : [],\n                    visible,\n                    onHide: this.toggleVisibility,\n                    commandButtonIds,\n                    ...finishDeleteAppointment && {\n                      onDeleteButtonClick,\n                    },\n                    formatDate,\n                  }}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: any) => <Layout {...params} />}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplatePlaceholder\n              params={{\n                ...params,\n                onClick: ({ target, data }) =>\n                 this.onAppointmentClick({ target, data }),\n              }}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/** The AppointmentTooltip plugin allows you to display information about an appointment in a tooltip. */\nexport const AppointmentTooltip: React.ComponentType<AppointmentTooltipProps> = AppointmentTooltipBase;\n","import * as React from 'react';\nimport { getMessagesFormatter, memoize } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  createStateHelper,\n  StateHelper,\n  TemplateConnector,\n  TemplatePlaceholder,\n  PluginComponents,\n  Action,\n} from '@devexpress/dx-react-core';\nimport {\n  setAppointmentData,\n  isAllDayCell,\n  callActionIfExists,\n  AppointmentModel,\n  TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n  getAppointmentResources,\n  ValidResourceInstance,\n  checkMultipleResourceFields,\n} from '@devexpress/dx-scheduler-core';\n\nimport {\n  AppointmentFormProps, AppointmentFormState, AppointmentTooltip, Appointments,\n} from '../types';\n\nconst addDoubleClickToCell = (\n  title, startDate, endDate, groupingInfo, resources,\n  allDay, openFormHandler, addAppointment, params,\n) => {\n  const resourceFields = !!groupingInfo\n    ? groupingInfo.reduce((acc, currentGroup) => (\n      { ...acc, [currentGroup.fieldName]: currentGroup.id }\n    ), {}) : {};\n  const validResourceFields = resources\n    ? checkMultipleResourceFields(resourceFields, resources)\n    : resourceFields;\n\n  const newAppointmentData = {\n    title,\n    startDate,\n    endDate,\n    allDay,\n    ...validResourceFields,\n  };\n\n  return (\n    <TemplatePlaceholder\n      params={{\n        ...params,\n        onDoubleClick: () => {\n          openFormHandler(newAppointmentData);\n          callActionIfExists(addAppointment,\n            { appointmentData: newAppointmentData });\n        },\n      }}\n    />\n  );\n};\n\nconst defaultMessages = {\n  allDayLabel: 'All Day',\n  titleLabel: 'Title',\n  commitCommand: 'Save',\n  detailsLabel: 'Details',\n  moreInformationLabel: 'More Information',\n  repeatLabel: 'Repeat',\n  notesLabel: 'Notes',\n  never: 'Never',\n  daily: 'Daily',\n  weekly: 'Weekly',\n  monthly: 'Monthly',\n  yearly: 'Yearly',\n  repeatEveryLabel: 'Repeat every',\n  daysLabel: 'day(s)',\n  endRepeatLabel: 'End repeat',\n  onLabel: 'On',\n  afterLabel: 'After',\n  occurrencesLabel: 'occurrence(s)',\n  weeksOnLabel: 'week(s) on:',\n  monthsLabel: 'month(s)',\n  ofEveryMonthLabel: 'of every month',\n  theLabel: 'The',\n  firstLabel: 'First',\n  secondLabel: 'Second',\n  thirdLabel: 'Third',\n  fourthLabel: 'Fourth',\n  lastLabel: 'Last',\n  yearsLabel: 'year(s)',\n  ofLabel: 'of ',\n  everyLabel: 'Every',\n};\n\nconst CommandLayoutPlaceholder = () => <TemplatePlaceholder name=\"commandLayout\" />;\nconst BasicLayoutPlaceholder = () => <TemplatePlaceholder name=\"basicLayout\" />;\nconst RecurrenceLayoutPlaceholder = () => <TemplatePlaceholder name=\"recurrenceLayout\" />;\n\nconst pluginDependencies = [\n  { name: 'EditingState', optional: true },\n  { name: 'Appointments', optional: true },\n  { name: 'AppointmentTooltip', optional: true },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst prepareChanges = (\n  appointmentData, editingAppointment,\n  addedAppointment, appointmentChanges,\n  resources, plainResources,\n) => {\n  const isNew = !editingAppointment;\n  const changedAppointment = {\n    ...appointmentData,\n    ...appointmentChanges,\n    ...isNew && addedAppointment,\n  };\n  const appointmentResources = getAppointmentResources(\n    changedAppointment, resources, plainResources,\n  );\n  const isFormEdited = isNew || Object.getOwnPropertyNames(appointmentChanges).length !== 0;\n  return { changedAppointment, appointmentResources, isNew, isFormEdited };\n};\n\nconst isFormFullSize = (\n  isFormVisible, changedAppointmentRRule, previousAppointmentRRule,\n) => !!changedAppointmentRRule || (!isFormVisible && !!previousAppointmentRRule);\n\nclass AppointmentFormBase extends React.PureComponent<AppointmentFormProps, AppointmentFormState> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentData: (payload: any) => void;\n  openFormHandler: (payload: AppointmentModel) => void;\n  container = React.createRef();\n\n  static defaultProps: Partial<AppointmentFormProps> = {\n    messages: {},\n    readOnly: false,\n    onVisibilityChange: () => undefined,\n    onAppointmentDataChange: () => undefined,\n  };\n  static components: PluginComponents = {\n    overlayComponent: 'Overlay',\n    layoutComponent: 'Layout',\n    commandLayoutComponent: 'CommandLayout',\n    commandButtonComponent: 'CommandButton',\n    basicLayoutComponent: 'BasicLayout',\n    textEditorComponent: 'TextEditor',\n    labelComponent: 'Label',\n    dateEditorComponent: 'DateEditor',\n    booleanEditorComponent: 'BooleanEditor',\n    selectComponent: 'Select',\n    recurrenceLayoutComponent: 'RecurrenceLayout',\n    radioGroupComponent: 'RadioGroup',\n    weeklyRecurrenceSelectorComponent: 'WeeklyRecurrenceSelector',\n    resourceEditorComponent: 'ResourceEditor',\n    containerComponent: 'Container',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentData: props.appointmentData || {},\n      previousAppointment: props.appointmentData || {},\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentData: () => {\n          const { onAppointmentDataChange } = this.props;\n          return onAppointmentDataChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentData = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentData', setAppointmentData);\n\n    this.openFormHandler = (appointmentData) => {\n      this.setAppointmentData({ appointmentData });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentData = prevState.appointmentData,\n    } = nextProps;\n    return {\n      appointmentData,\n      visible,\n    };\n  }\n\n  commitChanges = memoize((\n    finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment,\n  ) => () =>  {\n    this.toggleVisibility();\n    if (isNew) {\n      callActionIfExists(commitAddedAppointment, changedAppointment);\n    } else if (finishCommitAppointment) {\n      finishCommitAppointment();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  cancelChanges = memoize((\n    openCancelConfirmationDialog, isNew, stopEditAppointment, appointmentChanges,\n    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n  ) => () => {\n    if (openCancelConfirmationDialog && Object.keys(appointmentChanges).length !== 0) {\n      openCancelConfirmationDialog(TOGGLE_APPOINTMENT_FORM_VISIBILITY);\n    } else {\n      if (isNew) {\n        callActionIfExists(cancelAddedAppointment, appointmentChanges);\n      } else {\n        callActionIfExists(stopEditAppointment, appointmentChanges);\n        callActionIfExists(cancelChangedAppointment, appointmentChanges);\n      }\n      this.toggleVisibility();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  deleteAppointment = memoize((\n    finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog,\n    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n    stopEditAppointment, isNew,\n  ) => () => {\n    if (openDeleteConfirmationDialog) {\n      openDeleteConfirmationDialog({\n        hideActionName: TOGGLE_APPOINTMENT_FORM_VISIBILITY, appointmentData: changedAppointment,\n      });\n    } else {\n      callActionIfExists(finishDeleteAppointment, appointmentData);\n      if (isNew) {\n        callActionIfExists(cancelAddedAppointment, appointmentData);\n      } else {\n        callActionIfExists(cancelChangedAppointment, appointmentData);\n        callActionIfExists(stopEditAppointment, appointmentData);\n      }\n      this.toggleVisibility();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  changeAppointmentField = memoize((isNew, changeAddedAppointment, changeAppointment) =>\n    (change) => {\n      if (change && change.rRule) {\n        this.setState({ previousAppointment: {\n          ...this.state.previousAppointment, rRule: change.rRule,\n        }});\n      }\n      if (isNew) {\n        callActionIfExists(changeAddedAppointment, { change });\n      } else {\n        callActionIfExists(changeAppointment, { change });\n      }\n    },\n  );\n\n  getMessage = memoize((menuMessages, messages) =>\n    getMessagesFormatter({ ...menuMessages, ...messages }));\n\n  render() {\n    const {\n      containerComponent: Container,\n      overlayComponent: Overlay,\n      layoutComponent: Layout,\n      commandLayoutComponent: CommandLayout,\n      basicLayoutComponent: BasicLayout,\n      recurrenceLayoutComponent: RecurrenceLayout,\n      commandButtonComponent,\n      textEditorComponent,\n      labelComponent,\n      dateEditorComponent,\n      booleanEditorComponent,\n      selectComponent,\n      radioGroupComponent,\n      weeklyRecurrenceSelectorComponent,\n      resourceEditorComponent,\n      readOnly,\n      messages,\n    } = this.props;\n    const { visible, appointmentData, previousAppointment } = this.state;\n    const getMessage = this.getMessage(defaultMessages, messages);\n    return (\n      <Plugin\n        name=\"AppointmentForm\"\n        dependencies={pluginDependencies}\n      >\n        <Action name={TOGGLE_APPOINTMENT_FORM_VISIBILITY} action={this.toggleVisibility} />\n\n        <Template name=\"schedulerRoot\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n\n              resources,\n              plainResources,\n            }, {\n              openCancelConfirmationDialog,\n\n              stopEditAppointment,\n              cancelAddedAppointment,\n              cancelChangedAppointment,\n            }) => {\n              const { changedAppointment, isNew } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              const fullSize = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              const onHideAction = () => visible && this.cancelChanges(\n                openCancelConfirmationDialog, isNew, stopEditAppointment,\n                { ...appointmentChanges, ...addedAppointment }, changedAppointment,\n                cancelAddedAppointment, cancelChangedAppointment,\n              )();\n\n              return (\n                <React.Fragment>\n                  <Container ref={this.container} />\n                  <Overlay\n                    visible={visible}\n                    onHide={onHideAction}\n                    fullSize={fullSize}\n                    target={this.container}\n                  >\n                    <Layout\n                      basicLayoutComponent={BasicLayoutPlaceholder}\n                      commandLayoutComponent={CommandLayoutPlaceholder}\n                      recurrenceLayoutComponent={RecurrenceLayoutPlaceholder}\n                      isRecurrence={fullSize}\n                    />\n                  </Overlay>\n                  <TemplatePlaceholder />\n                </React.Fragment>);\n            }}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"commandLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n\n              resources,\n              plainResources,\n            }, {\n              commitAddedAppointment,\n              finishCommitAppointment,\n              finishDeleteAppointment,\n\n              stopEditAppointment,\n              cancelAddedAppointment,\n              cancelChangedAppointment,\n\n              openCancelConfirmationDialog,\n              openDeleteConfirmationDialog,\n            }) => {\n              const { isNew, changedAppointment, isFormEdited } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              const isRecurrence = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              return (\n                <CommandLayout\n                  commandButtonComponent={commandButtonComponent}\n                  onCommitButtonClick={this.commitChanges(\n                    finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment,\n                  )}\n                  onCancelButtonClick={this.cancelChanges(\n                    openCancelConfirmationDialog, isNew, stopEditAppointment,\n                    { ...appointmentChanges, ...addedAppointment }, changedAppointment,\n                    cancelAddedAppointment, cancelChangedAppointment,\n                  )}\n                  onDeleteButtonClick={this.deleteAppointment(\n                    finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog,\n                    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n                    stopEditAppointment, isNew,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  fullSize={isRecurrence}\n                  disableSaveButton={!isFormEdited}\n                  hideDeleteButton={isNew}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"basicLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n              locale,\n\n              resources,\n              plainResources,\n            }, {\n              changeAppointment,\n              changeAddedAppointment,\n            }) => {\n              const { isNew, changedAppointment, appointmentResources } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              return (\n                <BasicLayout\n                  locale={locale}\n                  appointmentData={visible ? changedAppointment : previousAppointment}\n                  onFieldChange={this.changeAppointmentField(\n                    isNew, changeAddedAppointment, changeAppointment,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  textEditorComponent={textEditorComponent}\n                  dateEditorComponent={dateEditorComponent}\n                  booleanEditorComponent={booleanEditorComponent}\n                  selectComponent={selectComponent}\n                  labelComponent={labelComponent}\n                  resourceEditorComponent={resourceEditorComponent}\n                  fullSize={!changedAppointment.rRule}\n                  resources={resources}\n                  appointmentResources={appointmentResources as Array<ValidResourceInstance>}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"recurrenceLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n              formatDate,\n              locale,\n              firstDayOfWeek,\n            }, {\n              changeAddedAppointment,\n              changeAppointment,\n            }) => {\n              const { isNew, changedAppointment } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                undefined, undefined,\n              );\n              const isRecurrenceLayoutVisible = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              const correctedAppointment = !changedAppointment.rRule\n                ? { ...changedAppointment, rRule: previousAppointment.rRule } : changedAppointment;\n\n              return (\n                <RecurrenceLayout\n                  locale={locale}\n                  appointmentData={visible ? correctedAppointment : previousAppointment}\n                  onFieldChange={this.changeAppointmentField(\n                    isNew, changeAddedAppointment, changeAppointment,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  formatDate={formatDate}\n                  textEditorComponent={textEditorComponent}\n                  dateEditorComponent={dateEditorComponent}\n                  radioGroupComponent={radioGroupComponent}\n                  weeklyRecurrenceSelectorComponent={weeklyRecurrenceSelectorComponent}\n                  labelComponent={labelComponent}\n                  selectComponent={selectComponent}\n                  visible={isRecurrenceLayoutVisible}\n                  firstDayOfWeek={firstDayOfWeek}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: AppointmentTooltip.LayoutProps) => (\n            <TemplateConnector>\n              {(getters, { startEditAppointment }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onOpenButtonClick: () => {\n                      this.openFormHandler(params.appointmentMeta!.data);\n                      callActionIfExists(startEditAppointment, params.appointmentMeta!.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplateConnector>\n              {(getters, { startEditAppointment }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onDoubleClick: () => {\n                      this.openFormHandler(params.data);\n                      callActionIfExists(startEditAppointment, params.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"cell\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ resources }, { addAppointment }) => addDoubleClickToCell(\n                undefined, params.startDate, params.endDate, params.groupingInfo, resources,\n                isAllDayCell(params.startDate, params.endDate),\n                this.openFormHandler, addAppointment, params,\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"allDayPanelCell\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ resources }, { addAppointment }) => addDoubleClickToCell(\n                undefined, params.startDate, params.endDate, params.groupingInfo, resources,\n                true, this.openFormHandler, addAppointment, params,\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin >\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/** The AppointmentForm plugin renders a form that visualizes appointmentâ€™s data and allows a user to modify this data. */\nexport const AppointmentForm: React.ComponentType<AppointmentFormProps> = AppointmentFormBase;\n","import * as React from 'react';\nimport {\n  Plugin, Template, TemplatePlaceholder,\n  TemplateConnector, DropTarget, DragSource,\n  DragDropProvider as DragDropProviderCore,\n  PluginComponents, PlaceholderWithRef,\n} from '@devexpress/dx-react-core';\nimport {\n  cellIndex, cellData, cellType, getAppointmentStyle, intervalDuration, autoScroll,\n  calculateAppointmentTimeBoundaries, calculateInsidePart, RESIZE_TOP, RESIZE_BOTTOM,\n  POSITION_START, POSITION_END, getAppointmentResources, calculateAppointmentGroups,\n  appointmentDragged, calculateDraftAppointments,\n  HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION, SCROLL_SPEED_PX,\n} from '@devexpress/dx-scheduler-core';\nimport { DragDropProviderProps, DragDropProviderState } from '../types';\n\nconst renderAppointmentItems = (items, Wrapper, draftData) => (\n  items.length > 0 ? (\n    <Wrapper>\n      {items.map((draftAppointment, index) => (\n        <TemplatePlaceholder\n          name=\"draftAppointment\"\n          key={index.toString()}\n          params={{ data: draftData, draftAppointment }}\n        />\n      ))}\n    </Wrapper>\n  ) : (\n    null\n  )\n);\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Appointments' },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'AllDayPanel', optional: true },\n];\n\nclass DragDropProviderBase extends React.PureComponent<\n  DragDropProviderProps, DragDropProviderState\n> {\n  timeTableDraftAppointments: any = [];\n  allDayDraftAppointments: any = [];\n  offsetTimeTop: number | null = null;\n  appointmentStartTime: any = null;\n  appointmentEndTime: any = null;\n  appointmentGroupingInfo: any = {};\n\n  state: DragDropProviderState = {\n    startTime: null,\n    endTime: null,\n    appointmentGroupingInfo: null,\n    payload: null,\n    isOutside: false,\n    allowDrag: () => true,\n    allowResize: () => true,\n    appointmentContentTemplateKey: 0,\n    appointmentTopTemplateKey: 0,\n    appointmentBottomTemplateKey: 0,\n  };\n  static components: PluginComponents = {\n    containerComponent: 'Container',\n    draftAppointmentComponent: 'DraftAppointment',\n    sourceAppointmentComponent: 'SourceAppointment',\n    resizeComponent: 'Resize',\n  };\n  static defaultProps: Partial<DragDropProviderProps> = {\n    allowDrag: () => true,\n    allowResize: () => true,\n    scrollSpeed: SCROLL_SPEED_PX,\n  };\n  static getDerivedStateFromProps(\n    props: DragDropProviderProps, state: DragDropProviderState,\n  ): DragDropProviderState | null {\n    const isAllowDragSame = props.allowDrag === state.allowDrag;\n    const isAllowResizeSame = props.allowResize === state.allowResize;\n\n    if (isAllowDragSame && isAllowResizeSame) {\n      return null;\n    }\n\n    return {\n      ...state,\n      appointmentContentTemplateKey:\n        isAllowDragSame ? state.appointmentContentTemplateKey : Math.random(),\n      appointmentTopTemplateKey:\n        isAllowResizeSame ? state.appointmentTopTemplateKey : Math.random(),\n      appointmentBottomTemplateKey:\n        isAllowResizeSame ? state.appointmentBottomTemplateKey : Math.random(),\n      allowDrag: props.allowDrag,\n      allowResize: props.allowResize,\n    };\n\n  }\n\n  onPayloadChange(actions) {\n    return args => this.handlePayloadChange(args, actions);\n  }\n\n  calculateNextBoundaries(getters, actions, scrollSpeed) {\n    return args => this.calculateBoundaries(args, getters, actions, scrollSpeed);\n  }\n\n  resetCache() {\n    this.timeTableDraftAppointments = [];\n    this.allDayDraftAppointments = [];\n    this.offsetTimeTop = null;\n    this.appointmentStartTime = null;\n    this.appointmentEndTime = null;\n    this.appointmentGroupingInfo = {};\n\n    this.setState({\n      payload: null,\n      startTime: null,\n      endTime: null,\n      isOutside: false,\n    });\n  }\n\n  applyChanges(\n    startTime, endTime, payload, startEditAppointment, changeAppointment, appointmentGroupingInfo,\n  ) {\n    startEditAppointment(payload);\n    changeAppointment({\n      change: {\n        startDate: startTime,\n        endDate: endTime,\n        ...payload.allDay && { allDay: undefined },\n        ...this.appointmentGroupingInfo,\n      },\n    });\n    this.setState({ startTime, endTime, payload, isOutside: false, appointmentGroupingInfo });\n  }\n\n  handlePayloadChange({ payload }, { finishCommitAppointment }) {\n    const { isOutside } = this.state;\n    if (payload || !isOutside) return;\n\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  calculateBoundaries(\n    { payload, clientOffset },\n    {\n      viewCellsData, allDayCellsData, startViewDate, endViewDate, excludedDays, currentView,\n      timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n      grouping, resources, groups, groupOrientation: getGroupOrientation, groupByDate,\n    },\n    { changeAppointment, startEditAppointment },\n    scrollSpeed,\n  ) {\n    if (clientOffset) {\n      autoScroll(clientOffset, scrollingStrategy, scrollSpeed);\n    }\n\n    const tableCellElementsMeta = timeTableElementsMeta;\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n\n    // AllDayPanel doesn't always exist\n    const allDayCellsElementsMeta = allDayElementsMeta && allDayElementsMeta.getCellRects\n      ? allDayElementsMeta\n      : { getCellRects: [] };\n    const timeTableIndex = cellIndex(tableCellElementsMeta.getCellRects, clientOffset);\n    const allDayIndex = cellIndex(allDayCellsElementsMeta.getCellRects, clientOffset);\n\n    if (allDayIndex === -1 && timeTableIndex === -1) return;\n\n    const targetData = cellData(\n      timeTableIndex, allDayIndex, viewCellsData, allDayCellsData,\n    );\n    const targetType = cellType(targetData);\n    const insidePart = calculateInsidePart(\n      clientOffset.y, tableCellElementsMeta.getCellRects, timeTableIndex,\n    );\n    const cellDurationMinutes = intervalDuration(targetData, 'minutes');\n\n    const {\n      appointmentStartTime, appointmentEndTime, offsetTimeTop,\n    } = calculateAppointmentTimeBoundaries(\n      payload, targetData, targetType, cellDurationMinutes,\n      insidePart, this.offsetTimeTop!,\n    );\n\n    const appointmentGroups = calculateAppointmentGroups(\n      targetData.groupingInfo, resources, payload,\n    );\n\n    this.appointmentStartTime = appointmentStartTime || this.appointmentStartTime;\n    this.appointmentEndTime = appointmentEndTime || this.appointmentEndTime;\n    this.appointmentGroupingInfo = appointmentGroups || this.appointmentGroupingInfo;\n    this.offsetTimeTop = offsetTimeTop!;\n\n    const { startTime, endTime, appointmentGroupingInfo } = this.state;\n    if (!appointmentDragged(\n      this.appointmentStartTime, startTime!,\n      this.appointmentEndTime, endTime!,\n      this.appointmentGroupingInfo, appointmentGroupingInfo,\n    )) {\n      return;\n    }\n\n    const draftAppointments = [{\n      dataItem: {\n        ...payload,\n        startDate: this.appointmentStartTime,\n        endDate: this.appointmentEndTime,\n        ...this.appointmentGroupingInfo,\n      },\n      start: this.appointmentStartTime,\n      end: this.appointmentEndTime,\n    }];\n\n    const {\n      allDayDraftAppointments,\n      timeTableDraftAppointments,\n    } = calculateDraftAppointments(\n      allDayIndex, draftAppointments, startViewDate,\n      endViewDate, excludedDays, viewCellsData, allDayCellsElementsMeta,\n      targetType, cellDurationMinutes, tableCellElementsMeta, grouping, resources, groups,\n      groupOrientation, groupByDate?.(currentView?.name),\n    );\n\n    this.allDayDraftAppointments = allDayDraftAppointments;\n    this.timeTableDraftAppointments = timeTableDraftAppointments;\n\n    this.applyChanges(\n      this.appointmentStartTime, this.appointmentEndTime,\n      payload, startEditAppointment, changeAppointment,\n      this.appointmentGroupingInfo,\n    );\n  }\n\n  handleDrop = ({ finishCommitAppointment }) => () => {\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  handleLeave = () => {\n    this.setState({ isOutside: true });\n  }\n\n  render() {\n    const {\n      payload, appointmentContentTemplateKey,\n      appointmentBottomTemplateKey, appointmentTopTemplateKey,\n    } = this.state;\n    const {\n      containerComponent: Container,\n      draftAppointmentComponent: DraftAppointment,\n      sourceAppointmentComponent: SourceAppointment,\n      resizeComponent: Resize,\n      allowDrag,\n      allowResize,\n      scrollSpeed,\n    } = this.props;\n\n    const draftData = {\n      ...payload, startDate: this.appointmentStartTime, endDate: this.appointmentEndTime,\n    };\n\n    return (\n      <Plugin\n        name=\"DragDropProvider\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"body\">\n          <TemplateConnector>\n            {({\n              viewCellsData, allDayCellsData, startViewDate, endViewDate, excludedDays,\n              timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n              grouping, resources, groups, currentView, groupByDate, groupOrientation,\n            }, {\n              changeAppointment, startEditAppointment, finishCommitAppointment,\n            }) => {\n              const calculateBoundariesByMove = this.calculateNextBoundaries({\n                viewCellsData, allDayCellsData, currentView,\n                startViewDate, endViewDate, excludedDays,\n                timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n                resources, grouping, groups, groupByDate, groupOrientation,\n              }, { changeAppointment, startEditAppointment }, scrollSpeed);\n              return (\n                <DragDropProviderCore\n                  onChange={this.onPayloadChange({ finishCommitAppointment })}\n                >\n                  <DropTarget\n                    onOver={calculateBoundariesByMove}\n                    onEnter={calculateBoundariesByMove}\n                    onDrop={this.handleDrop({ finishCommitAppointment })}\n                    onLeave={this.handleLeave}\n                  >\n                    <PlaceholderWithRef />\n                  </DropTarget>\n                </DragDropProviderCore>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template\n          name=\"appointmentContent\"\n          predicate={({ data }: any) => allowDrag!(data)}\n          key={appointmentContentTemplateKey}\n        >\n          {({ styles, ...params }: any) => (\n            <DragSource\n              payload={{ ...params.data, type: params.type }}\n            >\n              {payload && params.data.id === payload.id ? (\n                <SourceAppointment {...params} />\n              ) : (\n                <PlaceholderWithRef params={{ ...params, draggable: true }} />\n              )}\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentTop\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n          key={appointmentTopTemplateKey}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_TOP, appointmentType: type }}\n            >\n              <Resize position={POSITION_START} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentBottom\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n          key={appointmentBottomTemplateKey}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_BOTTOM, appointmentType: type }}\n            >\n              <Resize position={POSITION_END} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => (\n              <>\n                <TemplatePlaceholder />\n                {groupOrientation?.(currentView.name) !== VERTICAL_GROUP_ORIENTATION\n                  ? renderAppointmentItems(this.allDayDraftAppointments, Container, draftData)\n                  : null}\n              </>\n            )}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeTable\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => (\n              <>\n                <TemplatePlaceholder />\n                {renderAppointmentItems(this.timeTableDraftAppointments, Container, draftData)}\n                {groupOrientation?.(currentView.name) === VERTICAL_GROUP_ORIENTATION\n                  ? renderAppointmentItems(this.allDayDraftAppointments, Container, draftData)\n                  : null}\n              </>\n            )}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"draftAppointment\">\n          {({ data, draftAppointment, ...restParams }: any) => (\n            <TemplateConnector>\n              {({ formatDate, resources, plainResources }) => {\n                const {\n                  dataItem, type, fromPrev, toNext, durationType, ...geometry\n                } = draftAppointment;\n                return (\n                  <DraftAppointment\n                    data={data}\n                    resources={getAppointmentResources(dataItem, resources, plainResources)}\n                    durationType={durationType}\n                    style={getAppointmentStyle(geometry)}\n                    type={type}\n                    fromPrev={fromPrev}\n                    toNext={toNext}\n                    formatDate={formatDate}\n                    {...restParams}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that enables users to edit appointments via drag-and-drop. */\nexport const DragDropProvider: React.ComponentType<DragDropProviderProps> = DragDropProviderBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { TodayButtonProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst defaultMessages = {\n  today: 'Today',\n};\n\nclass TodayButtonBase extends React.PureComponent<TodayButtonProps> {\n  static components: PluginComponents = {\n    buttonComponent: 'Button',\n  };\n  render() {\n    const {\n      buttonComponent: Button,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    return (\n      <Plugin\n        name=\"TodayButton\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {(getters, {\n              changeCurrentDate,\n            }) => {\n              const setCurrentDate = nextDate => changeCurrentDate({\n                nextDate,\n              });\n              return (\n                <Button\n                  getMessage={getMessage}\n                  setCurrentDate={setCurrentDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's button which sets the current date to today's date. */\nexport const TodayButton: React.ComponentType<TodayButtonProps> = TodayButtonBase;\n","import * as React from 'react';\nimport { memoize, getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, Action, Getters, Actions,\n} from '@devexpress/dx-react-core';\nimport { RECURRENCE_EDIT_SCOPE } from '@devexpress/dx-scheduler-core';\nimport { EditRecurrenceMenuProps, EditRecurrenceMenuState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nconst defaultAvailableOperations = [\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT },\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING },\n  { value: RECURRENCE_EDIT_SCOPE.ALL },\n];\n\nconst defaultMessages = {\n  [RECURRENCE_EDIT_SCOPE.CURRENT]: 'This appointment',\n  [RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING]: 'This and following appointments',\n  [RECURRENCE_EDIT_SCOPE.ALL]: 'All appointments',\n  menuEditingTitle: 'Edit recurring appointment',\n  menuDeletingTitle: 'Delete recurring appointment',\n  cancelButton: 'Cancel',\n  commitButton: 'OK',\n};\n\nclass EditRecurrenceMenuBase extends React.PureComponent<\n  EditRecurrenceMenuProps, EditRecurrenceMenuState\n> {\n  static components = {\n    layoutComponent: 'Layout',\n    overlayComponent: 'Overlay',\n    buttonComponent: 'Button',\n    containerComponent: 'Container',\n  };\n\n  modalContainer = React.createRef();\n\n  state = {\n    isOpen: false,\n    deletedAppointmentData: null,\n  };\n\n  finishCommitAppointment = (\n    payload,\n    { editingAppointment }: Getters,\n    { commitChangedAppointment }: Actions,\n  ) => {\n    if (editingAppointment && !editingAppointment.rRule) {\n      commitChangedAppointment();\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: null,\n      });\n    }\n  }\n\n  finishDeleteAppointment = (\n    payload,\n    getters,\n    { commitDeletedAppointment }: Actions,\n  ) => {\n    if (payload && !payload.rRule) {\n      commitDeletedAppointment({ deletedAppointmentData: payload });\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: payload,\n      });\n    }\n  }\n\n  commit = memoize((editAction, deleteAction, payload) => (type) => {\n    if (payload) {\n      deleteAction({ deletedAppointmentData: payload, type });\n    } else {\n      editAction(type);\n    }\n    this.closeMenu();\n  });\n\n  closeMenu = () => {\n    this.setState({ isOpen: false, deletedAppointmentData: null });\n  }\n\n  cancelEditing = memoize((cancelAction, stopEditAction) => () => {\n    stopEditAction();\n    cancelAction();\n    this.closeMenu();\n  });\n\n  availableOperations = memoize((getMessage, menuAvailableOperations) =>\n    menuAvailableOperations.map(({ value }) => ({\n      value,\n      title: getMessage([value]),\n    })));\n\n  getMessage = memoize((messages, menuMessages) =>\n    getMessagesFormatter({ ...menuMessages, ...messages }));\n\n  render() {\n    const { isOpen, deletedAppointmentData } = this.state;\n    const {\n      layoutComponent: Layout,\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      buttonComponent,\n      messages,\n    } = this.props;\n\n    const getMessage = this.getMessage(messages, defaultMessages);\n    const availableOperations = this.availableOperations(getMessage, defaultAvailableOperations);\n\n    return (\n      <Plugin\n        name=\"EditRecurrenceMenu\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n\n        <Template name=\"schedulerRoot\">\n          <TemplatePlaceholder />\n          <Container ref={this.modalContainer} />\n          <TemplatePlaceholder name=\"overlay\" />\n        </Template>\n\n        <Template name=\"overlay\">\n          <TemplateConnector>\n            {(getters, {\n              commitChangedAppointment, commitDeletedAppointment,\n              cancelChangedAppointment, stopEditAppointment,\n            }) => {\n              const commit = this.commit(\n                commitChangedAppointment, commitDeletedAppointment, deletedAppointmentData,\n              );\n              const cancelEditing = this.cancelEditing(\n                cancelChangedAppointment, stopEditAppointment,\n              );\n\n              return (\n                <Overlay\n                  target={this.modalContainer}\n                  visible={isOpen}\n                  onHide={this.closeMenu}\n                >\n                  <Layout\n                    isDeleting={!!deletedAppointmentData}\n                    buttonComponent={buttonComponent}\n                    handleClose={cancelEditing}\n                    commit={commit}\n                    availableOperations={availableOperations}\n                    getMessage={getMessage}\n                  />\n                </Overlay>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/**\n * A plugin that renders the Scheduler's edit menu.\n * Should not be used with the `IntegratedEditing` plugin.\n */\nexport const EditRecurrenceMenu: React.ComponentType<\n  EditRecurrenceMenuProps\n> = EditRecurrenceMenuBase;\n","import * as React from 'react';\nimport { Action, Plugin, Actions } from '@devexpress/dx-react-core';\nimport { IntegratedEditingProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nclass IntegratedEditingBase extends React.PureComponent<IntegratedEditingProps> {\n  static defaultProps = {\n    totalCount: 0,\n  };\n\n  finishCommitAppointment = (payload, getters, { commitChangedAppointment }: Actions) => {\n    commitChangedAppointment();\n  }\n\n  finishDeleteAppointment = (payload, getters, { commitDeletedAppointment }: Actions) => {\n    commitDeletedAppointment({ deletedAppointmentData: payload });\n  }\n\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedEditing\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that allows implementing a editing calculation logic. */\nexport const IntegratedEditing: React.ComponentType<IntegratedEditingProps> = IntegratedEditingBase;\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport {\n  convertResourcesToPlain, validateResources, addResourcesToAppointments,\n} from '@devexpress/dx-scheduler-core';\nimport { ResourcesProps } from '../types/resources/resources.types';\n\nconst pluginDependencies = [\n  { name: 'Appointments' },\n];\n\nconst addResourcesToTimeTableAppointments = ({\n  timeTableAppointments, resources, plainResources,\n}: Getters) => timeTableAppointments\n  && addResourcesToAppointments(timeTableAppointments[0], resources, plainResources);\nconst addResourcesToAllDayAppointments = ({\n    allDayAppointments, resources, plainResources,\n  }: Getters) => allDayAppointments\n    && addResourcesToAppointments(allDayAppointments[0], resources, plainResources);\n\nconst ResourcesBase: React.SFC<ResourcesProps> = React.memo(({\n  data, mainResourceName, palette,\n}) => {\n  const convertResources = ({ resources }: Getters) =>\n    convertResourcesToPlain(resources);\n\n  return (\n  <Plugin\n    name=\"Resources\"\n    dependencies={pluginDependencies}\n  >\n    <Getter name=\"resources\" value={validateResources(data, mainResourceName, palette)} />\n    <Getter name=\"plainResources\" computed={convertResources} />\n    <Getter name=\"timeTableAppointments\" computed={addResourcesToTimeTableAppointments} />\n    <Getter name=\"allDayAppointments\" computed={addResourcesToAllDayAppointments} />\n  </Plugin>\n  );\n});\n\n/** A plugin that manages schedule's resources. */\nexport const Resources: React.ComponentType<ResourcesProps> = ResourcesBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  Action,\n} from '@devexpress/dx-react-core';\nimport { ConfirmationDialogProps } from '../types/editing/confirmation-dialog.types';\nimport { AppointmentModel } from '@devexpress/dx-scheduler-core';\n\nconst defaultMessages = {\n  discardButton: 'Discard',\n  deleteButton: 'Delete',\n  cancelButton: 'Cancel',\n  confirmDeleteMessage: 'Are you sure you want to delete this appointment?',\n  confirmCancelMessage: 'Discard unsaved changes?',\n};\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst ACTION_TYPES = {\n  CANCEL: 'cancel',\n  DELETE: 'delete',\n};\n\nconst ConfirmationDialogBase: React.SFC<ConfirmationDialogProps> & {components: {\n  overlayComponent: string, containerComponent: string,\n  layoutComponent: string, buttonComponent: string,\n}} = ({\n  messages, overlayComponent: Overlay, layoutComponent: Layout, containerComponent: Container,\n  buttonComponent, ignoreDelete, ignoreCancel,\n}) => {\n  const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n  const modalContainer = React.useRef();\n\n  const [visible, setVisible] = React.useState(false);\n  const [actionType, setActionType] = React.useState('');\n  const [hideActionName, setHideActionName] = React.useState('');\n  const [appointmentData, setAppointmentData] = React.useState({});\n\n  const toggleVisibility = React.useCallback(() => {\n    setVisible(!visible);\n  }, [visible, setVisible]);\n\n  const confirmCancelChanges = React.useCallback((hideAction) => {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.CANCEL);\n  }, [toggleVisibility, setHideActionName, setActionType]);\n\n  const confirmDelete = React.useCallback(({\n    hideActionName: hideAction, appointmentData: changedAppointment,\n  }) => {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.DELETE);\n    setAppointmentData(changedAppointment);\n  }, [toggleVisibility, setHideActionName, setActionType, setAppointmentData]);\n\n  const confirmAction = React.useCallback((\n    isNewAppointment, hideEditor, stopEditAppointment, finishDeleteAppointment,\n    cancelAddedAppointment, cancelChangedAppointment,\n  ) => () => {\n    hideEditor();\n    toggleVisibility();\n    if (isNewAppointment) {\n      cancelAddedAppointment();\n    } else {\n      stopEditAppointment();\n      cancelChangedAppointment();\n    }\n    if (actionType === ACTION_TYPES.DELETE) {\n      finishDeleteAppointment(appointmentData);\n    }\n  }, [toggleVisibility, actionType, appointmentData]);\n\n  return (\n    <Plugin\n      name=\"ConfirmationDialog\"\n      dependencies={pluginDependencies}\n    >\n      {!ignoreCancel &&\n        <Action name=\"openCancelConfirmationDialog\" action={confirmCancelChanges} />\n      }\n      {!ignoreDelete &&\n        <Action name=\"openDeleteConfirmationDialog\" action={confirmDelete} />\n      }\n\n      <Template name=\"schedulerRoot\">\n        <TemplatePlaceholder />\n        <Container ref={modalContainer} />\n        <TemplatePlaceholder name=\"confirmationDialogOverlay\" />\n      </Template>\n\n      <Template name=\"confirmationDialogOverlay\">\n        <TemplateConnector>\n          {({\n            editingAppointment,\n          }, actions) => {\n            const handleConfirm = confirmAction(\n              !editingAppointment, actions[hideActionName], actions.stopEditAppointment,\n              actions.finishDeleteAppointment, actions.cancelAddedAppointment,\n              actions.cancelChangedAppointment,\n            );\n\n            return (\n              <Overlay\n                target={modalContainer}\n                visible={visible}\n                onHide={toggleVisibility}\n              >\n                <Layout\n                  buttonComponent={buttonComponent}\n                  handleCancel={toggleVisibility}\n                  handleConfirm={handleConfirm}\n                  getMessage={getMessage}\n                  isDeleting={actionType === ACTION_TYPES.DELETE}\n                  appointmentData={appointmentData as AppointmentModel}\n                />\n              </Overlay>\n            );\n          }}\n        </TemplateConnector>\n      </Template>\n    </Plugin>\n  );\n};\n\nConfirmationDialogBase.components = {\n  overlayComponent: 'Overlay',\n  containerComponent: 'Container',\n  layoutComponent: 'Layout',\n  buttonComponent: 'Button',\n};\n\nConfirmationDialogBase.defaultProps = {\n  ignoreCancel: false,\n  ignoreDelete: false,\n};\n\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the dialog which allows users to confirm or to discard delete and cancel appointment actions. */\nexport const ConfirmationDialog: React.ComponentType<\n  ConfirmationDialogProps\n> = ConfirmationDialogBase;\n","import * as React from 'react';\nimport {\n  Action, Plugin, Getter, StateHelper, ActionFn, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  ToggleGroupPayload, toggleExpandedGroups, HORIZONTAL_GROUP_ORIENTATION,\n} from '@devexpress/dx-scheduler-core';\nimport { GroupingStateProps, GroupingStateState } from '../types';\n\nclass GroupingStateBase extends React.PureComponent<GroupingStateProps, GroupingStateState> {\n  static defaultProps = {\n    defaultExpandedGroups: [],\n    groupByDate: () => false,\n    groupOrientation: () => HORIZONTAL_GROUP_ORIENTATION,\n  };\n  stateHelper: StateHelper;\n  toggleGroupExpanded: ActionFn<ToggleGroupPayload>;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouping: props.grouping,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups,\n    };\n    this.stateHelper = createStateHelper(\n      this,\n      {\n        expandedGroups: () => {\n          const { onExpandedGroupsChange } = this.props;\n          return onExpandedGroupsChange;\n        },\n      },\n    );\n    this.toggleGroupExpanded = this.stateHelper.applyReducer\n      .bind(this.stateHelper, toggleExpandedGroups);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      grouping = prevState.grouping,\n      expandedGroups = prevState.expandedGroups,\n    } = nextProps;\n\n    return { grouping, expandedGroups };\n  }\n\n  render() {\n    const { grouping, expandedGroups } = this.state;\n    const { groupByDate, groupOrientation } = this.props;\n\n    return (\n      <Plugin name=\"GroupingState\">\n        <Getter name=\"grouping\" value={grouping} />\n        <Getter name=\"groupByDate\" value={groupByDate} />\n        <Getter name=\"groupOrientation\" value={groupOrientation} />\n\n        <Getter name=\"expandedGroups\" value={expandedGroups} />\n        <Action name=\"toggleGroupExpanded\" action={this.toggleGroupExpanded} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the grouping state. */\nexport const GroupingState: React.ComponentType<GroupingStateProps> = GroupingStateBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { GroupingPanelProps } from '../types';\nimport {\n  VERTICAL_VIEW_LEFT_OFFSET, HORIZONTAL_VIEW_LEFT_OFFSET,\n  HORIZONTAL_GROUP_ORIENTATION, VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n  { name: 'IntegratedGrouping' },\n  { name: 'DayView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'ViewState', optional: true },\n];\n\nclass GroupingPanelBase extends React.PureComponent<GroupingPanelProps> {\n  static components: PluginComponents = {\n    horizontalLayoutComponent: 'HorizontalLayout',\n    verticalLayoutComponent: 'VerticalLayout',\n    rowComponent: 'Row',\n    cellComponent: 'Cell',\n  };\n\n  render() {\n    const {\n      horizontalLayoutComponent: HorizontalLayout,\n      verticalLayoutComponent: VerticalLayout,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"GroupingPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"groupingPanel\">\n          <TemplateConnector>\n            {({\n              viewCellsData, currentView, scrollingStrategy, allDayPanelExists,\n              groupByDate, groupOrientation: getGroupOrientation, groups,\n            }) => {\n              const groupOrientation = getGroupOrientation(currentView?.name);\n              return groupOrientation === HORIZONTAL_GROUP_ORIENTATION ? (\n                <HorizontalLayout\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                  groups={groups}\n                  colSpan={viewCellsData[0].length}\n                  cellStyle={{\n                    left: scrollingStrategy.fixedLeftWidth ? scrollingStrategy.fixedLeftWidth\n                    : currentView?.type === VIEW_TYPES.MONTH\n                      ? HORIZONTAL_VIEW_LEFT_OFFSET\n                      : VERTICAL_VIEW_LEFT_OFFSET,\n                  }}\n                  showHeaderForEveryDate={groupByDate?.(currentView && currentView.name)}\n                />\n              ) : (\n                <VerticalLayout\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                  groups={groups}\n                  rowSpan={viewCellsData.length}\n                  viewType={currentView?.type}\n                  cellTextTopOffset={scrollingStrategy?.fixedTopHeight}\n                  alignWithAllDayRow={allDayPanelExists}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the grouping panel used to display group names. */\nexport const GroupingPanel: React.ComponentType<GroupingPanelProps> = GroupingPanelBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  isMonthCell, isShadedAppointment,\n  isCellShaded, getCurrentTimeIndicatorTop,\n} from '@devexpress/dx-scheduler-core';\nimport { CurrentTimeIndicatorProps, Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'DragDropProvider', optional: true },\n  { name: 'Appointments', optional: true },\n];\n\nconst CurrentTimeIndicatorBase: React.SFC<CurrentTimeIndicatorProps>  & {components: {\n  indicatorComponent: string,\n}} = ({\n  indicatorComponent, shadePreviousAppointments, shadePreviousCells, updateInterval,\n}) => {\n  const [currentTime, setCurrentTime] = React.useState(Date.now);\n\n  React.useEffect(() => {\n    const tick = () => setCurrentTime(Date.now());\n    const intervalId = (updateInterval\n      ? window.setInterval(tick, updateInterval)\n      : undefined\n    );\n    return () => window.clearInterval(intervalId);\n  }, [updateInterval]);\n\n  return (\n    <Plugin\n      name=\"CurrentTimeIndicator\"\n      dependencies={pluginDependencies}\n    >\n      <Template\n        name=\"cell\"\n        predicate={({ otherMonth }: any) => !isMonthCell(otherMonth)}\n      >\n        {(params: any) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              currentTimeIndicatorPosition: getCurrentTimeIndicatorTop(params, currentTime),\n              currentTimeIndicatorComponent: indicatorComponent,\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"cell\"\n      >\n        {(params: any) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isCellShaded(params, currentTime, shadePreviousCells),\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"appointmentContent\"\n      >\n        {(params: Appointments.AppointmentProps) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isShadedAppointment(\n                params, currentTime, shadePreviousAppointments,\n              ),\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"draftAppointment\"\n      >\n        {(params: Appointments.AppointmentProps) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isShadedAppointment(\n                params, currentTime, shadePreviousAppointments,\n              ),\n            }}\n          />\n        )}\n      </Template>\n    </Plugin>\n  );\n};\n\nCurrentTimeIndicatorBase.defaultProps = {\n  updateInterval: 60000,\n  shadePreviousCells: false,\n  shadePreviousAppointments: false,\n};\n\nCurrentTimeIndicatorBase.components = {\n  indicatorComponent: 'Indicator',\n};\n\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the current time indicator and the shading that covers appointments and timetable cells up to the current time. */\nexport const CurrentTimeIndicator: React.ComponentType<\n  CurrentTimeIndicatorProps\n> = CurrentTimeIndicatorBase;\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport {\n  getGroupsFromResources, expandViewCellsDataWithGroups,\n  sortFilteredResources, filterResourcesByGrouping, updateGroupingWithMainResource,\n  expandGroups, VERTICAL_GROUP_ORIENTATION, VIEW_TYPES,\n  updateTimeTableCellElementsMeta, updateAllDayCellElementsMeta, updateTimeCellsData,\n} from '@devexpress/dx-scheduler-core';\nimport { IntegratedGroupingProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Resources' },\n  { name: 'GroupingState' },\n  { name: 'DayView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'WeekView', optional: true },\n];\n\nconst getViewCellsDataComputed = ({\n  viewCellsData, groups, resourcesToGroupBy, groupByDate, currentView, groupOrientation,\n}: Getters) => expandViewCellsDataWithGroups(\n  viewCellsData, groups, resourcesToGroupBy,\n  groupByDate(currentView.name), groupOrientation(currentView.name),\n);\nconst getAllDayCellsDataComputed = ({\n  allDayCellsData, groups, resourcesToGroupBy, groupByDate, currentView, groupOrientation,\n}: Getters) => allDayCellsData && expandViewCellsDataWithGroups(\n  allDayCellsData, groups, resourcesToGroupBy,\n  groupByDate(currentView.name), groupOrientation(currentView.name),\n);\n\nconst getGroupsComputed = (\n  { resourcesToGroupBy }: Getters,\n) => getGroupsFromResources(resourcesToGroupBy);\n\nconst getResourcesToGroupByComputed = (\n  { resources, grouping }: Getters,\n) => sortFilteredResources(filterResourcesByGrouping(resources, grouping), grouping);\n\nconst getGroupingComputed = (\n  { grouping, resources }: Getters,\n) => updateGroupingWithMainResource(grouping, resources);\n\nconst getTimeTableAppointmentsComputed = ({\n  timeTableAppointments, grouping, resourcesToGroupBy,\n  groups, groupByDate, currentView, excludedDays,\n}: Getters) => timeTableAppointments\n  && expandGroups(\n    timeTableAppointments, grouping, resourcesToGroupBy, groups,\n    excludedDays, groupByDate(currentView?.name) && currentView?.type === VIEW_TYPES.MONTH,\n  );\n\nconst getAllDayAppointmentsComputed = ({\n    allDayAppointments, grouping, resourcesToGroupBy,\n    groups, groupByDate, currentView, excludedDays,\n  }: Getters) => allDayAppointments &&\n  expandGroups(\n    allDayAppointments, grouping, resourcesToGroupBy,\n    groups, excludedDays, groupByDate(currentView?.name),\n  );\n\nconst getGroupByDateComputed = ({\n  currentView, groupByDate, groupOrientation,\n}: Getters) => groupOrientation(currentView?.name) === VERTICAL_GROUP_ORIENTATION\n  ? () => false : groupByDate;\n\nconst getTimeTableElementsMetaComputed = ({\n  timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView,\n}: Getters) => updateTimeTableCellElementsMeta(\n  timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView,\n);\n\nconst getAllDayElementsMetaComputed = ({\n  allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups,\n  allDayPanelExists, viewCellsData, currentView,\n}: Getters) => updateAllDayCellElementsMeta(\n  allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups,\n  allDayPanelExists, viewCellsData, currentView,\n);\n\nconst getTimeCellsDataComputed = ({\n  viewCellsData, timeCellsData,  currentView,\n  groups, resourcesToGroupBy, groupOrientation,\n}: Getters) => timeCellsData\n  && updateTimeCellsData(\n    viewCellsData,\n    timeCellsData,\n    groups,\n    resourcesToGroupBy,\n    groupOrientation(currentView.name),\n  );\n\nconst IntegratedGroupingBase: React.SFC<IntegratedGroupingProps> = React.memo(() => (\n  <Plugin\n    name=\"IntegratedGrouping\"\n    dependencies={pluginDependencies}\n  >\n    <Getter name=\"groupByDate\" computed={getGroupByDateComputed} />\n    <Getter name=\"grouping\" computed={getGroupingComputed} />\n    <Getter name=\"resourcesToGroupBy\" computed={getResourcesToGroupByComputed} />\n    <Getter name=\"groups\" computed={getGroupsComputed} />\n\n    <Getter name=\"viewCellsData\" computed={getViewCellsDataComputed} />\n    <Getter name=\"allDayCellsData\" computed={getAllDayCellsDataComputed} />\n    <Getter name=\"timeCellsData\" computed={getTimeCellsDataComputed} />\n\n    <Getter name=\"timeTableAppointments\" computed={getTimeTableAppointmentsComputed} />\n    <Getter name=\"allDayAppointments\" computed={getAllDayAppointmentsComputed} />\n\n    <Getter name=\"allDayElementsMeta\" computed={getAllDayElementsMetaComputed} />\n    <Getter name=\"timeTableElementsMeta\" computed={getTimeTableElementsMetaComputed} />\n  </Plugin>\n));\n\n/** A plugin that implements grouping. */\nexport const IntegratedGrouping: React.ComponentType<\n  IntegratedGroupingProps\n> = IntegratedGroupingBase;\n"]},"metadata":{},"sourceType":"module"}